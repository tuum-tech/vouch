{"version":3,"sources":["../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","hooks/useRequests.tsx","store/requests/types.ts","store/requests/actions.ts","store/requests/reducer.ts","store/providers/actions.ts","store/providers/types.ts","store/providers/reducer.ts","hooks/useDID.tsx","store/auth/types.ts","store/auth/actions.ts","store/auth/reducer.ts","pages/CredentialCode.ts","hooks/useIncomingRequests.tsx","hooks/useProviderServices.tsx","pages/Home.tsx","hooks/useProvider.tsx","hooks/useValidation.tsx","pages/ServiceInvoke.tsx","pages/Pleasewait.tsx","pages/RequestBlocks.tsx","hooks/useIncomingRequestsByDid.tsx","pages/Requests.tsx","pages/Profile.tsx","hooks/useCredSaver.tsx","hooks/useCredSaved.tsx","hooks/useCancelRequest.tsx","hooks/useApproveRequest.tsx","hooks/useRejectRequest.tsx","hooks/useCredIssue.tsx","pages/Details.tsx","pages/SplashScreen.tsx","pages/OnBoarding.tsx","pages/SignIn.tsx","pages/Support.tsx","pages/IntentServiceInvoke.tsx","pages/IntentDetails.tsx","hooks/useRequest.tsx","pages/CredentialType.ts","hooks/useRegisterValidator.tsx","pages/RegisterValidator.tsx","App.tsx","store/index.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","useRequests","optionalCallback","noop","allRequests","userinfo","a","url","fetch","method","mode","cache","credentials","headers","process","redirect","referrerPolicy","response","json","did","split","pop","getData","meta","data","emailValidation","txn","callback","dispatch","emailValidationSuccess","type","payload","nameValidation","nameValidationSuccess","telephoneValidation","telephoneValidationSuccess","genderValidation","genderValidationSuccess","locationValidation","locationValidationSuccess","birthdateValidation","birthdateValidationSuccess","birthplaceValidation","birthplaceValidationSuccess","educationValidation","educationValidationSuccess","occupationValidation","occupationValidationSuccess","websiteValidation","websiteValidationSuccess","wechatValidation","wechatValidationSuccess","instagramValidation","instagramValidationSuccess","facebookValidation","facebookValidationSuccess","snapchatValidation","snapchatValidationSuccess","twitterValidation","twitterValidationSuccess","telegramValidation","telegramValidationSuccess","twitchValidation","twitchValidationSuccess","weiboValidation","weiboValidationSuccess","paypalValidation","paypalValidationSuccess","elaValidation","elaValidationSuccess","setSelectedTabRequests","showNotification","text","getAllRequests","getAllRequestsSuccess","getIncomingRequests","getIncomingRequestsSuccess","credSavedSuccess","requestCancelled","requestCancelledSuccess","Storage","get","key","requestIds","value","remainingPendingRequests","JSON","parse","filter","set","stringify","requestApprovedSuccess","requestRejectedSuccess","initialState","selected_tab_txn","selected_tab_name","incoming_txn","pending_txn","approved_txn","rejected_txn","expired_txn","cancelled_txn","notification","show","message","Plugins","getEmailValidationProviders","emailValidationProviders","getEmailValidationProvidersSuccess","getNameValidationProviders","nameValidationProviders","getNameValidationProvidersSuccess","getTelephoneValidationProviders","telephoneValidationProviders","getTelephoneValidationProvidersSuccess","getGenderValidationProviders","genderValidationProviders","getGenderValidationProvidersSuccess","getLocationValidationProviders","locationValidationProviders","getLocationValidationProvidersSuccess","getBirthdateValidationProviders","birthdateValidationProviders","getBirthdateValidationProvidersSuccess","getBirthplaceValidationProviders","birthplaceValidationProviders","getBirthplaceValidationProvidersSuccess","getEducationValidationProviders","educationValidationProviders","getEducationValidationProvidersSuccess","getOccupationValidationProviders","occupationValidationProviders","getOccupationValidationProvidersSuccess","getWebsiteValidationProviders","websiteValidationProviders","getWebsiteValidationProvidersSuccess","getWechatValidationProviders","wechatValidationProviders","getWechatValidationProvidersSuccess","getInstagramValidationProviders","instagramValidationProviders","getInstagramValidationProvidersSuccess","getFacebookValidationProviders","facebookValidationProviders","getFacebookValidationProvidersSuccess","getSnapchatValidationProviders","snapchatValidationProviders","getSnapchatValidationProvidersSuccess","getTwitterValidationProviders","twitterValidationProviders","getTwitterValidationProvidersSuccess","getTelegramValidationProviders","telegramValidationProviders","getTelegramValidationProvidersSuccess","getTwitchValidationProviders","twitchValidationProviders","getTwitchValidationProvidersSuccess","getWeiboValidationProviders","weiboValidationProviders","getWeiboValidationProvidersSuccess","getPaypalValidationProviders","paypalValidationProviders","getPaypalValidationProvidersSuccess","getElaValidationProviders","elaValidationProviders","getElaValidationProvidersSuccess","getProviderServices","providerServices","getProviderServicesSuccess","setProviderServicesSuccess","useDID","signIn","claims","appManager","sendIntent","result","presentation","didManager","VerifiablePresentationBuilder","fromJson","getCredentials","login","user","savedUser","mergedUserData","savedUserData","length","loginSuccess","authCheckStatus","callback2","CredentialCode","getBase64Image","obj","getBase64ImageDefault","useProviderServices","services","React","memo","history","useState","selectValidationService","setSelectValidationService","open","event","undefined","showPopover","setShowPopover","validationType","requestParams","created","status","filteredIncomingTxn","setFilteredIncomingTxn","useDispatch","useSelector","state","auth","all_requests","requests","incoming_requests","pending_requests","validationProviders","sendGetIncomingRequests","sendGetProviderServices","useIonViewWillEnter","sendGetAllRequestsReq","incomingRequests","providerId","useIncomingRequests","filterIncomingTxn","useEffect","validationTypes","credSubjects","cred","credentialSubject","assign","relativeTime","datetime","moment","utc","fromNow","pendingIncomingRequests","className","src","color","position","isOpen","slot","onIonRefresh","setTimeout","detail","complete","pullFactor","pullMin","pullMax","pullingText","refreshingSpinner","refreshingText","size","style","padding","alt","avatar","paddingLeft","name","fill","routerLink","fontWeight","onDidDismiss","cssClass","values","credCode","onClick","selectedValidationService","push","pathname","credentialType","paddingRight","charAt","toUpperCase","slice","width","backgroundColor","border","nativeEvent","height","top","transform","display","class","shape","useProvider","providers","isComplete","useValidation","validationRequest","body","provider","postData","duplicate","validationtx","ServiceInvokePage","location","goTo","useCallback","path","direction","myIconListener","menuIcon","titleBarManager","setIcon","iconPath","addOnItemClickedListener","sendGetValidationProvidersReq","useIonViewWillLeave","removeOnItemClickedListener","param","validator","sendMessage","console","log","err","sendValidationRequest","providerid","some","vp","validationProvider","data-validationtype","data-providerid","currentTarget","getAttribute","claim","publisheddid","handleValidationProviderClick","logo","stats","reduce","b","Approved","Rejected","previous","PleaseWaitPage","RequestBlocks","props","requests_txn","tabName","margin","useIncomingRequestsByDid","outgoingTxn","incomingTxn","scrollable","onIonChange","tab_event","handleClick","disabled","marginLeft","rows","cols","readonly","elementId","copyText","document","querySelector","getElementsByTagName","select","execCommand","email","telephone","useCancelRequest","confirmation_id","DetailsPage","useParams","requestType","requestDetails","validation","formatTime","format","credSave","verifiedCredential","useCredSaver","sendCredSaved","sendCredSaveIntent","credSaved","useCredSaved","credIss","credential","useCredIssue","sendApproveRequest","confirmationId","sendCredIssueIntent","sendCancelRequest","requestApproved","useApproveRequest","requestRejected","useRejectRequest","sendRejectRequest","borderRadius","verticalAlign","issuanceDate","expirationDate","marginTop","next_steps","step","index","handleCancelRequestClick","handleSaveCredClick","isSavedOnProfile","handleRejectRequestClick","validationtype","credIssueRequestData","identifier","types","subjectdid","replace","properties","d","Date","expirationdate","getFullYear","getMonth","getDate","toISOString","handleApproveRequestClick","SplashScreenPage","onDeviceReady","hasOnboarded","hasUserdata","intentData","parsedIntentData","params","addEventListener","removeEventListener","fullscreen","OnBoardingPage","showTutorial","setShowTutorial","header","buttons","SignInPage","IntentServiceInvokePage","setCredentialType","counter","setCounter","showCounter","setShowCounter","getIntentCredentialType","credType","timer","setInterval","toString","closeIntent","clearInterval","sendIntentResponse","action","intentId","success","remove","close","error","expand","IntentDetailsPage","useRequest","request","CredentialType","val","EMAIL","BASIC_PROFILE_CREDENTIAL","isChecked","NAME","TELEPHONE","GENDER","LOCATION","BIRTHDATE","BIRTHPLACE","EDUCATION","OCCUPATION","WEBSITE","WECHAT","INTERNET_ACCOUNT_CREDENTIAL","INSTAGRAM","FACEBOOK","SNAPCHAT","TWITTER","TELEGRAM","TWITCH","WEIBO","PAYPAL","ELA","checkedItems","setCheckedItems","updateItem","newIsChecked","findIndex","x","g","populateRegisteredServices","forEach","service","sendRegisterValidatorRequest","registerValidatorRequest","useRegisterValidator","setProviderServices","checked","tempServices","s","i","constructor","handleSubmitRequestClick","initServiceListener","setListener","rpcMessage","parsedPendingRequests","checkIncomingRequests","checkPendingRequests","onReceiveIntent","intent","from","setTitle","setBackgroundColor","setForegroundMode","setVisible","storeIncomingRequests","newIncomingRequests","userdata","parsedIncomingRequests","remainingIncomingRequests","title","notify","sendGetRequest","intervalTime","parseInt","notificationManager","sendNotification","App","createBrowserHistory","go","getStartupMode","startupInfo","startupMode","setIntentListener","component","SplashScreen","exact","OnBoarding","SignIn","render","to","RegisterValidator","IntentServiceInvoke","IntentDetails","Home","ServiceInvoke","PleaseWait","Details","tab","href","img-src","rootReducer","combineReducers","all_txn","sort","date","getTime","incoming_txn_new","incoming_txn_history","concat","t","filtered_txn","filtered_incoming_txn","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","store","getElementById"],"mappings":"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","file":"static/js/main.cfa0b300.chunk.js","sourcesContent":["var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t180,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 109;\nmodule.exports = webpackAsyncContext;","export function useRequests(optionalCallback: any = noop) {\n\n  const allRequests = (userinfo: any) => {\n    /**\n     * Request to get all the requests for this user to the backend API.\n     */\n\n      async function getData(url = '') {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      if(userinfo && userinfo.id){\n        const did = userinfo.id.split(':').pop();\n        getData(`${process.env.REACT_APP_GET_ALL_VALIDATION_REQUESTS}` + did)\n        .then(response => {\n          if(response.meta.code === 200){\n            optionalCallback(response.data);          \n          }\n        });\n      }\n\n  }\n  return [allRequests] as [(obj: any) => void]\n}\n\nfunction noop() {}","export const EMAIL_VALIDATION_REQUEST = \"EMAIL_VALIDATION_REQUEST\";\nexport const EMAIL_VALIDATION_REQUEST_SUCCESS = \"EMAIL_VALIDATION_REQUEST_SUCCESS\";\n\nexport const NAME_VALIDATION_REQUEST = \"NAME_VALIDATION_REQUEST\";\nexport const NAME_VALIDATION_REQUEST_SUCCESS = \"NAME_VALIDATION_REQUEST_SUCCESS\";\n\nexport const TELEPHONE_VALIDATION_REQUEST = \"TELEPHONE_VALIDATION_REQUEST\";\nexport const TELEPHONE_VALIDATION_REQUEST_SUCCESS = \"TELEPHONE_VALIDATION_REQUEST_SUCCESS\";\n\nexport const GENDER_VALIDATION_REQUEST = \"GENDER_VALIDATION_REQUEST\";\nexport const GENDER_VALIDATION_REQUEST_SUCCESS = \"GENDER_VALIDATION_REQUEST_SUCCESS\";\n\nexport const LOCATION_VALIDATION_REQUEST = \"LOCATION_VALIDATION_REQUEST\";\nexport const LOCATION_VALIDATION_REQUEST_SUCCESS = \"LOCATION_VALIDATION_REQUEST_SUCCESS\";\n\nexport const BIRTHDATE_VALIDATION_REQUEST = \"BIRTHDATE_VALIDATION_REQUEST\";\nexport const BIRTHDATE_VALIDATION_REQUEST_SUCCESS = \"BIRTHDATE_VALIDATION_REQUEST_SUCCESS\";\n\nexport const BIRTHPLACE_VALIDATION_REQUEST = \"BIRTHPLACE_VALIDATION_REQUEST\";\nexport const BIRTHPLACE_VALIDATION_REQUEST_SUCCESS = \"BIRTHPLACE_VALIDATION_REQUEST_SUCCESS\";\n\nexport const EDUCATION_VALIDATION_REQUEST = \"EDUCATION_VALIDATION_REQUEST\";\nexport const EDUCATION_VALIDATION_REQUEST_SUCCESS = \"EDUCATION_VALIDATION_REQUEST_SUCCESS\";\n\nexport const OCCUPATION_VALIDATION_REQUEST = \"OCCUPATION_VALIDATION_REQUEST\";\nexport const OCCUPATION_VALIDATION_REQUEST_SUCCESS = \"OCCUPATION_VALIDATION_REQUEST_SUCCESS\";\n\nexport const WEBSITE_VALIDATION_REQUEST = \"WEBSITE_VALIDATION_REQUEST\";\nexport const WEBSITE_VALIDATION_REQUEST_SUCCESS = \"WEBSITE_VALIDATION_REQUEST_SUCCESS\";\n\nexport const WECHAT_VALIDATION_REQUEST = \"WECHAT_VALIDATION_REQUEST\";\nexport const WECHAT_VALIDATION_REQUEST_SUCCESS = \"WECHAT_VALIDATION_REQUEST_SUCCESS\";\n\nexport const INSTAGRAM_VALIDATION_REQUEST = \"INSTAGRAM_VALIDATION_REQUEST\";\nexport const INSTAGRAM_VALIDATION_REQUEST_SUCCESS = \"INSTAGRAM_VALIDATION_REQUEST_SUCCESS\";\n\nexport const FACEBOOK_VALIDATION_REQUEST = \"FACEBOOK_VALIDATION_REQUEST\";\nexport const FACEBOOK_VALIDATION_REQUEST_SUCCESS = \"FACEBOOK_VALIDATION_REQUEST_SUCCESS\";\n\nexport const SNAPCHAT_VALIDATION_REQUEST = \"SNAPCHAT_VALIDATION_REQUEST\";\nexport const SNAPCHAT_VALIDATION_REQUEST_SUCCESS = \"SNAPCHAT_VALIDATION_REQUEST_SUCCESS\";\n\nexport const TWITTER_VALIDATION_REQUEST = \"TWITTER_VALIDATION_REQUEST\";\nexport const TWITTER_VALIDATION_REQUEST_SUCCESS = \"TWITTER_VALIDATION_REQUEST_SUCCESS\";\n\nexport const TELEGRAM_VALIDATION_REQUEST = \"TELEGRAM_VALIDATION_REQUEST\";\nexport const TELEGRAM_VALIDATION_REQUEST_SUCCESS = \"TELEGRAM_VALIDATION_REQUEST_SUCCESS\";\n\nexport const TWITCH_VALIDATION_REQUEST = \"TWITCH_VALIDATION_REQUEST\";\nexport const TWITCH_VALIDATION_REQUEST_SUCCESS = \"TWITCH_VALIDATION_REQUEST_SUCCESS\";\n\nexport const WEIBO_VALIDATION_REQUEST = \"WEIBO_VALIDATION_REQUEST\";\nexport const WEIBO_VALIDATION_REQUEST_SUCCESS = \"WEIBO_VALIDATION_REQUEST_SUCCESS\";\n\nexport const PAYPAL_VALIDATION_REQUEST = \"PAYPAL_VALIDATION_REQUEST\";\nexport const PAYPAL_VALIDATION_REQUEST_SUCCESS = \"PAYPAL_VALIDATION_REQUEST_SUCCESS\";\n\nexport const ELA_VALIDATION_REQUEST = \"ELA_VALIDATION_REQUEST\";\nexport const ELA_VALIDATION_REQUEST_SUCCESS = \"ELA_VALIDATION_REQUEST_SUCCESS\";\n\nexport const GET_ALL_REQUESTS = \"GET_ALL_REQUESTS\";\nexport const GET_ALL_REQUESTS_SUCCESS = \"GET_ALL_REQUESTS_SUCCESS\";\n\nexport const GET_INCOMING_REQUESTS = \"GET_INCOMING_REQUESTS\";\nexport const GET_INCOMING_REQUESTS_SUCCESS = \"GET_INCOMING_REQUESTS_SUCCESS\";\n\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";\n\nexport const SET_SELECTED_TAB_REQUESTS = \"SET_SELECTED_TAB_REQUESTS\";\n\nexport const CRED_SAVED = \"CRED_SAVED\";\nexport const CRED_SAVED_SUCCESS = \"CRED_SAVED_SUCCESS\";\n\nexport const REQUEST_CANCELLED = \"REQUEST_CANCELLED\";\nexport const REQUEST_CANCELLED_SUCCESS = \"REQUEST_CANCELLED_SUCCESS\";\n\nexport const REQUEST_APPROVED = \"REQUEST_APPROVED\";\nexport const REQUEST_APPROVED_SUCCESS = \"REQUEST_APPROVED_SUCCESS\";\n\nexport const REQUEST_REJECTED = \"REQUEST_REJECTED\";\nexport const REQUEST_REJECTED_SUCCESS = \"REQUEST_REJECTED_SUCCESS\";\n\nexport interface TxnState {\n  txn: any;\n  selected_tab_txn: any;\n  selected_tab_name: any;\n  incoming_txn: any;\n  pending_txn: any;\n  approved_txn: any;\n  rejected_txn: any;\n  expired_txn: any;\n  cancelled_txn: any;\n  notification: any;\n}\n\ninterface EmailValidationRequestAction {\n    type: typeof EMAIL_VALIDATION_REQUEST;\n    payload?: any\n}\n\ninterface EmailValidationRequestSuccessAction {\n    type: typeof EMAIL_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n}  \n\ninterface NameValidationRequestAction {\n    type: typeof NAME_VALIDATION_REQUEST;\n    payload?: any\n}\n\ninterface NameValidationRequestSuccessAction {\n    type: typeof NAME_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n}  \n\ninterface PhoneValidationRequestAction {\n    type: typeof TELEPHONE_VALIDATION_REQUEST;\n    payload?: any\n}\n\ninterface PhoneValidationRequestSuccessAction {\n    type: typeof TELEPHONE_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n}  \n\ninterface GenderValidationRequestAction {\n    type: typeof GENDER_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface GenderValidationRequestSuccessAction {\n    type: typeof GENDER_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface LocationValidationRequestAction {\n    type: typeof LOCATION_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface LocationValidationRequestSuccessAction {\n    type: typeof LOCATION_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface BirthdateValidationRequestAction {\n    type: typeof BIRTHDATE_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface BirthdateValidationRequestSuccessAction {\n    type: typeof BIRTHDATE_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface BirthplaceValidationRequestAction {\n    type: typeof BIRTHPLACE_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface BirthplaceValidationRequestSuccessAction {\n    type: typeof BIRTHPLACE_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface EducationValidationRequestAction {\n    type: typeof EDUCATION_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface EducationValidationRequestSuccessAction {\n    type: typeof EDUCATION_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface OccupationValidationRequestAction {\n    type: typeof OCCUPATION_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface OccupationValidationRequestSuccessAction {\n    type: typeof OCCUPATION_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n\n  interface WebsiteValidationRequestAction {\n    type: typeof WEBSITE_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface WebsiteValidationRequestSuccessAction {\n    type: typeof WEBSITE_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }  \n\n  interface WechatValidationRequestAction {\n    type: typeof WECHAT_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface WechatValidationRequestSuccessAction {\n    type: typeof WECHAT_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface InstagramValidationRequestAction {\n    type: typeof INSTAGRAM_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface InstagramValidationRequestSuccessAction {\n    type: typeof INSTAGRAM_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface FacebookValidationRequestAction {\n    type: typeof FACEBOOK_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface FacebookValidationRequestSuccessAction {\n    type: typeof FACEBOOK_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface SnapchatValidationRequestAction {\n    type: typeof SNAPCHAT_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface SnapchatValidationRequestSuccessAction {\n    type: typeof SNAPCHAT_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface TwitterValidationRequestAction {\n    type: typeof TWITTER_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface TwitterValidationRequestSuccessAction {\n    type: typeof TWITTER_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface TelegramValidationRequestAction {\n    type: typeof TELEGRAM_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface TelegramValidationRequestSuccessAction {\n    type: typeof TELEGRAM_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n\n  interface TwitchValidationRequestAction {\n    type: typeof TWITCH_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface TwitchValidationRequestSuccessAction {\n    type: typeof TWITCH_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n\n  interface WeiboValidationRequestAction {\n    type: typeof WEIBO_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface WeiboValidationRequestSuccessAction {\n    type: typeof WEIBO_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }  \n\n  interface PaypalValidationRequestAction {\n    type: typeof PAYPAL_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface PaypalValidationRequestSuccessAction {\n    type: typeof PAYPAL_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n  \n  interface ElaValidationRequestAction {\n    type: typeof ELA_VALIDATION_REQUEST;\n    payload?: any\n  }  \n  \n  interface ElaValidationRequestSuccessAction {\n    type: typeof ELA_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n  }\n\ninterface GetAllRequestsAction {\n    type: typeof GET_ALL_REQUESTS;\n    payload?: any\n}  \n\ninterface GetAllRequestsSuccessAction {\n    type: typeof GET_ALL_REQUESTS_SUCCESS;\n    payload?: any\n}  \n\ninterface GetIncomingRequestsAction {\n    type: typeof GET_INCOMING_REQUESTS;\n    payload?: any\n}  \n\ninterface GetIncomingRequestsSuccessAction {\n    type: typeof GET_INCOMING_REQUESTS_SUCCESS;\n    payload?: any\n} \n\ninterface SetSelectedTabRequestsAction {\n    type: typeof SET_SELECTED_TAB_REQUESTS;\n    payload?: any\n}  \n\ninterface ShowNotificationAction {\n    type: typeof SHOW_NOTIFICATION;\n    payload?: any\n}\n\ninterface HideNotificationAction {\n    type: typeof HIDE_NOTIFICATION;\n    payload?: any    \n}\n\ninterface CredSavedAction {\n    type: typeof CRED_SAVED;\n    payload?: any\n}\n\ninterface CredSavedSuccessAction {\n    type: typeof CRED_SAVED_SUCCESS;\n    payload?: any\n}  \n\ninterface RequestCancelledAction {\n    type: typeof REQUEST_CANCELLED;\n    payload?: any\n}\n\ninterface RequestCancelledSuccessAction {\n    type: typeof REQUEST_CANCELLED_SUCCESS;\n    payload?: any\n}  \n\ninterface RequestApprovedAction {\n    type: typeof REQUEST_APPROVED;\n    payload?: any\n}\n\ninterface RequestApprovedSuccessAction {\n    type: typeof REQUEST_APPROVED_SUCCESS;\n    payload?: any\n}  \n\ninterface RequestRejectedAction {\n    type: typeof REQUEST_REJECTED;\n    payload?: any\n}\n\ninterface RequestRejectedSuccessAction {\n    type: typeof REQUEST_REJECTED_SUCCESS;\n    payload?: any\n}  \n\nexport type TxnActionTypes =\n    | EmailValidationRequestAction\n    | EmailValidationRequestSuccessAction\n    | NameValidationRequestAction\n    | NameValidationRequestSuccessAction\n    | PhoneValidationRequestAction\n    | PhoneValidationRequestSuccessAction\n    | GenderValidationRequestAction\n    | GenderValidationRequestSuccessAction\n    | LocationValidationRequestAction\n    | LocationValidationRequestSuccessAction\n    | BirthdateValidationRequestAction\n    | BirthdateValidationRequestSuccessAction\n    | BirthplaceValidationRequestAction\n    | BirthplaceValidationRequestSuccessAction\n    | EducationValidationRequestAction\n    | EducationValidationRequestSuccessAction\n    | OccupationValidationRequestAction\n    | OccupationValidationRequestSuccessAction\n    | WebsiteValidationRequestAction\n    | WebsiteValidationRequestSuccessAction    \n    | WechatValidationRequestAction\n    | WechatValidationRequestSuccessAction\n    | InstagramValidationRequestAction\n    | InstagramValidationRequestSuccessAction\n    | FacebookValidationRequestAction\n    | FacebookValidationRequestSuccessAction\n    | SnapchatValidationRequestAction\n    | SnapchatValidationRequestSuccessAction\n    | TwitterValidationRequestAction\n    | TwitterValidationRequestSuccessAction\n    | TelegramValidationRequestAction\n    | TelegramValidationRequestSuccessAction\n    | TwitchValidationRequestAction\n    | TwitchValidationRequestSuccessAction\n    | WeiboValidationRequestAction\n    | WeiboValidationRequestSuccessAction    \n    | PaypalValidationRequestAction\n    | PaypalValidationRequestSuccessAction\n    | ElaValidationRequestAction\n    | ElaValidationRequestSuccessAction    \n    | GetAllRequestsAction\n    | GetAllRequestsSuccessAction\n    | GetIncomingRequestsAction\n    | GetIncomingRequestsSuccessAction\n    | SetSelectedTabRequestsAction\n    | ShowNotificationAction\n    | HideNotificationAction\n    | CredSavedAction\n    | CredSavedSuccessAction\n    | RequestCancelledAction\n    | RequestCancelledSuccessAction\n    | RequestApprovedAction\n    | RequestApprovedSuccessAction\n    | RequestRejectedAction\n    | RequestRejectedSuccessAction        ","import {\n    TxnActionTypes,\n    EMAIL_VALIDATION_REQUEST_SUCCESS,\n    GET_ALL_REQUESTS_SUCCESS,\n    GET_INCOMING_REQUESTS_SUCCESS,\n    SET_SELECTED_TAB_REQUESTS,\n    CRED_SAVED_SUCCESS,\n    REQUEST_CANCELLED_SUCCESS,\n    REQUEST_APPROVED_SUCCESS,\n    REQUEST_REJECTED_SUCCESS,\n    NAME_VALIDATION_REQUEST_SUCCESS,\n    TELEPHONE_VALIDATION_REQUEST_SUCCESS,\n    GENDER_VALIDATION_REQUEST_SUCCESS,\n    LOCATION_VALIDATION_REQUEST_SUCCESS,\n    BIRTHDATE_VALIDATION_REQUEST_SUCCESS,\n    BIRTHPLACE_VALIDATION_REQUEST_SUCCESS,\n    EDUCATION_VALIDATION_REQUEST_SUCCESS,\n    OCCUPATION_VALIDATION_REQUEST_SUCCESS,\n    WECHAT_VALIDATION_REQUEST_SUCCESS,\n    INSTAGRAM_VALIDATION_REQUEST_SUCCESS,\n    FACEBOOK_VALIDATION_REQUEST_SUCCESS,\n    SNAPCHAT_VALIDATION_REQUEST_SUCCESS,\n    TWITTER_VALIDATION_REQUEST_SUCCESS,\n    TELEGRAM_VALIDATION_REQUEST_SUCCESS,\n    PAYPAL_VALIDATION_REQUEST_SUCCESS,\n    ELA_VALIDATION_REQUEST_SUCCESS,\n    WEBSITE_VALIDATION_REQUEST_SUCCESS,\n    TWITCH_VALIDATION_REQUEST_SUCCESS,\n    WEIBO_VALIDATION_REQUEST_SUCCESS\n} from \"./types\";\n  \nimport { ThunkAction } from \"redux-thunk\";\nimport { AppState } from \"../\";\nimport { Storage } from \"@capacitor/core\";\n\n export const emailValidation = (txn: any, callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    TxnActionTypes\n> => dispatch => {\n    (async function(){\n        dispatch(emailValidationSuccess(txn));\n        callback();\n    })()\n};\n  \nexport const emailValidationSuccess = (txn: any): TxnActionTypes => ({\n    type: EMAIL_VALIDATION_REQUEST_SUCCESS,\n    payload: txn\n});\n\nexport const nameValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(nameValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const nameValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: NAME_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const telephoneValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(telephoneValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const telephoneValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: TELEPHONE_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\n////\nexport const genderValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(genderValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const genderValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: GENDER_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const locationValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(locationValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const locationValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: LOCATION_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const birthdateValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(birthdateValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const birthdateValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: BIRTHDATE_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const birthplaceValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(birthplaceValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const birthplaceValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: BIRTHPLACE_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const educationValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(educationValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const educationValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: EDUCATION_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const occupationValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(occupationValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const occupationValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: OCCUPATION_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const websiteValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(websiteValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const websiteValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: WEBSITE_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const wechatValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(wechatValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const wechatValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: WECHAT_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const instagramValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(instagramValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const instagramValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: INSTAGRAM_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const facebookValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(facebookValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const facebookValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: FACEBOOK_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const snapchatValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(snapchatValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const snapchatValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: SNAPCHAT_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const twitterValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(twitterValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const twitterValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: TWITTER_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const telegramValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(telegramValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const telegramValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: TELEGRAM_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const twitchValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(twitchValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const twitchValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: TWITCH_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const weiboValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(weiboValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const weiboValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: WEIBO_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const paypalValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(paypalValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const paypalValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: PAYPAL_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const elaValidation = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(elaValidationSuccess(txn));\n    callback();\n})()\n};\n\nexport const elaValidationSuccess = (txn: any): TxnActionTypes => ({\ntype: ELA_VALIDATION_REQUEST_SUCCESS,\npayload: txn\n});\n\nexport const setSelectedTabRequests = (txn: any): TxnActionTypes => ({\n    type: SET_SELECTED_TAB_REQUESTS,\n    payload: txn\n});\n\nexport const showNotification = (text: any): TxnActionTypes => ({\n    type: 'SHOW_NOTIFICATION', \n    payload: text\n})\n\nexport const hideNotification = (): TxnActionTypes => ({\n    type: 'HIDE_NOTIFICATION'\n})\n\nexport const getAllRequests = (txn: any, callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    TxnActionTypes\n> => dispatch => {\n    (async function(){\n        dispatch(getAllRequestsSuccess(txn));\n        callback();\n    })()\n};\n\nexport const getAllRequestsSuccess = (txn: any): TxnActionTypes => ({\n    type: GET_ALL_REQUESTS_SUCCESS,\n    payload: txn\n});\n\nexport const getIncomingRequests = (txn: any, callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    TxnActionTypes\n> => dispatch => {\n    (async function(){\n        dispatch(getIncomingRequestsSuccess(txn));\n        callback();\n    })()\n};\n\nexport const getIncomingRequestsSuccess = (txn: any): TxnActionTypes => ({\n    type: GET_INCOMING_REQUESTS_SUCCESS,\n    payload: txn\n});\n\nexport const credSaved = (credentials: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(credSavedSuccess(credentials));\n    callback();\n})()\n};\n\nexport const credSavedSuccess = (txn: any): TxnActionTypes => ({\n    type: CRED_SAVED_SUCCESS,\n    payload: txn\n});\n\nexport const requestCancelled = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(requestCancelledSuccess(txn));\n\n    const requestIds = await Storage.get({ key: 'pendingRequests' });\n    if(requestIds && requestIds.value){\n      let remainingPendingRequests = JSON.parse(requestIds.value);\n\n      remainingPendingRequests = remainingPendingRequests.filter((value:any) => value !== txn.data.id)\n      await Storage.set({ key: 'pendingRequests', value: JSON.stringify(remainingPendingRequests) });                      \n    } \n\n    callback();\n})()\n};\n\nexport const requestCancelledSuccess = (txn: any): TxnActionTypes => ({\n    type: REQUEST_CANCELLED_SUCCESS,\n    payload: txn\n});\n\nexport const requestApproved = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(requestApprovedSuccess(txn));\n    callback();\n})()\n};\n\nexport const requestApprovedSuccess = (txn: any): TxnActionTypes => ({\n    type: REQUEST_APPROVED_SUCCESS,\n    payload: txn\n});\n\nexport const requestRejected = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(requestRejectedSuccess(txn));\n    callback();\n})()\n};\n\nexport const requestRejectedSuccess = (txn: any): TxnActionTypes => ({\n    type: REQUEST_REJECTED_SUCCESS,\n    payload: txn\n});\n\nfunction noop() {}","import {\n  TxnState,\n  TxnActionTypes,\n  EMAIL_VALIDATION_REQUEST_SUCCESS,\n  NAME_VALIDATION_REQUEST_SUCCESS,\n  TELEPHONE_VALIDATION_REQUEST_SUCCESS,\n  GENDER_VALIDATION_REQUEST_SUCCESS,\n  LOCATION_VALIDATION_REQUEST_SUCCESS,\n  BIRTHDATE_VALIDATION_REQUEST_SUCCESS,\n  BIRTHPLACE_VALIDATION_REQUEST_SUCCESS,\n  EDUCATION_VALIDATION_REQUEST_SUCCESS,\n  OCCUPATION_VALIDATION_REQUEST_SUCCESS,\n  WECHAT_VALIDATION_REQUEST_SUCCESS,\n  INSTAGRAM_VALIDATION_REQUEST_SUCCESS,\n  FACEBOOK_VALIDATION_REQUEST_SUCCESS,\n  SNAPCHAT_VALIDATION_REQUEST_SUCCESS,\n  TWITTER_VALIDATION_REQUEST_SUCCESS,\n  TELEGRAM_VALIDATION_REQUEST_SUCCESS,\n  PAYPAL_VALIDATION_REQUEST_SUCCESS,\n  ELA_VALIDATION_REQUEST_SUCCESS,\n  WEBSITE_VALIDATION_REQUEST_SUCCESS,\n  TWITCH_VALIDATION_REQUEST_SUCCESS,\n  WEIBO_VALIDATION_REQUEST_SUCCESS,\n  GET_ALL_REQUESTS_SUCCESS,\n  GET_INCOMING_REQUESTS_SUCCESS,\n  SHOW_NOTIFICATION,\n  HIDE_NOTIFICATION,\n  SET_SELECTED_TAB_REQUESTS,\n  CRED_SAVED_SUCCESS,\n  REQUEST_CANCELLED_SUCCESS,\n  REQUEST_APPROVED_SUCCESS,\n  REQUEST_REJECTED_SUCCESS\n} from \"./types\";\n\nconst initialState: TxnState = {\n  txn: null,\n  selected_tab_txn: null,\n  selected_tab_name: null,\n  incoming_txn: null,\n  pending_txn: null,\n  approved_txn: null,\n  rejected_txn: null,\n  expired_txn: null,\n  cancelled_txn: null,\n  notification: {\n    show: false,\n    message: '',\n    type: ''\n  }\n};\n\nexport const txnReducer = (\n  state = initialState,\n  action: TxnActionTypes\n): TxnState => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case EMAIL_VALIDATION_REQUEST_SUCCESS:\n    case NAME_VALIDATION_REQUEST_SUCCESS:\n    case TELEPHONE_VALIDATION_REQUEST_SUCCESS:\n    case GENDER_VALIDATION_REQUEST_SUCCESS:\n    case LOCATION_VALIDATION_REQUEST_SUCCESS:\n    case BIRTHDATE_VALIDATION_REQUEST_SUCCESS:\n    case BIRTHPLACE_VALIDATION_REQUEST_SUCCESS:\n    case EDUCATION_VALIDATION_REQUEST_SUCCESS:\n    case OCCUPATION_VALIDATION_REQUEST_SUCCESS:\n    case WECHAT_VALIDATION_REQUEST_SUCCESS:\n    case INSTAGRAM_VALIDATION_REQUEST_SUCCESS:\n    case FACEBOOK_VALIDATION_REQUEST_SUCCESS:\n    case SNAPCHAT_VALIDATION_REQUEST_SUCCESS:\n    case TWITTER_VALIDATION_REQUEST_SUCCESS:\n    case TELEGRAM_VALIDATION_REQUEST_SUCCESS:\n    case PAYPAL_VALIDATION_REQUEST_SUCCESS:\n    case ELA_VALIDATION_REQUEST_SUCCESS:\n    case WEBSITE_VALIDATION_REQUEST_SUCCESS:\n    case TWITCH_VALIDATION_REQUEST_SUCCESS:\n    case WEIBO_VALIDATION_REQUEST_SUCCESS:\n      {\n        state.txn = null ?? []\n        state.pending_txn = null ?? []\n\n        return { ...state, \n          txn: [...state.txn, payload], \n          pending_txn: [...state.pending_txn, payload]\n        };\n      }\n      case SET_SELECTED_TAB_REQUESTS:\n        {\n          return { ...state, \n            selected_tab_txn: payload.data,\n            selected_tab_name: payload.name\n          };\n        }            \n    case GET_ALL_REQUESTS_SUCCESS:\n      {\n        let pending_txn = payload.filter((txn:any) => (txn.status === \"New\" || txn.status === \"In progress\" || txn.status === \"Cancelation in progress\"));\n        let approved_txn = payload.filter((txn:any) => txn.status === \"Approved\");\n        let rejected_txn = payload.filter((txn:any) => txn.status === \"Rejected\");\n        let expired_txn = payload.filter((txn:any) => txn.status === \"Expired\");\n        // let cancelled_txn = payload.filter((txn:any) => txn.status === \"Canceled\");\n\n        let all_txn = payload.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });\n\n        pending_txn = pending_txn.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });\n\n\n        approved_txn = approved_txn.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });\n\n\n        rejected_txn = rejected_txn.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });\n        \n        expired_txn = expired_txn.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });        \n\n        // cancelled_txn = cancelled_txn.sort((a:any, b:any) => {\n        //   let c:any = new Date(a.date).getTime();\n        //   let d:any = new Date(b.date).getTime();\n        //   return c > d ? 1 : -1;\n        // });        \n\n        return { \n          ...state, \n          txn: all_txn,\n          selected_tab_txn: all_txn, \n          selected_tab_name: 'all',\n          // incoming_txn: null, \n          pending_txn: pending_txn, \n          approved_txn: approved_txn,\n          rejected_txn: rejected_txn,\n          expired_txn: expired_txn,\n          // cancelled_txn: cancelled_txn,\n        };\n      }\n      case GET_INCOMING_REQUESTS_SUCCESS:\n        {\n          let incoming_txn_new = payload.filter((txn:any) => (txn.status === \"New\" || txn.status === \"In progress\" || txn.status === \"Cancelation in progress\"));\n          let incoming_txn_history = payload.filter((txn:any) => (txn.status === \"Approved\" || txn.status === \"Rejected\"));\n\n          incoming_txn_new = incoming_txn_new.sort((a:any, b:any) => {\n            let c:any = new Date(a.date).getTime();\n            let d:any = new Date(b.date).getTime();\n            return c > d ? 1 : -1;\n          });          \n\n          incoming_txn_history = incoming_txn_history.sort((a:any, b:any) => {\n            let c:any = new Date(a.date).getTime();\n            let d:any = new Date(b.date).getTime();\n            return c > d ? 1 : -1;\n          });\n\n          return { \n            ...state, \n            incoming_txn: incoming_txn_new.concat(incoming_txn_history), \n          };\n        }\n    case SHOW_NOTIFICATION:\n      {\n        return {...state,           \n          notification: {\n            show: true,\n            message: payload.message,\n            type: payload.type\n          }}\n      }\n    case HIDE_NOTIFICATION:\n      {\n        return {...state, \n          notification: {\n            show: false,\n            message: '', \n            type: ''\n          }        \n        \n        }\n      }\n      case CRED_SAVED_SUCCESS:\n        {\n          return { ...state, \n            txn: state.txn.map(\n              (t:any) => t.id === payload.data.id ? payload.data : t\n            ),\n            notification: {\n              show: true,\n              message: payload.message,\n              type: 'success'\n            }\n          };\n        }\n      case REQUEST_CANCELLED_SUCCESS:\n        {  \n          return { ...state, \n            txn: state.txn.map(\n              (t:any) => t.id === payload.data.id ? payload.data : t\n            ),\n            pending_txn: state.pending_txn.filter(\n              (t:any) => t.id !== payload.data.id\n            ),\n            notification: {\n              show: true,\n              message: payload.message,\n              type: 'success'\n            }\n          };\n        }        \n        case REQUEST_APPROVED_SUCCESS:        \n        {  \n            let filtered_txn = null\n            let filtered_incoming_txn = null\n\n            if(state.txn) {\n              filtered_txn = state.txn.map(\n                (t:any) => t.id === payload.data.id ? payload.data : t\n              )\n            }\n\n            if(state.incoming_txn) {\n              filtered_incoming_txn = state.incoming_txn.map(\n                (t:any) => t.id === payload.data.id ? payload.data : t\n              )              \n            }\n\n            return { ...state, \n              txn: filtered_txn || state.txn,\n              incoming_txn: filtered_incoming_txn || state.incoming_txn,              \n              notification: {\n                show: true,\n                message: payload.message,\n                type: 'success'\n              }\n            };\n          }         \n          case REQUEST_REJECTED_SUCCESS:        \n          {\n            let filtered_txn = null\n            let filtered_incoming_txn = null\n\n            if(state.txn) {\n              filtered_txn = state.txn.map(\n                (t:any) => t.id === payload.data.id ? payload.data : t\n              )\n            }\n\n            if(state.incoming_txn) {\n              filtered_incoming_txn = state.incoming_txn.map(\n                (t:any) => t.id === payload.data.id ? payload.data : t\n              )              \n            }            \n            \n              return { ...state, \n                txn: filtered_txn || state.txn,\n                incoming_txn: filtered_incoming_txn || state.incoming_txn,                              \n                // txn: state.txn && state.txn.map(\n                //   (t:any) => t.id === payload.data.id ? payload.data : t\n                // ),\n                // incoming_txn: state.incoming_txn && state.incoming_txn.map(\n                //   (t:any) => t.id === payload.data.id ? payload.data : t\n                // ),                              \n                notification: {\n                  show: true,\n                  message: payload.message,\n                  type: 'success'\n                }\n              };\n          }\n    default:\n      return state;\n  }\n};","import { Plugins } from '@capacitor/core';\n\nimport {\n    ValidationProviderActionTypes,\n    GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS,\n    GET_NAME_VALIDATION_PROVIDERS_SUCCESS,\n    GET_TELEPHONE_VALIDATION_PROVIDERS_SUCCESS,\n    GET_GENDER_VALIDATION_PROVIDERS_SUCCESS,\n    GET_LOCATION_VALIDATION_PROVIDERS_SUCCESS,\n    GET_BIRTHDATE_VALIDATION_PROVIDERS_SUCCESS,\n    GET_BIRTHPLACE_VALIDATION_PROVIDERS_SUCCESS,\n    GET_EDUCATION_VALIDATION_PROVIDERS_SUCCESS,\n    GET_OCCUPATION_VALIDATION_PROVIDERS_SUCCESS,\n    GET_WEBSITE_VALIDATION_PROVIDERS_SUCCESS,\n    GET_WECHAT_VALIDATION_PROVIDERS_SUCCESS,\n    GET_INSTAGRAM_VALIDATION_PROVIDERS_SUCCESS,\n    GET_FACEBOOK_VALIDATION_PROVIDERS_SUCCESS,\n    GET_SNAPCHAT_VALIDATION_PROVIDERS_SUCCESS,\n    GET_TWITTER_VALIDATION_PROVIDERS_SUCCESS,\n    GET_TELEGRAM_VALIDATION_PROVIDERS_SUCCESS,\n    GET_TWITCH_VALIDATION_PROVIDERS_SUCCESS,\n    GET_WEIBO_VALIDATION_PROVIDERS_SUCCESS,\n    GET_PAYPAL_VALIDATION_PROVIDERS_SUCCESS,\n    GET_ELA_VALIDATION_PROVIDERS_SUCCESS,\n    GET_PROVIDER_SERVICES_SUCCESS,\n    SET_PROVIDER_SERVICES_SUCCESS\n} from \"./types\";\n  \nimport { ThunkAction } from \"redux-thunk\";\nimport { AppState } from \"../\";\n\nconst { Storage } = Plugins;\n\n\n// Email\nexport const getEmailValidationProviders = (emailValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'emailValidationProviders', value: JSON.stringify(emailValidationProviders)})\n    dispatch(getEmailValidationProvidersSuccess(emailValidationProviders));\n    callback();\n})()\n};\n\nexport const getEmailValidationProvidersSuccess = (emailValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS,\n    payload: emailValidationProviders\n});\n\n\n// Name\nexport const getNameValidationProviders = (nameValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'nameValidationProviders', value: JSON.stringify(nameValidationProviders)})\n    dispatch(getNameValidationProvidersSuccess(nameValidationProviders));\n    callback();\n})()\n};\n\nexport const getNameValidationProvidersSuccess = (nameValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_NAME_VALIDATION_PROVIDERS_SUCCESS,\n    payload: nameValidationProviders\n});\n\n\n// Phone\nexport const getTelephoneValidationProviders = (telephoneValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'telephoneValidationProviders', value: JSON.stringify(telephoneValidationProviders)})\n    dispatch(getTelephoneValidationProvidersSuccess(telephoneValidationProviders));\n    callback();\n})()\n};\n\nexport const getTelephoneValidationProvidersSuccess = (telephoneValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_TELEPHONE_VALIDATION_PROVIDERS_SUCCESS,\n    payload: telephoneValidationProviders\n});\n\n\n// Gender\nexport const getGenderValidationProviders = (genderValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'genderValidationProviders', value: JSON.stringify(genderValidationProviders)})\n    dispatch(getGenderValidationProvidersSuccess(genderValidationProviders));\n    callback();\n})()\n};\n\nexport const getGenderValidationProvidersSuccess = (genderValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_GENDER_VALIDATION_PROVIDERS_SUCCESS,\n    payload: genderValidationProviders\n});\n\n\n// Location\nexport const getLocationValidationProviders = (locationValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'locationValidationProviders', value: JSON.stringify(locationValidationProviders)})\n    dispatch(getLocationValidationProvidersSuccess(locationValidationProviders));\n    callback();\n})()\n};\n\nexport const getLocationValidationProvidersSuccess = (locationValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_LOCATION_VALIDATION_PROVIDERS_SUCCESS,\n    payload: locationValidationProviders\n});\n\n\n// Birth date\nexport const getBirthdateValidationProviders = (birthdateValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'birthdateValidationProviders', value: JSON.stringify(birthdateValidationProviders)})\n    dispatch(getBirthdateValidationProvidersSuccess(birthdateValidationProviders));\n    callback();\n})()\n};\n\nexport const getBirthdateValidationProvidersSuccess = (birthdateValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_BIRTHDATE_VALIDATION_PROVIDERS_SUCCESS,\n    payload: birthdateValidationProviders\n});\n\n\n// Birth place\nexport const getBirthplaceValidationProviders = (birthplaceValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'birthplaceValidationProviders', value: JSON.stringify(birthplaceValidationProviders)})\n    dispatch(getBirthplaceValidationProvidersSuccess(birthplaceValidationProviders));\n    callback();\n})()\n};\n\nexport const getBirthplaceValidationProvidersSuccess = (birthplaceValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_BIRTHPLACE_VALIDATION_PROVIDERS_SUCCESS,\n    payload: birthplaceValidationProviders\n});\n\n\n// Education\nexport const getEducationValidationProviders = (educationValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'educationValidationProviders', value: JSON.stringify(educationValidationProviders)})\n    dispatch(getEducationValidationProvidersSuccess(educationValidationProviders));\n    callback();\n})()\n};\n\nexport const getEducationValidationProvidersSuccess = (educationValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_EDUCATION_VALIDATION_PROVIDERS_SUCCESS,\n    payload: educationValidationProviders\n});\n\n\n// Occupation\nexport const getOccupationValidationProviders = (occupationValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'occupationValidationProviders', value: JSON.stringify(occupationValidationProviders)})\n    dispatch(getOccupationValidationProvidersSuccess(occupationValidationProviders));\n    callback();\n})()\n};\n\nexport const getOccupationValidationProvidersSuccess = (occupationValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_OCCUPATION_VALIDATION_PROVIDERS_SUCCESS,\n    payload: occupationValidationProviders\n});\n\n// Website\nexport const getWebsiteValidationProviders = (websiteValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'websiteValidationProviders', value: JSON.stringify(websiteValidationProviders)})\n    dispatch(getWebsiteValidationProvidersSuccess(websiteValidationProviders));\n    callback();\n})()\n};\n\nexport const getWebsiteValidationProvidersSuccess = (websiteValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_WEBSITE_VALIDATION_PROVIDERS_SUCCESS,\n    payload: websiteValidationProviders\n});\n\n// Wechat\nexport const getWechatValidationProviders = (wechatValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'wechatValidationProviders', value: JSON.stringify(wechatValidationProviders)})\n    dispatch(getWechatValidationProvidersSuccess(wechatValidationProviders));\n    callback();\n})()\n};\n\nexport const getWechatValidationProvidersSuccess = (wechatValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_WECHAT_VALIDATION_PROVIDERS_SUCCESS,\n    payload: wechatValidationProviders\n});\n\n\n// Instagram\nexport const getInstagramValidationProviders = (instagramValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'instagramValidationProviders', value: JSON.stringify(instagramValidationProviders)})\n    dispatch(getInstagramValidationProvidersSuccess(instagramValidationProviders));\n    callback();\n})()\n};\n\nexport const getInstagramValidationProvidersSuccess = (instagramValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_INSTAGRAM_VALIDATION_PROVIDERS_SUCCESS,\n    payload: instagramValidationProviders\n});\n\n\n// Facebook\nexport const getFacebookValidationProviders = (facebookValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'facebookValidationProviders', value: JSON.stringify(facebookValidationProviders)})\n    dispatch(getFacebookValidationProvidersSuccess(facebookValidationProviders));\n    callback();\n})()\n};\n\nexport const getFacebookValidationProvidersSuccess = (facebookValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_FACEBOOK_VALIDATION_PROVIDERS_SUCCESS,\n    payload: facebookValidationProviders\n});\n\n\n// Snapchat\nexport const getSnapchatValidationProviders = (snapchatValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'snapchatValidationProviders', value: JSON.stringify(snapchatValidationProviders)})\n    dispatch(getSnapchatValidationProvidersSuccess(snapchatValidationProviders));\n    callback();\n})()\n};\n\nexport const getSnapchatValidationProvidersSuccess = (snapchatValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_SNAPCHAT_VALIDATION_PROVIDERS_SUCCESS,\n    payload: snapchatValidationProviders\n});\n\n\n// Twitter\nexport const getTwitterValidationProviders = (twitterValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'twitterValidationProviders', value: JSON.stringify(twitterValidationProviders)})\n    dispatch(getTwitterValidationProvidersSuccess(twitterValidationProviders));\n    callback();\n})()\n};\n\nexport const getTwitterValidationProvidersSuccess = (twitterValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_TWITTER_VALIDATION_PROVIDERS_SUCCESS,\n    payload: twitterValidationProviders\n});\n\n\n// Telegram\nexport const getTelegramValidationProviders = (telegramValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'telegramValidationProviders', value: JSON.stringify(telegramValidationProviders)})\n    dispatch(getTelegramValidationProvidersSuccess(telegramValidationProviders));\n    callback();\n})()\n};\n\nexport const getTelegramValidationProvidersSuccess = (telegramValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_TELEGRAM_VALIDATION_PROVIDERS_SUCCESS,\n    payload: telegramValidationProviders\n});\n\n// Twitch\nexport const getTwitchValidationProviders = (twitchValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'twitchValidationProviders', value: JSON.stringify(twitchValidationProviders)})\n    dispatch(getTwitchValidationProvidersSuccess(twitchValidationProviders));\n    callback();\n})()\n};\n\nexport const getTwitchValidationProvidersSuccess = (twitchValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_TWITCH_VALIDATION_PROVIDERS_SUCCESS,\n    payload: twitchValidationProviders\n});\n\n// Weibo\nexport const getWeiboValidationProviders = (weiboValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'weiboValidationProviders', value: JSON.stringify(weiboValidationProviders)})\n    dispatch(getWeiboValidationProvidersSuccess(weiboValidationProviders));\n    callback();\n})()\n};\n\nexport const getWeiboValidationProvidersSuccess = (weiboValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_WEIBO_VALIDATION_PROVIDERS_SUCCESS,\n    payload: weiboValidationProviders\n});\n\n// Paypal\nexport const getPaypalValidationProviders = (paypalValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'paypalValidationProviders', value: JSON.stringify(paypalValidationProviders)})\n    dispatch(getPaypalValidationProvidersSuccess(paypalValidationProviders));\n    callback();\n})()\n};\n\nexport const getPaypalValidationProvidersSuccess = (paypalValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_PAYPAL_VALIDATION_PROVIDERS_SUCCESS,\n    payload: paypalValidationProviders\n});\n\n\n// ELA\nexport const getElaValidationProviders = (elaValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'elaValidationProviders', value: JSON.stringify(elaValidationProviders)})\n    dispatch(getElaValidationProvidersSuccess(elaValidationProviders));\n    callback();\n})()\n};\n\nexport const getElaValidationProvidersSuccess = (elaValidationProviders: any): ValidationProviderActionTypes => ({\n    type: GET_ELA_VALIDATION_PROVIDERS_SUCCESS,\n    payload: elaValidationProviders\n});  \n\n\n// Self services as a validator\nexport const getProviderServices = (providerServices: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'providerServices', value: JSON.stringify(providerServices)})\n    dispatch(getProviderServicesSuccess(providerServices));\n    callback();\n})()\n};\n\nexport const getProviderServicesSuccess = (providerServices: any): ValidationProviderActionTypes => ({\n    type: GET_PROVIDER_SERVICES_SUCCESS,\n    payload: providerServices\n});\n\nexport const setProviderServices = (response: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    const validationTypes = Object.keys(response.data.validation)\n    const providerServices:object = {\n        \"id\": response.data.id,\n        \"did\": response.data.did,\n        \"validationTypes\": validationTypes\n    }\n\n    await Storage.set({ key: 'providerServices', value: JSON.stringify(providerServices)})\n    dispatch(setProviderServicesSuccess(providerServices));\n    callback();\n})()\n};\n\nexport const setProviderServicesSuccess = (providerServices: any): ValidationProviderActionTypes => ({\n    type: SET_PROVIDER_SERVICES_SUCCESS,\n    payload: providerServices\n});\n\nfunction noop() {}","export const GET_EMAIL_VALIDATION_PROVIDERS = \"GET_EMAIL_VALIDATION_PROVIDERS\";\nexport const GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS = \"GET_EMAIL_VALIDATION_PROVIDERSSUCCESS\";\n\nexport const GET_NAME_VALIDATION_PROVIDERS = \"GET_NAME_VALIDATION_PROVIDERS\";\nexport const GET_NAME_VALIDATION_PROVIDERS_SUCCESS = \"GET_NAME_VALIDATION_PROVIDERSSUCCESS\";\n\nexport const GET_TELEPHONE_VALIDATION_PROVIDERS = \"GET_TELEPHONE_VALIDATION_PROVIDERS\";\nexport const GET_TELEPHONE_VALIDATION_PROVIDERS_SUCCESS = \"GET_TELEPHONE_VALIDATION_PROVIDERSSUCCESS\";\n\nexport const GET_GENDER_VALIDATION_PROVIDERS = \"GET_GENDER_VALIDATION_PROVIDERS\";\nexport const GET_GENDER_VALIDATION_PROVIDERS_SUCCESS = \"GET_GENDER_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_LOCATION_VALIDATION_PROVIDERS = \"GET_LOCATION_VALIDATION_PROVIDERS\";\nexport const GET_LOCATION_VALIDATION_PROVIDERS_SUCCESS = \"GET_LOCATION_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_BIRTHDATE_VALIDATION_PROVIDERS = \"GET_BIRTHDATE_VALIDATION_PROVIDERS\";\nexport const GET_BIRTHDATE_VALIDATION_PROVIDERS_SUCCESS = \"GET_BIRTHDATE_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_BIRTHPLACE_VALIDATION_PROVIDERS = \"GET_BIRTHPLACE_VALIDATION_PROVIDERS\";\nexport const GET_BIRTHPLACE_VALIDATION_PROVIDERS_SUCCESS = \"GET_BIRTHPLACE_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_EDUCATION_VALIDATION_PROVIDERS = \"GET_EDUCATION_VALIDATION_PROVIDERS\";\nexport const GET_EDUCATION_VALIDATION_PROVIDERS_SUCCESS = \"GET_EDUCATION_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_OCCUPATION_VALIDATION_PROVIDERS = \"GET_OCCUPATION_VALIDATION_PROVIDERS\";\nexport const GET_OCCUPATION_VALIDATION_PROVIDERS_SUCCESS = \"GET_OCCUPATION_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_WEBSITE_VALIDATION_PROVIDERS = \"GET_WEBSITE_VALIDATION_PROVIDERS\";\nexport const GET_WEBSITE_VALIDATION_PROVIDERS_SUCCESS = \"GET_WEBSITE_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_WECHAT_VALIDATION_PROVIDERS = \"GET_WECHAT_VALIDATION_PROVIDERS\";\nexport const GET_WECHAT_VALIDATION_PROVIDERS_SUCCESS = \"GET_WECHAT_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_INSTAGRAM_VALIDATION_PROVIDERS = \"GET_INSTAGRAM_VALIDATION_PROVIDERS\";\nexport const GET_INSTAGRAM_VALIDATION_PROVIDERS_SUCCESS = \"GET_INSTAGRAM_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_FACEBOOK_VALIDATION_PROVIDERS = \"GET_FACEBOOK_VALIDATION_PROVIDERS\";\nexport const GET_FACEBOOK_VALIDATION_PROVIDERS_SUCCESS = \"GET_FACEBOOK_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_SNAPCHAT_VALIDATION_PROVIDERS = \"GET_SNAPCHAT_VALIDATION_PROVIDERS\";\nexport const GET_SNAPCHAT_VALIDATION_PROVIDERS_SUCCESS = \"GET_SNAPCHAT_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_TWITTER_VALIDATION_PROVIDERS = \"GET_TWITTER_VALIDATION_PROVIDERS\";\nexport const GET_TWITTER_VALIDATION_PROVIDERS_SUCCESS = \"GET_TWITTER_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_TELEGRAM_VALIDATION_PROVIDERS = \"GET_TELEGRAM_VALIDATION_PROVIDERS\";\nexport const GET_TELEGRAM_VALIDATION_PROVIDERS_SUCCESS = \"GET_TELEGRAM_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_TWITCH_VALIDATION_PROVIDERS = \"GET_TWITCH_VALIDATION_PROVIDERS\";\nexport const GET_TWITCH_VALIDATION_PROVIDERS_SUCCESS = \"GET_TWITCH_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_WEIBO_VALIDATION_PROVIDERS = \"GET_WEIBO_VALIDATION_PROVIDERS\";\nexport const GET_WEIBO_VALIDATION_PROVIDERS_SUCCESS = \"GET_WEIBO_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_PAYPAL_VALIDATION_PROVIDERS = \"GET_PAYPAL_VALIDATION_PROVIDERS\";\nexport const GET_PAYPAL_VALIDATION_PROVIDERS_SUCCESS = \"GET_PAYPAL_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_ELA_VALIDATION_PROVIDERS = \"GET_ELA_VALIDATION_PROVIDERS\";\nexport const GET_ELA_VALIDATION_PROVIDERS_SUCCESS = \"GET_ELA_VALIDATION_PROVIDERS_SUCCESS\";\n\nexport const GET_PROVIDER_SERVICES = \"GET_PROVIDER_SERVICES\";\nexport const GET_PROVIDER_SERVICES_SUCCESS = \"GET_PROVIDER_SERVICES_SUCCESS\";\n\nexport const SET_PROVIDER_SERVICES = \"SET_PROVIDER_SERVICES\";\nexport const SET_PROVIDER_SERVICES_SUCCESS = \"SET_PROVIDER_SERVICES_SUCCESS\";\n\nexport interface ValidationProviderState {\n  [key: string]: any;\n}\n\ninterface GetEmailValidationProvidersAction {\n  type: typeof GET_EMAIL_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetEmailValidationProvidersSuccessAction {\n  type: typeof GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}  \n\ninterface GetNameValidationProvidersAction {\n  type: typeof GET_NAME_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetNameValidationProvidersSuccessAction {\n  type: typeof GET_NAME_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n} \n\ninterface GetTelephoneValidationProvidersAction {\n  type: typeof GET_TELEPHONE_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetTelephoneValidationProvidersSuccessAction {\n  type: typeof GET_TELEPHONE_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n} \n\ninterface GetGenderValidationProvidersAction {\n  type: typeof GET_GENDER_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetGenderValidationProvidersSuccessAction {\n  type: typeof GET_GENDER_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetLocationValidationProvidersAction {\n  type: typeof GET_LOCATION_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetLocationValidationProvidersSuccessAction {\n  type: typeof GET_LOCATION_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetBirthdateValidationProvidersAction {\n  type: typeof GET_BIRTHDATE_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetBirthdateValidationProvidersSuccessAction {\n  type: typeof GET_BIRTHDATE_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetBirthplaceValidationProvidersAction {\n  type: typeof GET_BIRTHPLACE_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetBirthplaceValidationProvidersSuccessAction {\n  type: typeof GET_BIRTHPLACE_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetEducationValidationProvidersAction {\n  type: typeof GET_EDUCATION_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetEducationValidationProvidersSuccessAction {\n  type: typeof GET_EDUCATION_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetOccupationValidationProvidersAction {\n  type: typeof GET_OCCUPATION_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetOccupationValidationProvidersSuccessAction {\n  type: typeof GET_OCCUPATION_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetWebsiteValidationProvidersAction {\n  type: typeof GET_WEBSITE_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetWebsiteValidationProvidersSuccessAction {\n  type: typeof GET_WEBSITE_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetWechatValidationProvidersAction {\n  type: typeof GET_WECHAT_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetWechatValidationProvidersSuccessAction {\n  type: typeof GET_WECHAT_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetInstagramValidationProvidersAction {\n  type: typeof GET_INSTAGRAM_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetInstagramValidationProvidersSuccessAction {\n  type: typeof GET_INSTAGRAM_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetFacebookValidationProvidersAction {\n  type: typeof GET_FACEBOOK_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetFacebookValidationProvidersSuccessAction {\n  type: typeof GET_FACEBOOK_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetSnapchatValidationProvidersAction {\n  type: typeof GET_SNAPCHAT_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetSnapchatValidationProvidersSuccessAction {\n  type: typeof GET_SNAPCHAT_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetTwitterValidationProvidersAction {\n  type: typeof GET_TWITTER_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetTwitterValidationProvidersSuccessAction {\n  type: typeof GET_TWITTER_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetTelegramValidationProvidersAction {\n  type: typeof GET_TELEGRAM_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetTelegramValidationProvidersSuccessAction {\n  type: typeof GET_TELEGRAM_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetTwitchValidationProvidersAction {\n  type: typeof GET_TWITCH_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetTwitchValidationProvidersSuccessAction {\n  type: typeof GET_TWITCH_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetWeiboValidationProvidersAction {\n  type: typeof GET_WEIBO_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetWeiboValidationProvidersSuccessAction {\n  type: typeof GET_WEIBO_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetPaypalValidationProvidersAction {\n  type: typeof GET_PAYPAL_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetPaypalValidationProvidersSuccessAction {\n  type: typeof GET_PAYPAL_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetElaValidationProvidersAction {\n  type: typeof GET_ELA_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetElaValidationProvidersSuccessAction {\n  type: typeof GET_ELA_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}\n\ninterface GetProviderServicesAction {\n  type: typeof GET_PROVIDER_SERVICES;\n  payload?: any\n}  \n\ninterface GetProviderServicesSuccessAction {\n  type: typeof GET_PROVIDER_SERVICES_SUCCESS;\n  payload?: any\n}  \n\ninterface SetProviderServicesAction {\n  type: typeof SET_PROVIDER_SERVICES;\n  payload?: any\n}  \n\ninterface SetProviderServicesSuccessAction {\n  type: typeof SET_PROVIDER_SERVICES_SUCCESS;\n  payload?: any\n}  \n\nexport type ValidationProviderActionTypes =\n  | GetEmailValidationProvidersAction\n  | GetEmailValidationProvidersSuccessAction\n  | GetNameValidationProvidersAction\n  | GetNameValidationProvidersSuccessAction\n  | GetTelephoneValidationProvidersAction\n  | GetTelephoneValidationProvidersSuccessAction\n  | GetGenderValidationProvidersAction\n  | GetGenderValidationProvidersSuccessAction\n  | GetLocationValidationProvidersAction\n  | GetLocationValidationProvidersSuccessAction\n  | GetBirthdateValidationProvidersAction\n  | GetBirthdateValidationProvidersSuccessAction\n  | GetBirthplaceValidationProvidersAction\n  | GetBirthplaceValidationProvidersSuccessAction\n  | GetEducationValidationProvidersAction\n  | GetEducationValidationProvidersSuccessAction\n  | GetOccupationValidationProvidersAction\n  | GetOccupationValidationProvidersSuccessAction\n  | GetWebsiteValidationProvidersAction\n  | GetWebsiteValidationProvidersSuccessAction  \n  | GetWechatValidationProvidersAction\n  | GetWechatValidationProvidersSuccessAction\n  | GetInstagramValidationProvidersAction\n  | GetInstagramValidationProvidersSuccessAction\n  | GetFacebookValidationProvidersAction\n  | GetFacebookValidationProvidersSuccessAction\n  | GetSnapchatValidationProvidersAction\n  | GetSnapchatValidationProvidersSuccessAction\n  | GetTwitterValidationProvidersAction\n  | GetTwitterValidationProvidersSuccessAction\n  | GetTelegramValidationProvidersAction\n  | GetTelegramValidationProvidersSuccessAction\n  | GetTwitchValidationProvidersAction\n  | GetTwitchValidationProvidersSuccessAction\n  | GetWeiboValidationProvidersAction\n  | GetWeiboValidationProvidersSuccessAction  \n  | GetPaypalValidationProvidersAction\n  | GetPaypalValidationProvidersSuccessAction\n  | GetElaValidationProvidersAction\n  | GetElaValidationProvidersSuccessAction\n  | GetProviderServicesAction\n  | GetProviderServicesSuccessAction  \n  | SetProviderServicesAction\n  | SetProviderServicesSuccessAction    ","import {\n  ValidationProviderState,\n  ValidationProviderActionTypes,\n  GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS,\n  GET_NAME_VALIDATION_PROVIDERS_SUCCESS,\n  GET_TELEPHONE_VALIDATION_PROVIDERS_SUCCESS,\n  GET_PROVIDER_SERVICES_SUCCESS,\n  SET_PROVIDER_SERVICES_SUCCESS,\n  GET_GENDER_VALIDATION_PROVIDERS_SUCCESS,\n  GET_LOCATION_VALIDATION_PROVIDERS_SUCCESS,\n  GET_BIRTHDATE_VALIDATION_PROVIDERS_SUCCESS,\n  GET_BIRTHPLACE_VALIDATION_PROVIDERS_SUCCESS,\n  GET_EDUCATION_VALIDATION_PROVIDERS_SUCCESS,\n  GET_OCCUPATION_VALIDATION_PROVIDERS_SUCCESS,\n  GET_WEBSITE_VALIDATION_PROVIDERS_SUCCESS,\n  GET_WECHAT_VALIDATION_PROVIDERS_SUCCESS,\n  GET_INSTAGRAM_VALIDATION_PROVIDERS_SUCCESS,\n  GET_FACEBOOK_VALIDATION_PROVIDERS_SUCCESS,\n  GET_SNAPCHAT_VALIDATION_PROVIDERS_SUCCESS,\n  GET_TWITTER_VALIDATION_PROVIDERS_SUCCESS,\n  GET_TELEGRAM_VALIDATION_PROVIDERS_SUCCESS,\n  GET_TWITCH_VALIDATION_PROVIDERS_SUCCESS,\n  GET_WEIBO_VALIDATION_PROVIDERS_SUCCESS,\n  GET_PAYPAL_VALIDATION_PROVIDERS_SUCCESS,\n  GET_ELA_VALIDATION_PROVIDERS_SUCCESS\n} from \"./types\";\n\nconst initialState: ValidationProviderState = {\n  emailValidationProviders: null,\n  telephoneValidationProviders: null,\n  nameValidationProviders: null,\n  genderValidationProviders: null,\n  locationValidationProviders: null,\n  birthdateValidationProviders: null,\n  birthplaceValidationProviders: null,\n  educationValidationProviders: null,\n  occupationValidationProviders: null,\n  websiteValidationProviders: null,\n  wechatValidationProviders: null,\n  instagramValidationProviders: null,\n  facebookValidationProviders: null,\n  snapchatValidationProviders: null,\n  twitterValidationProviders: null,\n  telegramValidationProviders: null,\n  twitchValidationProviders: null,\n  weiboValidationProviders: null,\n  paypalValidationProviders: null,\n  elaValidationProviders: null,\n  providerServices:null\n};\n\nexport const validationProviderReducer = (\n  state = initialState,\n  action: ValidationProviderActionTypes\n): ValidationProviderState => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, emailValidationProviders: payload };\n    case GET_NAME_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, nameValidationProviders: payload };      \n    case GET_TELEPHONE_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, telephoneValidationProviders: payload };      \n    case GET_GENDER_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, genderValidationProviders: payload };            \n    case GET_LOCATION_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, locationValidationProviders: payload };            \n    case GET_BIRTHDATE_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, birthdateValidationProviders: payload };            \n    case GET_BIRTHPLACE_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, birthplaceValidationProviders: payload };            \n    case GET_EDUCATION_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, educationValidationProviders: payload };            \n    case GET_OCCUPATION_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, occupationValidationProviders: payload };            \n    case GET_WEBSITE_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, websiteValidationProviders: payload };                  \n    case GET_WECHAT_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, wechatValidationProviders: payload };            \n    case GET_INSTAGRAM_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, instagramValidationProviders: payload };            \n    case GET_FACEBOOK_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, facebookValidationProviders: payload };            \n    case GET_SNAPCHAT_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, snapchatValidationProviders: payload };            \n    case GET_TWITTER_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, twitterValidationProviders: payload };            \n    case GET_TELEGRAM_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, telegramValidationProviders: payload };            \n    case GET_TWITCH_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, twitchValidationProviders: payload };            \n    case GET_WEIBO_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, weiboValidationProviders: payload };                    \n    case GET_PAYPAL_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, paypalValidationProviders: payload };            \n    case GET_ELA_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, elaValidationProviders: payload };                    \n    case GET_PROVIDER_SERVICES_SUCCESS:\n      return { ...state, providerServices: payload };\n    case SET_PROVIDER_SERVICES_SUCCESS:\n      return { ...state, providerServices: payload };\n    default:\n      return state;\n  }\n};","declare let appManager: AppManagerPlugin.AppManager;\ndeclare let didManager: DIDPlugin.DIDManager;\n\nexport function useDID(optionalCallback: any = noop) {\n  const signIn = (claims: any) => {\n    /**\n     * Request some credentials to the DID application.\n     */\n    appManager.sendIntent(\"https://did.elastos.net/credaccess\", { claims }, {}, (response: any) => {\n\n      if (response && response.result && response.result.presentation) {\n\n        // Create a real presentation object from json data\n        didManager.VerifiablePresentationBuilder.fromJson(JSON.stringify(response.result.presentation), (presentation)=>{\n          const credentials = presentation.getCredentials();\n          optionalCallback(credentials)\n        });\n      }\n    })\n  }\n  return [signIn] as [(obj: any) => void]\n}\n\nfunction noop() {}","export const LOGIN = \"LOGIN\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n\nexport interface AuthState {\n  user: any;\n}\n\ninterface LoginAction {\n  type: typeof LOGIN;\n  payload?: any\n}\n\ninterface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload?: any\n}\n\ninterface LogoutAction {\n  type: typeof LOGOUT;\n  payload?: any\n}\n\ninterface LogoutSuccessAction {\n  type: typeof LOGOUT_SUCCESS;\n  payload?: any\n}\n\nexport type AuthActionTypes =\n  | LoginAction\n  | LoginSuccessAction\n  | LogoutAction\n  | LogoutSuccessAction","import { Plugins } from '@capacitor/core';\n\nimport {\n    AuthActionTypes,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS\n} from \"./types\";\n  \nimport { ThunkAction } from \"redux-thunk\";\nimport { AppState } from \"../\";\n\nconst { Storage } = Plugins;\n\n export const login = (user: any, callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    AuthActionTypes\n> => dispatch => {\n    (async function(){\n\n        const savedUser = await Storage.get({ key: 'user' })\n        let mergedUserData:any = {}\n\n        if (savedUser && savedUser.value) {\n            const savedUserData = JSON.parse(savedUser.value);\n            \n            if (user.id === savedUserData.id){\n                // just replace old values with the new ones and keep the rest of user data intact\n                mergedUserData = {...savedUserData, ...user};\n            }\n        }\n\n        if(Object.keys(mergedUserData).length !== 0) {\n            user = mergedUserData\n        }\n\n        await Storage.set({ key: 'user', value: JSON.stringify(user)})\n        dispatch(loginSuccess(user));\n        callback();\n    })()\n};\n  \nexport const loginSuccess = (user: any): AuthActionTypes => ({\n    type: LOGIN_SUCCESS,\n    payload: user\n});\n\nexport const logout = (callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    AuthActionTypes\n> => dispatch => {\n    (async function(){\n        await Storage.clear()\n        dispatch(logoutSuccess());\n        callback()\n    })()\n};\n\nexport const logoutSuccess = (): AuthActionTypes => ({\n    type: LOGOUT_SUCCESS\n});\n\nexport const authCheckStatus = (callback: any = noop, callback2: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    AuthActionTypes\n  > => dispatch => {\n    (async function(){\n        const user = await Storage.get({ key: 'user' })\n\n        if (user && user.value) {\n            dispatch(loginSuccess(JSON.parse(user.value)));\n            callback()\n          } else {\n              callback2()\n          }\n    })()\n  };\n  \nexport type AuthCheckStatusType = typeof authCheckStatus;\n\nfunction noop() {}","import {\n  AuthState,\n  AuthActionTypes,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS\n} from \"./types\";\n\nconst initialState: AuthState = {\n  user: null,\n};\n\nconst getBase64Image = (obj:any) => {\n  return `data:${obj[\"content-type\"]};${obj[\"type\"]},${obj[\"data\"]}`\n}\n\nconst getBase64ImageDefault = () => {\n  const defaultImage = \"\"\n  return `data:image/png;base64,${defaultImage}`\n}\n\nexport const authReducer = (\n  state = initialState,\n  action: AuthActionTypes\n): AuthState => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS: {\n      // if (payload.avatar)\n      // {\n        payload.avatar = payload.avatar ? getBase64Image(payload.avatar) : getBase64ImageDefault()\n      // }        \n      return { ...state, user: payload };\n    }\n    case LOGOUT_SUCCESS:\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n};","enum CredentialCode {\n    EMAIL = \"email\",\n    NAME = \"name\",\n    TELEPHONE = \"telephone\",\n    GENDER = \"gender\",\n    LOCATION = \"location\",\n    BIRTHDATE = \"birthdate\",\n    BIRTHPLACE = \"birthplace\",\n    EDUCATION = \"education\",\n    OCCUPATION = \"occupation\",\n    WEBSITE = \"website\",\n    WECHAT = \"wechat\",\n    INSTAGRAM = \"instagram\",\n    FACEBOOK = \"facebook\",\n    SNAPCHAT = \"snapchat\",\n    TWITTER = \"twitter\",\n    TELEGRAM = \"telegram\",\n    TWITCH = \"twitch\",\n    WEIBO = \"weibo\",\n    PAYPAL = \"paypal\",\n    ELA = \"ela\"\n}\n\nexport default CredentialCode","export function useIncomingRequests(optionalCallback: any = noop) {\n\n  const incomingRequests = (providerId: any) => {\n    /**\n     * Request to get new incoming requests for this user (as a validator) to the backend API.\n     */\n\n      async function getData(url = '') {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      if(providerId){\n        getData(`${process.env.REACT_APP_GET_INCOMING_VALIDATION_REQUESTS}` + providerId)\n        .then(response => {\n          if(response.meta.code === 200){\n            optionalCallback(response.data);          \n          }\n        });\n      }\n\n  }\n  return [incomingRequests] as [(obj: any) => void]\n}\n\nfunction noop() {}","export function useProviderServices(optionalCallback: any = noop) {\n\n  const services = (did: any) => {\n    /**\n     * Request to get all services of a provider by its did\n     */\n\n    async function getData(url = '') {\n      const response = await fetch(url + did, {\n        method: 'GET',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer'\n      });\n\n      return response.json();\n    }\n\n    getData(`${process.env.REACT_APP_GET_PROVIDER_SERVICES_BY_DID}`)\n    .then(response => {\n      if(response.meta.code === 200) {\n        optionalCallback(response.data);          \n      }\n\n    });\n  }\n  return [services] as [(obj:any) => void]\n}\n\nfunction noop() {}","import {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonImg,\n  IonRow, IonCol,\n  IonListHeader,\n  IonLabel,\n  IonButton,\n  IonGrid,\n  IonItem,\n  IonThumbnail,\n  IonToast,\n  IonAlert,\n  IonRefresher,\n  IonRefresherContent,\n  useIonViewWillEnter,\n  IonPopover,\n  IonList\n} from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment'\n\nimport './Home.css';\n\nimport { RefresherEventDetail } from '@ionic/core';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../store'\n\nimport { useRequests } from '../hooks/useRequests'\nimport { getAllRequests, getIncomingRequests } from '../store/requests'\nimport { useProvider } from '../hooks/useProvider'\nimport { getEmailValidationProviders, getProviderServices } from '../store/providers'\n\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\nimport { useIncomingRequests } from '../hooks/useIncomingRequests';\nimport { useProviderServices } from '../hooks/useProviderServices';\n\nimport CredentialCode from './CredentialCode';\n\nconst HomePage: React.FC = ({ history }: any) => {\n\n    const [selectValidationService, setSelectValidationService] = useState<string>('none');\n    const [showPopover, setShowPopover] = useState<{open: boolean, event: Event | undefined}>({\n      open: false,\n      event: undefined,\n    });\n\n    const handleSelectValidationService = (selectedValidationService:string) => {      \n      setSelectValidationService(selectedValidationService)\n      setShowPopover({open: false, event: undefined})\n      if(selectedValidationService !== 'none') {\n        history.push({\n          pathname: '/home/service-invoke',\n          state: { credentialType: selectedValidationService }                              \n        });\n      }\n    }\n\n    const [filteredIncomingTxn, setFilteredIncomingTxn] = useState([\n      {\n        id: \"\",\n        did: \"\",\n        validationType: \"\",\n        requestParams: {},\n        created: \"\",\n        status: \"\"\n      }])\n\n    const dispatch = useDispatch()\n  \n    const user = useSelector((state:AppState) => state.auth.user)  \n    const all_requests = useSelector((state:AppState) => state.requests.txn)\n    const incoming_requests = useSelector((state:AppState) => state.requests.incoming_txn)    \n    const pending_requests = useSelector((state:AppState) => state.requests.pending_txn)\n    const notification = useSelector((state:AppState) => state.requests.notification)\n    const validationProviders = useSelector((state:AppState) => state.validationProviders)\n    const providerServices = useSelector((state:AppState) => state.validationProviders.providerServices)\n\n    const [sendGetProviderServices] = useProviderServices((services:any) => { \n      if(services) {\n        dispatch(getProviderServices(services))\n        sendGetIncomingRequests(services.id)         \n      }\n    }) \n\n    useIonViewWillEnter(() => {    \n      if(!providerServices){\n        // Calling the API to get provider services\n        sendGetProviderServices(user.id)\n      }   \n    });\n\n    const doRefresh = (event: CustomEvent<RefresherEventDetail>) => {\n      sendGetAllRequestsReq(user)\n      sendGetIncomingRequests(providerServices.id)\n\n      setTimeout(() => {\n        event.detail.complete();\n      }, 2000);\n    }\n\n    const [sendGetAllRequestsReq] = useRequests((txn:any) => { \n      if(txn) {\n        dispatch(getAllRequests(txn, () => '/home'))\n      }  \n     })   \n\n     const [sendGetIncomingRequests] = useIncomingRequests((txn:any) => { \n      if(txn) {\n        dispatch(getIncomingRequests(txn))\n        filterIncomingTxn(txn)\n      }  \n     })   \n\n     useEffect(() => {\n      if(!all_requests){\n        sendGetAllRequestsReq(user)\n      }\n\n      if(incoming_requests){\n        filterIncomingTxn(incoming_requests)\n      }\n\n      if(!incoming_requests && providerServices && providerServices.validationTypes){\n        sendGetIncomingRequests(providerServices.id)        \n      }\n\n     },\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n     []\n   );\n  \n    const [signIn] = useDID((credentials:any) => {\n      if(credentials.length) {\n        const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n        const user = Object.assign({}, ...credSubjects)\n        dispatch(login(user, () => '/home'))\n      }\n    })\n\n    const relativeTime = function(datetime:any) {\n      if (!datetime) return \"\";\n  \n      return moment.utc(datetime).fromNow()\n    }\n\n    const filterIncomingTxn = function(incoming_requests: any) {\n      let pendingIncomingRequests = incoming_requests.filter((txn: any) => (txn.status === \"New\" || txn.status === \"In progress\"))\n      setFilteredIncomingTxn(pendingIncomingRequests)\n    }\n\n    return (\n      <IonPage>\n        <IonHeader className=\"main-header\">\n          <IonToolbar>\n            <IonImg className=\"Navbar-Logo\" src=\"../assets/images/components/empty.png\"></IonImg>\n          </IonToolbar>\n          <IonToast color={notification.type} position=\"bottom\" isOpen={notification.show} message={notification.message} />\n        </IonHeader>\n        <IonContent>\n\n        <IonRefresher className=\"refresher\" slot=\"fixed\" onIonRefresh={doRefresh} pullFactor={0.5} pullMin={100} pullMax={200}>\n            <IonRefresherContent\n            pullingText=\"Pull to refresh\"\n            refreshingSpinner=\"circles\"\n            refreshingText=\"Refreshing Requests Status...\">\n            </IonRefresherContent>\n        </IonRefresher>\n\n        <IonToolbar className=\"sub-header\">\n            <IonTitle className=\"ion-text-start Iontitle-Big\">\n              <IonRow>\n                <IonCol size=\"2\" style={{padding: '0'}}>\n                  <img className=\"avatar-home\" alt=\"\"\n                      src={`${user && user.avatar ? user.avatar : \"../assets/images/components/default-avatar.png\" }`\n                      } />\n                </IonCol>\n                <IonCol size=\"10\" style={{padding: '0', paddingLeft: '5px'}}>\n                  Welcome, <br /> <strong> {user && user.name}</strong>\n                </IonCol>\n              </IonRow>\n            </IonTitle>\n          </IonToolbar>\n          <IonGrid className=\"pad-me--top \">\n          <IonRow>\n              <IonCol size=\"12\">\n                <IonListHeader>\n                  <IonButton fill=\"solid\" color=\"secondary\" className=\"text-center\" routerLink='/register-validator' style={{'textTransform':'none', fontWeight: 'bold'}}>Register as a Validator</IonButton>\n                </IonListHeader>\n              </IonCol>\n          </IonRow>\n\n            <IonRow className=\"main-Services\">\n              <IonCol size=\"12\">\n                <IonListHeader>\n                  <IonLabel className=\"List-Header\">Validation Services</IonLabel>\n                </IonListHeader>\n              </IonCol>\n              <IonCol size=\"12\">\n                <IonPopover\n                    isOpen={showPopover.open}\n                    event={showPopover.event}\n                    onDidDismiss={e => setShowPopover({open: false, event: undefined})}\n                    cssClass='fullwidth-popover'\n                >\n                <IonList>\n                {Object.values(CredentialCode).map(credCode => \n                  <IonItem onClick={(e) => handleSelectValidationService(credCode)}>\n                    <IonImg style={{paddingRight: '20px'}} src={`../assets/images/components/icon-${credCode}.svg`}></IonImg>\n                    <IonLabel>{credCode.charAt(0).toUpperCase()}{credCode.slice(1)} Validation</IonLabel>\n                  </IonItem>                        \n                )}\n                </IonList>\n                </IonPopover>\n                <IonButton color=\"disabled\" fill=\"solid\" className=\"text-center\" style={{'textTransform':'none', fontWeight: 'bold', width: '100%', backgroundColor: '#F8F8F8', border: '1px solid #F0F0F0', color: '#484848'}} onClick={(e) => setShowPopover({open: true, event: e.nativeEvent})}>\n                  <IonRow style={{width: '100%'}}>\n                      <IonCol size=\"2\">\n                        <IonImg style={{width: '24px', height: '24px'}} src={`../assets/images/components/icon-${selectValidationService}.svg`}></IonImg>\n                      </IonCol>\n                      <IonCol size=\"8\" style={{top: '5px'}}>\n                        {selectValidationService === 'none' ? 'Select Validation Service' : selectValidationService.charAt(0).toUpperCase() + selectValidationService.slice(1) + ' Validation'}                        \n                      </IonCol>\n                      <IonCol size=\"2\" style={{top: '5px'}}>\n                        <img style={{'width': '9px', 'height': '16px', transform: 'rotate(90deg)'}} alt=\"\" src=\"/assets/images/components/icon-arrow.svg\" />                      \n                      </IonCol>\n                  </IonRow>\n                </IonButton>  \n              </IonCol>\n            </IonRow>\n            <IonRow \n            style={{display: (providerServices && providerServices.validationTypes.length ? 'block' : 'none')}}\n            >\n              <IonCol size=\"12\">\n                {/*-- List Header with Button --*/}<br></br>\n                <IonListHeader>\n                  <IonLabel className=\"List-Header\">Incoming Requests</IonLabel>\n                  <IonButton size=\"small\" color=\"dark\" routerLink='/requests'>See All</IonButton>\n                </IonListHeader>\n              </IonCol>\n              <IonCol class=\"RequestBlock\">\n                {/* Items Incoming Active */}\n                {filteredIncomingTxn && filteredIncomingTxn[0] && filteredIncomingTxn[0].id && filteredIncomingTxn.map((txn: any) => \n                  <IonItem className=\"request-Item\" routerLink={`/requests/details/${txn.id}`} key={txn.id} >\n                  <IonThumbnail slot=\"start\">\n                    <img src={`../assets/images/components/icon-${txn.validationType}--request.svg`} alt=\"\" />\n                  </IonThumbnail>\n                  <IonLabel>\n                    <h5>{txn.did}</h5>\n                    <h4>{txn.validationType.charAt(0).toUpperCase()}{txn.validationType.slice(1)}: {txn.requestParams[txn.validationType]}</h4>\n                    <p>{relativeTime(txn.created)}</p>\n                  </IonLabel>\n                  <IonButton shape=\"round\" className=\"status\" color={`${txn.status === \"New\" ? \"light\" : \"\"}${txn.status === \"In progress\" ? \"primary\" : \"\"}`} \n                    slot=\"end\">\n                      {`\n                        ${txn.status === \"New\" ? \"New\" : \"\"}\n                        ${txn.status === \"In progress\" ? \"In Progress\" : \"\"}\n                      `}                      \n                      </IonButton>                  \n                </IonItem>\n                )}\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol size=\"12\">\n                {/*-- List Header with Button --*/}<br></br>\n                <IonListHeader>\n                  <IonLabel className=\"List-Header\">My Requests</IonLabel>\n                  <IonButton size=\"small\" color=\"dark\" routerLink='/requests'>See All</IonButton>\n                </IonListHeader>\n              </IonCol>\n              <IonCol class=\"RequestBlock\">\n                {/* Items Active */}\n                {pending_requests && pending_requests.map((txn: any) => \n                  <IonItem className=\"request-Item\" routerLink={`/requests/details/${txn.id}`} key={txn.id} >\n                  <IonThumbnail slot=\"start\">\n                    <img src={`../assets/images/components/icon-${txn.validationType}--request.svg`} alt=\"\" />\n                  </IonThumbnail>\n                  <IonLabel>\n                    <h2>{txn.validationType.charAt(0).toUpperCase()}{txn.validationType.slice(1)} Validation</h2>\n                    <p>{relativeTime(txn.created)}</p>\n                  </IonLabel>\n                  <IonButton shape=\"round\" className=\"status\" color={`${(txn.status === \"New\" || txn.status === 'Cancelation in progress') ? \"light\" : \"\"}${txn.status === \"In progress\" ? \"primary\" : \"\"}`} \n                    slot=\"end\">\n                      {`\n                        ${txn.status === \"New\" ? \"New\" : \"\"}\n                        ${txn.status === \"In progress\" ? \"In Progress\" : \"\"}\n                        ${txn.status === \"Cancelation in progress\" ? \"Cancelling\" : \"\"}\n                      `}                      \n                      </IonButton>                  \n                </IonItem>\n\n                )}\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonContent>\n      </IonPage>\n    );\n  }\n\nexport default React.memo(HomePage);\n","export function useProvider(optionalCallback: any = noop) {\n\n  const providers = (validationType: string, isComplete: any) => {\n    /**\n     * Request to get all providers for a validation type e.g. email\n     */\n\n      async function getData(url:any, validationType:string) {\n\n        const response = await fetch(url + validationType, {\n          method: 'GET',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer'\n        });\n\n        return response.json();\n      }\n\n\n      getData(`${process.env.REACT_APP_GET_PROVIDERS_BY_VALIDATION_TYPE}`, validationType)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback(response.data);  \n          }\n        },() => {\n      });\n\n  }\n  return [providers] as [(obj:any, obj1:any) => boolean]\n}\n\nfunction noop() {}","export function useValidation(optionalCallback: any = noop) {\n\n  const validationRequest = (data: any) => {\n    /**\n     * Request email validation to the backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      let txn:any = {}\n      txn.did = data.user.id\n      txn.validationType = data.validationType\n      txn.provider = data.providerId\n      txn.requestParams = {}\n      txn.requestParams[data.validationType] = data.user[data.validationType]\n\n      postData(`${process.env.REACT_APP_SUBMIT_VALIDATION_REQUEST}`, txn)\n        .then(response => {\n          if(response.meta.code === 200) {\n            if(response.data.duplicate === false){\n              optionalCallback({\"data\": response.data.validationtx, \"message\": \"Request submitted successfully. Please check the next steps section on request details page for more information\"});          \n            } else {\n              optionalCallback({\"data\": null, \"message\": \"Previous request already in progress.\"});          \n            }\n          }\n        });\n  }\n  return [validationRequest] as [(obj: any) => void]\n}\n\nfunction noop() {}","import React, { useCallback } from 'react';\n\n\nimport { IonContent ,IonListHeader, IonPage, IonTitle, IonGrid, IonRow, IonCol, IonLabel, IonToolbar, useIonViewWillEnter, useIonViewWillLeave, IonRefresher, IonRefresherContent } from '@ionic/react';\nimport './ServiceInvoke.css';\n\n// import { useEmailValidation } from '../hooks/useEmailValidation'\nimport { emailValidation, showNotification, hideNotification, nameValidation, telephoneValidation, genderValidation, locationValidation, birthdateValidation, birthplaceValidation, educationValidation, occupationValidation, wechatValidation, instagramValidation, facebookValidation, snapchatValidation, twitterValidation, telegramValidation, paypalValidation, elaValidation, websiteValidation, twitchValidation, weiboValidation } from '../store/requests'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../store'\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\n\nimport { getBirthdateValidationProviders, getBirthplaceValidationProviders, getEducationValidationProviders, getElaValidationProviders, getEmailValidationProviders, getFacebookValidationProviders, getGenderValidationProviders, getInstagramValidationProviders, getLocationValidationProviders, getNameValidationProviders, getOccupationValidationProviders, getTelephoneValidationProviders, getSnapchatValidationProviders, getTelegramValidationProviders, getTwitterValidationProviders, getWechatValidationProviders, getPaypalValidationProviders, ValidationProviderState, getWebsiteValidationProviders, getTwitchValidationProviders, getWeiboValidationProviders } from '../store/providers';\nimport { useProvider } from '../hooks/useProvider';\n\nimport { RefresherEventDetail } from '@ionic/core';\nimport { useValidation } from '../hooks/useValidation';\n// import { useNameValidation } from '../hooks/useNameValidation';\n// import { usePhoneValidation } from '../hooks/usePhoneValidation';\n\ndeclare let appManager: AppManagerPlugin.AppManager;\ndeclare let titleBarManager: TitleBarPlugin.TitleBarManager;\n\nconst ServiceInvokePage: React.FC = ({ history }: any) => {\n\n  const user = useSelector((state:AppState) => state.auth.user)\n  \n  let credentialType = ''\n  if(history.location.state && history.location.state.credentialType){\n    credentialType = history.location.state.credentialType\n  }  \n\n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'back' });\n    },\n    [history],\n  );\n\n  let myIconListener = (menuIcon:any) => {\n    if (menuIcon.key === \"back\") {\n        goTo('/home')\n    }\n  };\n\n  useIonViewWillEnter(() => {    \n      titleBarManager.setIcon(1, {\n        key: \"back\",\n        iconPath: \"back\"\n      });\n\n      titleBarManager.addOnItemClickedListener(myIconListener);\n      sendGetValidationProvidersReq(credentialType, {})\n  });\n\n  useIonViewWillLeave(() => {\n    titleBarManager.removeOnItemClickedListener(myIconListener);    \n    titleBarManager.setIcon(1, {\n      key: '',\n      iconPath: ''\n    });\n  })\n\n  const dispatch = useDispatch()\n\n  const validationProviders:ValidationProviderState = useSelector((state:AppState) => state.validationProviders)\n\n  //Get the list of validation providers for the given service e.g. email, name, telephone etc.\n  const [sendGetValidationProvidersReq] = useProvider((validationProviders:any) => { \n    if(validationProviders) {\n      switch(credentialType){\n        case 'email':\n          dispatch(getEmailValidationProviders(validationProviders)); break;\n        case 'name':\n          dispatch(getNameValidationProviders(validationProviders)); break;          \n        case 'telephone':\n          dispatch(getTelephoneValidationProviders(validationProviders)); break;                    \n        case 'gender':\n          dispatch(getGenderValidationProviders(validationProviders)); break;\n        case 'location':\n          dispatch(getLocationValidationProviders(validationProviders)); break;          \n        case 'birthdate':\n          dispatch(getBirthdateValidationProviders(validationProviders)); break;                    \n        case 'birthplace':\n          dispatch(getBirthplaceValidationProviders(validationProviders)); break;\n        case 'education':\n          dispatch(getEducationValidationProviders(validationProviders)); break;          \n        case 'occupation':\n          dispatch(getOccupationValidationProviders(validationProviders)); break;                    \n        case 'website':\n          dispatch(getWebsiteValidationProviders(validationProviders)); break;          \n        case 'wechat':\n          dispatch(getWechatValidationProviders(validationProviders)); break;\n        case 'instagram':\n          dispatch(getInstagramValidationProviders(validationProviders)); break;          \n        case 'facebook':\n          dispatch(getFacebookValidationProviders(validationProviders)); break;                    \n        case 'snapchat':\n          dispatch(getSnapchatValidationProviders(validationProviders)); break;\n        case 'twitter':\n          dispatch(getTwitterValidationProviders(validationProviders)); break;          \n        case 'telegram':\n          dispatch(getTelegramValidationProviders(validationProviders)); break;                    \n        case 'twitch':\n          dispatch(getTwitchValidationProviders(validationProviders)); break;                    \n        case 'weibo':\n          dispatch(getWeiboValidationProviders(validationProviders)); break;                              \n        case 'paypal':\n          dispatch(getPaypalValidationProviders(validationProviders)); break;\n        case 'ela':\n          dispatch(getElaValidationProviders(validationProviders)); break;          \n      }\n    }  \n  })    \n\n  const [sendValidationRequest] = useValidation((txn:any) => { \n    if(txn.data) {\n\n      // let validationProvider:any = validationProviders.emailValidationProviders.filter((provider:any) => provider.id === txn.data.provider);\n\n      let payload = {\n          method: \"new\",\n          param: {\n            id: txn.data.id,\n            type: credentialType,\n            value: txn.data.requestParams[credentialType],\n            validator: txn.data.provider //validationProvider.length > 0 ? validationProvider[0].name : txn.data.provider\n          }\n      }\n\n      // AppManagerPlugin.MessageType.INTERNAL = 1\n      // Cannot access ambient const enums when the '--isolatedModules' flag is provided.ts(2748)\n      // Using the real value of the constant due to above limitation\n\n      appManager.sendMessage(\"#service:backgroundservice\", 1, JSON.stringify(payload), ()=>{\n          // Nothing to do\n          console.log(\"stored a request to be checked by background service\")\n      }, (err:any)=>{\n          console.log(\"Failed to send RPC message to the background service\", err);\n      });\n\n\n      switch(credentialType){\n        case 'email':\n          dispatch(emailValidation(txn.data, () => goTo('/home'))); break;\n        case 'name':\n          dispatch(nameValidation(txn.data, () => goTo('/home'))); break;          \n        case 'telephone':\n          dispatch(telephoneValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'gender':\n          dispatch(genderValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'location':\n          dispatch(locationValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'birthdate':\n          dispatch(birthdateValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'birthplace':\n          dispatch(birthplaceValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'education':\n          dispatch(educationValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'occupation':\n          dispatch(occupationValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'wechat':\n          dispatch(wechatValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'website':\n          dispatch(websiteValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'instagram':\n          dispatch(instagramValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'facebook':\n          dispatch(facebookValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'snapchat':\n          dispatch(snapchatValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'twitter':\n          dispatch(twitterValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'telegram':\n          dispatch(telegramValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'twitch':\n          dispatch(twitchValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'weibo':\n          dispatch(weiboValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'paypal':\n          dispatch(paypalValidation(txn.data, () => goTo('/home'))); break;                    \n        case 'ela':\n          dispatch(elaValidation(txn.data, () => goTo('/home'))); break;                    \n      }      \n\n      dispatch(showNotification({\"message\": txn.message, \"type\": \"success\", \"show\": true}))\n      setTimeout(() => {\n        dispatch(hideNotification())\n      }, 5000)      \n    } \n    else {\n      history.push('/home');\n      dispatch(showNotification({\"message\": txn.message, \"type\": \"warning\", \"show\": true}))\n      setTimeout(() => {\n        dispatch(hideNotification())\n      }, 5000) \n    }\n   })\n\n   let providerid = \"\"\n   let validationtype = \"\"\n\n  const handleValidationProviderClick = (e: any) => {\n    providerid = e.currentTarget.getAttribute('data-providerid');\n    validationtype = e.currentTarget.getAttribute('data-validationtype');\n\n    let claim:any = {publisheddid: false}\n\n    // let claim:any = {email: false, name: false, telephone: false, gender: false, location: false, birthdate: false, birthplace: false, education: false, occupation: false, website: false, wechat: false, instagram: false, facebook: false, snapchat: false, twitter: false, telegram: false, twitch: false, weibo: false, paypal: false, ela: false, avatar: false}\n\n    claim[validationtype] = true\n\n    signIn(claim)\n  }\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => sendValidationRequest({ user: user, providerId: providerid, validationType: credentialType })))\n    }\n   })\n\n  const doRefresh = (event: CustomEvent<RefresherEventDetail>) => {\n    sendGetValidationProvidersReq(credentialType, {})\n    setTimeout(() => {\n      event.detail.complete();\n    }, 2000);\n  }\n\n  return (\n    <IonPage>\n      <IonContent>\n\n      <IonRefresher className=\"refresher\" slot=\"fixed\" onIonRefresh={doRefresh} pullFactor={0.5} pullMin={100} pullMax={200}>\n            <IonRefresherContent\n            pullingText=\"Pull to refresh\"\n            refreshingSpinner=\"circles\"\n            refreshingText=\"Refreshing Requests Status...\">\n            </IonRefresherContent>\n        </IonRefresher>\n\n      <IonToolbar className=\"sub-header\">\n        <IonTitle className=\"ion-text-start\">{credentialType && credentialType.charAt(0).toUpperCase()}{credentialType.slice(1)} Verification</IonTitle>\n      </IonToolbar>\n      <IonGrid className=\"pad-me--top thick-padding\">\n        <IonRow>\n        <IonCol className=\"Providers-List Profile\">\n        {\n                (\n                  !validationProviders[credentialType + \"ValidationProviders\"] ||\n                  !validationProviders[credentialType + \"ValidationProviders\"].length ||\n                  (validationProviders[credentialType + \"ValidationProviders\"].some((vp:any) => vp.did === user.id.split(':').pop()) && validationProviders[credentialType + \"ValidationProviders\"].length === 1)                  \n                )          \n                ? \n                (           \n                <IonListHeader>\n                  <IonGrid>\n                  <IonRow>                  \n                    <IonLabel className=\"List-Header\">No validation provider available for {credentialType} credential.</IonLabel>\n                  </IonRow>\n                  </IonGrid>\n                </IonListHeader>\n                ) \n                :\n                (\n                <IonListHeader>\n                  <IonLabel className=\"List-Header\">Choose a validation provider from the list</IonLabel>\n                </IonListHeader>                  \n                )               \n                }\n\n<br/>\n\n                {validationProviders[credentialType + \"ValidationProviders\"] && validationProviders[credentialType + \"ValidationProviders\"].map((validationProvider: any) => \n                <IonListHeader key={validationProvider.id} data-validationtype={credentialType} data-providerid={validationProvider.id} className=\"fieldContainer\" style={{'padding': '0', 'maxHeight': '85px', 'display': validationProvider.did !== user.id.split(':').pop() ? 'inline-block' : 'none' }} onClick={(e) => handleValidationProviderClick(e)}>\n                  <IonGrid>\n                    <IonRow>\n                      <IonCol size=\"3\">\n                        <img src={validationProvider.logo} alt=\"\" style={{'width': '64px', 'height': '64px'}}/>\n                      </IonCol>\n                      <IonCol size=\"9\">\n\n                        <IonGrid style={{'marginTop': '5px'}}>\n                          <IonRow><IonCol style={{'padding': '0'}}>                  \n                            <h2 style={{'margin': '0', 'padding': '0', 'fontSize': '12px'}}>{validationProvider.name}</h2>\n                          </IonCol></IonRow>\n                          <IonRow>\n                            <IonCol style={{'padding': '0', 'fontSize': '10px'}}>\n                              {Object.values(validationProvider.stats).reduce((a:any, b:any) => a + b, 0)} total requests\n                            </IonCol>\n                          </IonRow>\n\n                          <IonRow>\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-check.svg\" />\n                              <span> {validationProvider.stats.Approved ?? 0}</span> \n                            </IonCol>\n\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-rejected.svg\" />\n                              <span> {validationProvider.stats.Rejected ?? 0}</span> \n                            </IonCol>\n\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-wait.svg\" />\n                              <span> {Object.keys(validationProvider.stats).reduce(function (previous, key) {\nif(key === 'New' || key === 'In progress'){\n    return previous + validationProvider.stats[key];\n} else {\n  return previous\n}\n}, 0)\n}</span>\n                            </IonCol>\n                          </IonRow>\n                        </IonGrid>\n                      </IonCol>\n                    </IonRow>\n                  </IonGrid>\n                  <img style={{'width': '9px', 'height': '16px'}} alt=\"\" src=\"/assets/images/components/icon-arrow.svg\" />\n                </IonListHeader>\n                )} \n        </IonCol>\n        </IonRow>\n\n      </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ServiceInvokePage;\n","import React from 'react';\nimport { IonContent, IonHeader,IonListHeader, IonPage, IonTitle,IonImg,IonGrid,IonButtons,IonBackButton,IonRow,IonCol,IonLabel, IonButton, IonToolbar } from '@ionic/react';\nimport './Pleasewait.css';\nconst PleaseWaitPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader className=\"main-header\">\n        <IonToolbar>\n        <IonButtons slot=\"start\">\n          <IonBackButton />\n        </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n      <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Email Verification</IonTitle>\n        </IonToolbar>\n      <IonGrid className=\"pad-me--top\">\n        <IonRow>\n        <IonCol className=\"Providers-List\">\n        <IonImg className=\"loader text-center\" src=\"../assets/images/components/loading.gif\"></IonImg>\n        <IonListHeader>\n          \n                  <IonLabel className=\"List-Header\">Please Wait… <br></br>\nProcessing Your Request</IonLabel>\n                </IonListHeader>\n<br/>\n  <IonButton routerLink='/home' ></IonButton>\n        </IonCol>\n        </IonRow>\n\n      </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default PleaseWaitPage;","import React from 'react';\nimport { IonRow,IonCol,IonLabel, IonThumbnail,IonButton, IonItem } from '@ionic/react';\nimport './RequestBlocks.css';\nimport moment from 'moment'\nimport { textSpanContainsTextSpan } from 'typescript';\n\nconst RequestBlocks = (props: any) => {\n\n  const relativeTime = function(datetime:any) {\n    if (!datetime) return \"\";\n\n    return moment.utc(datetime).fromNow()\n  }    \n\n  const requests_txn = props.requests\n  const user = props.user\n  const tabName = props.tabName\n  return (\n        <>\n        {requests_txn && requests_txn.length > 0 ? \n        requests_txn.map((txn: any) =>\n          <IonRow key={txn.id}>\n          <IonCol className=\"RequestBlock\">\n          <IonItem routerLink={`/requests/details/${txn.id}`}>\n                    <IonThumbnail slot=\"start\">\n                      <img src={`../assets/images/components/icon-${txn.validationType}--request.svg`} alt=\"\" />\n                    </IonThumbnail>\n                    <IonLabel>\n                      <h2>{txn.validationType.charAt(0).toUpperCase()}{txn.validationType.slice(1)} Validation</h2>\n                      {/* { tabName === \"incoming\" && */}\n                        <p>{txn.requestParams[txn.validationType]}</p>\n                      {/* } */}\n                      <p>{relativeTime(txn.created)}</p>\n                    </IonLabel>\n\n                    <div>\n                      { tabName === \"all\" && txn.did !== user.id.split(':').pop() &&                    \n                      <IonButton shape=\"round\" className=\"status\" style={{margin: 0, display: 'block'}} color=\"primary\" \n                      slot=\"end\">Incoming</IonButton>\n                      }\n\n                      <IonButton shape=\"round\" className=\"status\" style={{margin: 0}} color={`${txn.status === \"Approved\" ? \"success\" : \"\"}${(txn.status === \"New\" || txn.status === 'Cancelation in progress') ? \"light\" : \"\"}${txn.status === \"In progress\" ? \"primary\" : \"\"}${txn.status === \"Rejected\" ? \"danger\" : \"\"}${txn.status === \"Expired\" ? \"medium\" : \"\"}${txn.status === \"Canceled\" ? \"warning\" : \"\"}`} \n                      slot=\"end\">\n                        {`\n                          ${txn.status === \"Approved\" ? \"Approved\" : \"\"} \n                          ${txn.status === \"New\" ? \"New\" : \"\"}\n                          ${txn.status === \"In progress\" ? \"In Progress\" : \"\"}\n                          ${txn.status === \"Rejected\" ? \"Rejected\" : \"\"}\n                          ${txn.status === \"Expired\" ? \"Expired\" : \"\"}\n                          ${txn.status === \"Canceled\" ? \"Cancelled\" : \"\"}\n                          ${txn.status === \"Cancelation in progress\" ? \"Cancelling\" : \"\"}\n                        `}                      \n                        </IonButton>\n                        </div>\n                  </IonItem>\n          </IonCol>\n          </IonRow>\n        ) : \n        \n        <IonRow>\n        <IonCol className=\"RequestBlock\">\n          <p>No request made so far.</p>\n        </IonCol>\n      </IonRow>\n      }\n      </>\n  );\n};\n\nexport default RequestBlocks;","export function useIncomingRequestsByDid(optionalCallback: any = noop) {\n\n  const incomingRequests = (userinfo: any) => {\n    /**\n     * Request to get new incoming requests for this user (as a validator) to the backend API.\n     */\n\n      async function getData(url = '') {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      if(userinfo){\n        const did = userinfo.id.split(':').pop();\n        getData(`${process.env.REACT_APP_GET_INCOMING_VALIDATION_REQUESTS_BY_PROVIDER_DID}` + did)\n        .then(response => {\n          if(response.meta.code === 200){\n            optionalCallback(response.data);          \n          }\n        });\n      }\n\n  }\n  return [incomingRequests] as [(obj: any) => void]\n}\n\nfunction noop() {}","import React, { useEffect } from 'react';\nimport { IonContent, IonPage, IonSegment, IonSegmentButton, IonTitle,IonGrid,IonRow,IonCol,IonLabel, IonToolbar, IonRefresher, IonRefresherContent, useIonViewWillEnter } from '@ionic/react';\nimport './Requests.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from '../store'\nimport RequestBlocks from './RequestBlocks';\nimport { setSelectedTabRequests, getIncomingRequests } from '../store/requests';\nimport { RefresherEventDetail } from '@ionic/core';\n\nimport { useRequests } from '../hooks/useRequests'\nimport { getAllRequests } from '../store/requests'\n// import { useIncomingRequests } from '../hooks/useIncomingRequests';\nimport { useIncomingRequestsByDid } from '../hooks/useIncomingRequestsByDid';\n// import { useProviderServices } from '../hooks/useProviderServices';\n// import { getProviderServices } from '../store/providers';\n\nconst RequestsPage: React.FC = () => {\n\n  const dispatch = useDispatch()  \n  const requests = useSelector((state:AppState) => state.requests)\n  const user = useSelector((state:AppState) => state.auth.user)  \n\n  const doRefresh = (event: CustomEvent<RefresherEventDetail>) => {\n    sendGetAllRequestsReq( user )\n    sendGetIncomingRequests( user )\n\n    setTimeout(() => {\n      event.detail.complete();\n    }, 2000);\n  }\n\n  const [sendGetAllRequestsReq] = useRequests((txn:any) => { \n    if(txn) {\n      dispatch(getAllRequests(txn))\n    }\n   })   \n\n   const [sendGetIncomingRequests] = useIncomingRequestsByDid((txn:any) => { \n    if(txn) {\n      dispatch(getIncomingRequests(txn))\n    }  \n   })\n\n   useIonViewWillEnter(() => {\n    sendGetAllRequestsReq( user )    \n    sendGetIncomingRequests( user )\n   });\n\n   useEffect(() => {\n     const outgoingTxn = requests.txn ? requests.txn : [];\n     const incomingTxn = requests.incoming_txn ? requests.incoming_txn : [];\n     dispatch(setSelectedTabRequests({'name':'all','data':[...outgoingTxn, ...incomingTxn]}))\n   },[])\n\n  const handleClick = function(e: any) {\n    let tab_event = e.detail.value;\n    if(tab_event === 'all'){\n      const outgoingTxn = requests.txn ? requests.txn : [];\n      const incomingTxn = requests.incoming_txn ? requests.incoming_txn : [];\n      dispatch(setSelectedTabRequests({'name':'all','data':[...outgoingTxn, ...incomingTxn]}))\n    }\n    if(tab_event === 'incoming'){\n      dispatch(setSelectedTabRequests({'name':'incoming','data':requests.incoming_txn}))      \n    }    \n    if(tab_event === 'active'){\n      dispatch(setSelectedTabRequests({'name':'pending','data':requests.pending_txn}))      \n    }\n    if(tab_event === 'approved'){\n      dispatch(setSelectedTabRequests({'name':'approved','data':requests.approved_txn}))            \n    }\n    if(tab_event === 'rejected'){\n      dispatch(setSelectedTabRequests({'name':'rejected','data':requests.rejected_txn}))            \n    }\n    if(tab_event === 'expired'){\n      dispatch(setSelectedTabRequests({'name':'expired','data':requests.expired_txn}))            \n    }\n    // if(tab_event === 'cancelled'){\n    //   dispatch(setSelectedTabRequests({'name':'cancelled','data':requests.cancelled_txn}))            \n    // }    \n  }  \n\n  return (\n    <IonPage>\n      <IonContent>\n\n        <IonRefresher className=\"refresher\" slot=\"fixed\" onIonRefresh={doRefresh} pullFactor={0.5} pullMin={80} pullMax={200}>\n            <IonRefresherContent\n            pullingText=\"Pull to refresh\"\n            refreshingSpinner=\"circles\"\n            refreshingText=\"Refreshing Requests Status...\">\n            </IonRefresherContent>\n        </IonRefresher>\n\n      <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Requests</IonTitle>\n        </IonToolbar>\n      <IonGrid>\n        <IonRow>\n          <IonCol>\n            <IonSegment className=\"custom-segment\" scrollable onIonChange={(e:any) => handleClick(e)}>\n          <IonSegmentButton value=\"all\" className={requests.selected_tab_name === 'all' ? 'active-tab' : ''}>\n            <IonLabel>All</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"incoming\" disabled={requests.incoming_txn == null || requests.incoming_txn.length === 0}>\n            <IonLabel>Incoming</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"active\" disabled={requests.pending_txn == null || requests.pending_txn.length === 0}>\n            <IonLabel>Active</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"approved\" disabled={requests.approved_txn == null || requests.approved_txn.length === 0}>\n            <IonLabel>Approved</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"rejected\" disabled={requests.rejected_txn == null || requests.rejected_txn.length === 0}>\n            <IonLabel>Rejected</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"expired\" disabled={requests.expired_txn == null || requests.expired_txn.length === 0}>\n            <IonLabel>Expired</IonLabel>\n          </IonSegmentButton>\n          {/* <IonSegmentButton value=\"cancelled\" disabled={requests.cancelled_txn == null || requests.cancelled_txn.length === 0}>\n            <IonLabel>Cancelled</IonLabel>\n          </IonSegmentButton> */}\n        </IonSegment>\n          </IonCol>\n        </IonRow>\n\n        <RequestBlocks requests={requests.selected_tab_txn || {}} tabName={requests.selected_tab_name} user={user} />\n\n      </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default React.memo(RequestsPage);","import React from 'react';\nimport { IonButton, IonGrid, IonRow, IonCol, IonListHeader, IonLabel, IonToolbar, IonImg, IonPage, IonTitle, IonContent, IonTextarea, IonIcon } from '@ionic/react';\nimport './Profile.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../store'\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\nimport { showNotification, hideNotification } from '../store/requests';\n\ndeclare global{\n  interface Window {\n      cordova : any\n  }\n}\n\nconst ProfilePage: React.FC = () => {\n\n  const dispatch = useDispatch()\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => '/profile'))\n    }\n   })\n  \n  const user = useSelector((state:AppState) => state.auth.user)\n\n  const copyText = function (elementId: any){\n    let copyText:any = document.querySelector(\"#\" + elementId);\n    let inputField = copyText.getElementsByTagName(\"textarea\")[0];\n    inputField.select();\n    document.execCommand(\"copy\");    \n    dispatch(showNotification({\"message\": \"Copied to clipboard\", \"type\": \"primary\", \"show\": true})) \n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n  }\n\n  return (\n    <IonPage className=\"Profile\">\n      <IonContent>\n        <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">My Account</IonTitle>\n        </IonToolbar>\n        <IonGrid className=\"pad-me--top thick-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n                <h2 style={{margin: 0}}>Your DID</h2>\n                <IonRow style={{marginLeft: '-5px'}}>\n                  <IonCol size=\"9\" className=\"userdid\">\n                    <IonTextarea rows={2} cols={20} id=\"userDID\" readonly value={user && user.id}>\n                    </IonTextarea>\n                  </IonCol>\n                    <IonCol size=\"1\" style={{margin: 'auto'}}>\n                      <IonIcon name=\"copy-outline\" src=\"/assets/images/icons/copy-outline.svg\" onClick={(e:any) => copyText(\"userDID\")} />\n                  </IonCol>\n                  <IonCol size=\"2\" style={{margin: 'auto'}}>\n              <img className=\"avatar-profile\" alt=\"\"\n    src={`${user && user.avatar ? user.avatar : \"../assets/images/components/default-avatar@2x.png\" }`\n      } />                \n              </IonCol>                                \n                </IonRow>\n              </IonCol>\n\n            </IonRow>\n\n\n          <IonRow>\n\n          { user && user.name &&          \n          <IonListHeader className=\"fieldContainer\">\n            <IonLabel className=\"label\"><IonIcon className=\"vertical-top\" name=\"person-outline\" src=\"/assets/images/icons/person-outline.svg\"></IonIcon><span className=\"icon-divider\">Name</span></IonLabel>\n            <IonLabel className=\"value\">{user.name}</IonLabel>\n          </IonListHeader>\n          }\n\n          { user && user.email &&          \n          <IonListHeader className=\"fieldContainer\">\n            <IonLabel className=\"label\"><IonIcon className=\"vertical-top\" name=\"mail-outline\" src=\"/assets/images/icons/mail-outline.svg\"></IonIcon><span className=\"icon-divider\">Email</span></IonLabel>\n            <IonLabel className=\"value\">{user.email}</IonLabel>\n          </IonListHeader>\n          }\n\n          { user && user.telephone &&                    \n          <IonListHeader className=\"fieldContainer\">\n            <IonLabel className=\"label\"><IonIcon className=\"vertical-top\" name=\"phone-portrait-outline\" src=\"/assets/images/icons/phone-portrait-outline.svg\"></IonIcon><span className=\"icon-divider\">Mobile Phone</span></IonLabel>\n            <IonLabel className=\"value\">{user.telephone}</IonLabel>\n          </IonListHeader>\n          }\n\n          </IonRow>\n          <IonRow className=\"text-center\">\n            <IonCol>\n              <IonButton className=\"signOut text-center\" color=\"light\" onClick={() => signIn({ publisheddid: false, name: false, email: false, telephone: false, avatar: false })}>              \n                <IonImg className=\"sign-out-button\" src=\"../assets/images/components/icon-sign-out.svg\" ></IonImg> Refresh Credentials\n              </IonButton>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default React.memo(ProfilePage);\n","declare let appManager: AppManagerPlugin.AppManager;\n\nexport function useCredSaver(optionalCallback: any = noop) {\n  const credSave = (credentials: any) => {\n    /**\n     * Request credential saving to the DID application.\n     */\n\n    credentials = [credentials.verifiedCredential]\n\n    appManager.sendIntent(\"credimport\", { credentials }, {}, (response: any) => {\n\n      if (response && response.result) {\n        optionalCallback(credentials)\n      }\n    })\n  }\n  return [credSave] as [(obj: any) => void]\n}\n\nfunction noop() {}","export function useCredSaved(optionalCallback: any = noop) {\n\n  const credSaved = (confirmation_id: any) => {\n    /**\n     * Update cred saved to the backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n\n        return response.json();\n      }\n\n      postData(`${process.env.REACT_APP_UPDATE_CRED_SAVED}` + confirmation_id.confirmation_id)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data, \"message\": \"Credentials saved successfully.\"});                      \n          }\n        });\n  }\n  return [credSaved] as [(obj: any) => void]\n}\n\nfunction noop() {}","export function useCancelRequest(optionalCallback: any = noop) {\n\n  const requestCancelled = (confirmation_id: any) => {\n    /**\n     * Cancel the New/In progress request via backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n\n        return response.json();\n      }\n\n      postData(`${process.env.REACT_APP_CANCEL_REQUEST}` + confirmation_id.confirmation_id)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data, \"message\": \"Cancellation initiated successfully.\"});                      \n          }\n        });\n  }\n  return [requestCancelled] as [(obj: any) => void]\n}\n\nfunction noop() {}","export function useApproveRequest(optionalCallback: any = noop) {\n\n  const requestApproved = (data: any) => {\n    /**\n     * Approve the New/In progress manual validation request via backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n\n        return response.json();\n      }\n\n      postData(`${process.env.REACT_APP_APPROVE_REQUEST}` + data.confirmationId, data.verifiedCredential)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data, \"message\": \"Approval initiated successfully.\"});                      \n          }\n        });\n  }\n  return [requestApproved] as [(obj: any) => void]\n}\n\nfunction noop() {}","export function useRejectRequest(optionalCallback: any = noop) {\n\n  const requestRejected = (confirmation_id: any) => {\n    /**\n     * Reject the New/In progress manual validation request via backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n\n        return response.json();\n      }\n\n      postData(`${process.env.REACT_APP_REJECT_REQUEST}` + confirmation_id.confirmation_id)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data, \"message\": \"Rejection initiated successfully.\"});                      \n          }\n        });\n  }\n  return [requestRejected] as [(obj: any) => void]\n}\n\nfunction noop() {}","declare let appManager: AppManagerPlugin.AppManager;\n\nexport function useCredIssue(optionalCallback: any = noop) {\n  const credIss = (credentials: Object) => {\n    /**\n     * Request credential issuing.\n     */\n\n     console.log(\"From cred issue\")\n     console.log(credentials)\n    //  credentials = Object.values(credentials)\n\n    appManager.sendIntent(\"credissue\", credentials, {}, (response: any) => {\n\n      if (response && response.result) {\n          console.log(\"Cred Issue result\")\n          console.log(response.result)\n\n          optionalCallback(JSON.parse(response.result.credential))\n      }\n    })\n  }\n  return [credIss] as [(obj: any) => void]\n}\n\nfunction noop() {}","import React, { useCallback } from 'react';\nimport { IonContent, IonPage, IonTitle,IonListHeader, IonGrid,IonRow,IonCol,IonLabel,IonToolbar, IonTextarea, IonIcon, IonButton, useIonViewWillEnter, useIonViewWillLeave, IonImg, useIonViewDidEnter } from '@ionic/react';\nimport './Details.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from '../store';\nimport { useParams } from 'react-router-dom';\nimport { useCredSaver } from '../hooks/useCredSaver';\nimport { useCredSaved } from '../hooks/useCredSaved';\nimport { showNotification, hideNotification, credSaved, requestCancelled, requestApproved, requestRejected } from '../store/requests';\nimport moment from 'moment'\nimport { useCancelRequest } from '../hooks/useCancelRequest';\nimport { useApproveRequest } from '../hooks/useApproveRequest';\nimport { useRejectRequest } from '../hooks/useRejectRequest';\nimport { useCredIssue } from '../hooks/useCredIssue';\nimport { useProvider } from '../hooks/useProvider';\nimport { getBirthdateValidationProviders, getBirthplaceValidationProviders, getEducationValidationProviders, getElaValidationProviders, getEmailValidationProviders, getFacebookValidationProviders, getGenderValidationProviders, getInstagramValidationProviders, getLocationValidationProviders, getNameValidationProviders, getOccupationValidationProviders, getPaypalValidationProviders, getSnapchatValidationProviders, getTelegramValidationProviders, getTelephoneValidationProviders, getTwitchValidationProviders, getTwitterValidationProviders, getWebsiteValidationProviders, getWechatValidationProviders, getWeiboValidationProviders, ValidationProviderState } from '../store/providers';\nimport { Storage } from '@capacitor/core';\n\ndeclare let titleBarManager: TitleBarPlugin.TitleBarManager;\n\nconst DetailsPage: React.FC = ({ history }: any) => {\n\n  const goTo = useCallback(\n    (path: string, direction:string = 'forward') => {\n      history.push(path, { direction: direction });\n    },\n    [history],\n  );\n\n  let myIconListener = (menuIcon:any) => {\n    if (menuIcon.key === \"back\") {\n        goTo('/requests', 'back')\n    }\n  };\n\n  useIonViewWillLeave(() => {\n    titleBarManager.removeOnItemClickedListener(myIconListener);    \n    titleBarManager.setIcon(1, {\n      key: '',\n      iconPath: ''\n    });\n  })\n\n  const dispatch = useDispatch()\n\n  const requests = useSelector((state:AppState) => state.requests)\n  const { id } = useParams()\n  let requestType:string = 'outgoing'\n\n  let requestDetails:any = []\n\n  let provider:any = {\n    'did': '',\n    'name': '', \n    'logo': '', \n    'validation': {}\n  }; \n\n  provider.validation[requestDetails.validationType] = {\n    'next_steps': []\n  }\n\n    //Check all outgoing transactions\n    if(requests && requests.txn)\n      requestDetails = requests.txn.filter((txn: any) => txn.id === id)\n\n    //Check all incoming transactions  \n    if(!requestDetails.length){\n        requestDetails = requests.incoming_txn.filter((txn: any) => txn.id === id)\n        requestType = \"incoming\"\n    }\n\n    if(requestDetails){\n      requestDetails = requestDetails[0]\n    }\n\n  useIonViewWillEnter(() => {    \n\n    titleBarManager.setIcon(1, {\n      key: \"back\",\n      iconPath: \"back\"\n    });\n\n    titleBarManager.addOnItemClickedListener(myIconListener);\n    sendGetValidationProvidersReq(requestDetails.validationType, {})\n  })\n\n\n  const validationProviders:ValidationProviderState = useSelector((state:AppState) => state.validationProviders)\n\n  if(validationProviders[requestDetails.validationType + \"ValidationProviders\"]){\n    provider = validationProviders[requestDetails.validationType + \"ValidationProviders\"].filter((provider:any) => provider.id === requestDetails.provider)[0]\n  }\n\n  //Get the list of validation providers for the given service e.g. email, name, telephone etc.\n  const [sendGetValidationProvidersReq] = useProvider((validationProviders:any) => { \n    if(validationProviders) {\n      switch(requestDetails.validationType){\n        case 'email':\n          dispatch(getEmailValidationProviders(validationProviders)); break;\n        case 'name':\n          dispatch(getNameValidationProviders(validationProviders)); break;          \n        case 'telephone':\n          dispatch(getTelephoneValidationProviders(validationProviders)); break;                    \n        case 'gender':\n          dispatch(getGenderValidationProviders(validationProviders)); break;\n        case 'location':\n          dispatch(getLocationValidationProviders(validationProviders)); break;          \n        case 'birthdate':\n          dispatch(getBirthdateValidationProviders(validationProviders)); break;                    \n        case 'birthplace':\n          dispatch(getBirthplaceValidationProviders(validationProviders)); break;\n        case 'education':\n          dispatch(getEducationValidationProviders(validationProviders)); break;          \n        case 'occupation':\n          dispatch(getOccupationValidationProviders(validationProviders)); break;                    \n        case 'website':\n          dispatch(getWebsiteValidationProviders(validationProviders)); break;          \n        case 'wechat':\n          dispatch(getWechatValidationProviders(validationProviders)); break;\n        case 'instagram':\n          dispatch(getInstagramValidationProviders(validationProviders)); break;          \n        case 'facebook':\n          dispatch(getFacebookValidationProviders(validationProviders)); break;                    \n        case 'snapchat':\n          dispatch(getSnapchatValidationProviders(validationProviders)); break;\n        case 'twitter':\n          dispatch(getTwitterValidationProviders(validationProviders)); break;          \n        case 'telegram':\n          dispatch(getTelegramValidationProviders(validationProviders)); break;                    \n        case 'twitch':\n          dispatch(getTwitchValidationProviders(validationProviders)); break;                    \n        case 'weibo':\n          dispatch(getWeiboValidationProviders(validationProviders)); break;                              \n        case 'paypal':\n          dispatch(getPaypalValidationProviders(validationProviders)); break;\n        case 'ela':\n          dispatch(getElaValidationProviders(validationProviders)); break;          \n      }\n    }  \n  })      \n\n  const copyText = function (elementId: any){\n    let copyText:any = document.querySelector(\"#\" + elementId);\n    let inputField = copyText.getElementsByTagName(\"textarea\")[0];\n    inputField.select();\n    document.execCommand(\"copy\");   \n    dispatch(showNotification({\"message\": \"Copied to clipboard\", \"type\": \"primary\", \"show\": true})) \n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n  }\n\n  const formatTime = function(datetime:any) {\n    if (!datetime) return \"\";\n\n    return moment.utc(datetime).format('MMMM Do YYYY, h:mm:ss a')    \n  }   \n\n\n  const [sendCredSaveIntent] = useCredSaver((credentials:any) => { \n      const confirmation_id = requestDetails.id\n      sendCredSaved({ confirmation_id });\n   })\n\n   const [sendCredSaved] = useCredSaved((response:any) => {\n    dispatch(credSaved(response))\n    dispatch(showNotification({\"message\": response.message, \"type\": \"success\", \"show\": true}))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n   })\n\n   const handleCancelRequestClick = (e:any) => {\n    const confirmation_id = requestDetails.id\n    sendCancelRequest({ confirmation_id });\n   }\n\n   const [sendCredIssueIntent] = useCredIssue((credentials:any) => { \n     sendApproveRequest({ \n       confirmationId: requestDetails.id,\n       verifiedCredential: credentials\n     });\n   })\n\n   const handleApproveRequestClick = (e:any) => {\n\n    const validationtype = e.currentTarget.getAttribute('data-validationtype')\n\n    //Sign the credential with validators DID using credissue intent\n    let credIssueRequestData:any = {}\n    credIssueRequestData.identifier = validationtype    \n    credIssueRequestData.types = [\"VerifiableCredential\"]\n    credIssueRequestData.subjectdid = \"did:elastos:\" + requestDetails.did.replace(\"did:elastos:\", \"\")\n    credIssueRequestData.properties = {}\n\n    switch(validationtype) {\n      case 'email': \n      case 'name': \n      case 'telephone':\n      case 'gender':\n      case 'location':\n      case 'birthdate':\n      case 'birthplace':\n      case 'education':\n      case 'occupation':\n      case 'website':       \n      {\n        let type = validationtype.charAt(0).toUpperCase() + validationtype.slice(1)\n        credIssueRequestData.types.push(type + \"Credential\")\n        credIssueRequestData.types.push(\"BasicProfileCredential\")\n\n        credIssueRequestData.properties[validationtype] = requestDetails.requestParams[validationtype]                \n      } break;\n      case 'wechat':\n      case 'instagram':\n      case 'facebook':\n      case 'snapchat':\n      case 'twitter':\n      case 'telegram':\n      case 'twitch':\n      case 'weibo':\n      case 'paypal':\n      case 'ela':\n      {\n        let type = validationtype.charAt(0).toUpperCase() + validationtype.slice(1)\n        credIssueRequestData.types.push(type + \"Credential\")\n        credIssueRequestData.types.push(\"InternetAccountCredential\")\n\n        credIssueRequestData.properties[validationtype] = requestDetails.requestParams[validationtype]                \n      } break;        \n      default: {\n        let type = validationtype.charAt(0).toUpperCase() + validationtype.slice(1)\n        credIssueRequestData.types.push(type + \"Credential\")\n        credIssueRequestData.types.push(\"BasicProfileCredential\")\n\n        credIssueRequestData.properties[validationtype] = requestDetails.requestParams[validationtype]        \n      }\n    }\n\n    let d = new Date();\n    credIssueRequestData.expirationdate = new Date(d.getFullYear() + 5, d.getMonth(), d.getDate()).toISOString() // Credential will expire on 2025-10-10 - Note the month's 0-index...\n\n    sendCredIssueIntent(credIssueRequestData)\n   }\n\n   const handleRejectRequestClick = (e:any) => {\n    const confirmation_id = requestDetails.id\n    sendRejectRequest({ confirmation_id });\n   }   \n\n   const [sendCancelRequest] = useCancelRequest((response:any) => {\n    dispatch(requestCancelled(response))\n    dispatch(showNotification({\"message\": response.message, \"type\": \"success\", \"show\": true}))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n   })\n\n   const [sendApproveRequest] = useApproveRequest((response:any) => {\n    dispatch(requestApproved(response, () => goTo('/home')))\n    dispatch(showNotification({\"message\": response.message, \"type\": \"success\", \"show\": true}))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n   })\n\n   const [sendRejectRequest] = useRejectRequest((response:any) => {\n    dispatch(requestRejected(response, () => goTo('/home')))\n    dispatch(showNotification({\"message\": response.message, \"type\": \"success\", \"show\": true}))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n   })   \n\n  const handleSaveCredClick = (e: any) => {\n    let verifiedCredential = requestDetails.verifiedCredential\n    verifiedCredential.credentialSubject[requestDetails.validationType] = requestDetails.requestParams[requestDetails.validationType]\n    sendCredSaveIntent({ verifiedCredential });\n  }  \n\n  return (\n    <>\n    {requestDetails &&\n    <IonPage className=\"Details\">\n      <IonContent>\n        <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">{requestType === 'outgoing' ? 'Your Request' : 'Incoming Request'}</IonTitle>\n        </IonToolbar>\n        <IonGrid className=\"pad-me--top thick-padding\">\n\n          {/* {requestType === 'outgoing' && */}\n          <IonRow \n          className={`text-center \n          ${requestDetails.status === \"Approved\" ? \"approved-tooltip\" : \"\"} \n          ${(requestDetails.status === \"New\" || requestDetails.status === \"Cancelation in progress\") ? \"pending-tooltip\" : \"\"} \n          ${requestDetails.status === \"In progress\" ? \"inprogress-tooltip\" : \"\"} \n          ${requestDetails.status === \"Rejected\" ? \"rejected-tooltip\" : \"\"} \n          ${requestDetails.status === \"Expired\" ? \"expired-tooltip\" : \"\"} \n          ${requestDetails.status === \"Canceled\" ? \"cancelled-tooltip\" : \"\"} \n          `}>\n            <IonCol>\n              <IonIcon src=\n              {`\n                ${requestDetails.status === \"Approved\" ? \"/assets/images/icons/icon-check.svg\" : \"\"} \n                ${(requestDetails.status === \"New\" || requestDetails.status === \"Cancelation in progress\") ? \"/assets/images/icons/icon-wait.svg\" : \"\"}\n                ${requestDetails.status === \"In progress\" ? \"/assets/images/icons/icon-in-progress.svg\" : \"\"}\n                ${requestDetails.status === \"Rejected\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n                ${requestDetails.status === \"Expired\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n                ${requestDetails.status === \"Canceled\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n              `}\n              ></IonIcon>\n              <IonLabel>\n              {`\n                ${requestDetails.status === \"Approved\" ? \"Approved\" : \"\"} \n                ${requestDetails.status === \"New\" ? \"Waiting for Approval\" : \"\"}\n                ${requestDetails.status === \"In progress\" ? \"Validation In Progress\" : \"\"}\n                ${requestDetails.status === \"Rejected\" ? \"Rejected\" : \"\"}\n                ${requestDetails.status === \"Expired\" ? \"Expired\" : \"\"}\n                ${requestDetails.status === \"Canceled\" ? \"Cancelled\" : \"\"}\n                ${requestDetails.status === \"Cancelation in progress\" ? \"Cancellation In Progress\" : \"\"}\n              `}\n              </IonLabel>\n            </IonCol>\n          </IonRow>\n          {/* } */}\n\n\n          <IonRow style={{border: '1px solid #eee', borderRadius: '2%', padding: '10px'}}>\n          <h2>Request</h2>\n          { requestDetails && requestDetails.validationType &&           \n            <IonListHeader className=\"fieldContainer2\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Validation Type</IonLabel>\n              </IonCol>\n              <IonCol size=\"8\" className='ion-text-right'>\n                  <IonImg src={`../assets/images/components/icon-${requestDetails.validationType}.svg`} style={{height: '32px', width: '32px', display: 'inline-block', verticalAlign: 'bottom'}}  /> \n                  <IonLabel className=\"value\" style={{verticalAlign: 'super'}}>{requestDetails.validationType.charAt(0).toUpperCase()}{requestDetails.validationType.slice(1)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.verifiedCredential && requestDetails.verifiedCredential.issuanceDate &&           \n            <IonListHeader className=\"fieldContainer2\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Issuance Date</IonLabel>\n              </IonCol>  \n              <IonCol size=\"8\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{formatTime(requestDetails.verifiedCredential.issuanceDate)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.verifiedCredential && requestDetails.verifiedCredential.expirationDate &&           \n            <IonListHeader>\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Expiration Date</IonLabel>\n              </IonCol>  \n              <IonCol size=\"8\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{formatTime(requestDetails.verifiedCredential.expirationDate)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            {requestType === 'incoming' && \n            <h2 style={{marginTop: '20px'}}>User Credentials</h2>\n            }\n            <IonListHeader className=\"fieldContainer2\">\n            <IonCol size=\"3\">\n              <IonLabel className=\"label\">DID</IonLabel>\n            </IonCol>            \n            <IonCol size=\"8\" className=\"userdid ion-text-right\">\n              <IonTextarea rows={2} cols={12} id=\"userDID\" readonly value={requestDetails && requestDetails.did}>\n              </IonTextarea>\n            </IonCol>\n            <IonCol size=\"1\" style={{margin: 'auto'}}>\n              <IonIcon name=\"copy-outline\" src=\"/assets/images/icons/copy-outline.svg\" onClick={(e:any) => copyText(\"userDID\")} />\n            </IonCol>           \n            </IonListHeader> \n            { requestDetails && requestDetails.requestParams && requestDetails.requestParams[requestDetails.validationType] &&          \n            <IonListHeader>\n              <IonCol size=\"3\">\n                <IonLabel className=\"label\">{requestDetails.validationType.charAt(0).toUpperCase()}{requestDetails.validationType.slice(1)}</IonLabel>\n              </IonCol>\n              <IonCol size=\"9\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{requestDetails.requestParams[requestDetails.validationType]}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n          </IonRow>\n\n          {requestDetails && provider && provider.did &&     \n          <IonRow style={{border: '1px solid #eee', borderRadius: '2%', padding: '10px',\n          marginTop: '10px', display: (requestType === 'outgoing' ? 'block' : 'none')}}>\n                <h2>Validator</h2>   \n\n              <IonListHeader className=\"fieldContainer2\">\n                <IonCol size=\"4\">\n                  <IonLabel className=\"label\">Name</IonLabel>\n                </IonCol>                \n                <IonCol size=\"8\" className=\"ion-text-right\">\n                  <img src={provider.logo} style={{height: '32px', width: '32px', display: 'inline-block', verticalAlign: 'bottom', borderRadius: '50%'}} alt=\"\" /> \n                  <IonLabel className=\"value ion-text-right\" style={{paddingLeft: '5px', verticalAlign: 'super'}}>{provider.name}</IonLabel>\n                </IonCol>\n              </IonListHeader>\n\n              <IonListHeader>\n                <IonCol size=\"3\">\n                  <IonLabel className=\"label\">DID</IonLabel>\n                </IonCol>            \n                <IonCol size=\"8\" className=\"validatordid ion-text-right\">\n                  <IonTextarea rows={2} cols={12} id=\"validatorDID\" readonly value={provider.did}>\n                  </IonTextarea>\n                </IonCol>\n                <IonCol size=\"1\" style={{margin: 'auto'}}>\n                  <IonIcon name=\"copy-outline\" src=\"/assets/images/icons/copy-outline.svg\" onClick={(e:any) => copyText(\"validatorDID\")} />\n                </IonCol>           \n              </IonListHeader> \n            </IonRow>\n          }\n\n            <IonRow style={{border: '1px solid #eee', borderRadius: '2%', padding: '10px',\n    marginTop: '10px', display: (requestType === 'outgoing' && requestDetails && (requestDetails.status === 'New' || requestDetails.status === 'In progress') ? 'block' : 'none')}}>\n            <h2>Next Steps</h2>\n\n            { requestDetails && (requestDetails.status === 'New' || requestDetails.status === 'In progress') && provider && provider.validation && provider.validation[requestDetails.validationType] && provider.validation[requestDetails.validationType].next_steps && provider.validation[requestDetails.validationType].next_steps.map((step: any, index: number) => \n              <IonListHeader className=\"fieldContainer\">\n                  <IonLabel>\n                    <span className=\"label\">Step {index + 1}:</span><br/>\n                    <span className=\"value\">{step}</span>\n                  </IonLabel>\n              </IonListHeader>\n            )}\n          </IonRow>\n\n          { requestType === 'outgoing' && requestDetails && (requestDetails.status === 'New' || requestDetails.status === 'In progress') &&          \n          <IonRow className=\"text-center\">\n            <IonCol>\n              <IonButton className=\"btnCancelRequest text-center\" fill=\"outline\"\n              onClick={(e) => handleCancelRequestClick(e)}\n              color=\"danger\"\n          >Cancel Request</IonButton>\n            </IonCol>\n          </IonRow>\n          }\n          { requestType === 'outgoing' && \n          <IonRow className=\"text-center\">\n            <IonCol>\n              <IonButton className=\"btnCredentials text-center\" \n              onClick={(e) => handleSaveCredClick(e)}\n              color={requestDetails.isSavedOnProfile === false && requestDetails.status === \"Approved\" ? 'success' : 'medium'}\n              disabled={requestDetails.isSavedOnProfile === false && requestDetails.status === \"Approved\" ? false : true}\n          >{requestDetails.isSavedOnProfile === true ? 'Saved' : 'Save Credentials'}</IonButton>\n            </IonCol>\n          </IonRow>\n          }\n\n          { requestType === 'incoming' && requestDetails && (requestDetails.status === 'New' || requestDetails.status === 'In progress') &&          \n          <IonRow className=\"text-center\" style={{marginTop: '20px'}}>\n            <IonCol>\n              <IonButton className=\"btnRejectRequest text-center\" fill=\"outline\"\n              onClick={(e) => handleRejectRequestClick(e)}\n              color=\"danger\"\n          >Reject</IonButton>\n            </IonCol>\n            <IonCol>\n              <IonButton className=\"btnApproveRequest text-center\" fill=\"solid\"\n              onClick={(e) => handleApproveRequestClick(e)}\n              data-validationtype={requestDetails.validationType}\n              color=\"success\"\n          >Approve</IonButton>\n            </IonCol>\n          </IonRow>\n          }\n\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n    }\n    </>\n  );\n};\n\nexport default DetailsPage;","import React, { useCallback, useEffect } from 'react';\nimport { IonPage, IonGrid, IonRow, IonCol, IonContent, IonImg } from '@ionic/react';\nimport './SplashScreen.css';\nimport { useDispatch } from 'react-redux';\nimport { authCheckStatus, login } from '../store/auth'\nimport { Plugins } from '@capacitor/core';\n\nconst SplashScreenPage: React.FC = ({ history }: any) => {\n\n  const { Storage } = Plugins;\n  const dispatch = useDispatch()\n\n  const goTo = useCallback(\n    (path: string) => {\n      if(history){\n        history.push(path, { direction: 'forward' });\n      }\n    },\n    [history],\n  );\n  \n  const onDeviceReady = useCallback(     \n    async () => {\n      const hasOnboarded = await Storage.get({ key: 'onboarded' })\n      const hasUserdata = await Storage.get({key: 'user' })\n      const intentData = await Storage.get({ key: 'intentData' })\n\n      setTimeout(async () => {\n          if(intentData.value){\n            // const user = Object.assign({}, ...credSubjects)\n            const parsedIntentData = JSON.parse(intentData.value)\n            const user = parsedIntentData.params.claims\n            dispatch(login(user, () => goTo('/home/intent-service-invoke')))\n            // goTo('/home/intent-service-invoke')\n          } else if(!hasOnboarded.value || !hasUserdata.value){\n            await Storage.set({ key: 'onboarded', value: 'true'})        \n            goTo('/onboarding')  \n          } else {\n            dispatch(authCheckStatus(() => goTo('/home')))\n          }\n        }, 3000)      \n    },\n    [Storage, dispatch, goTo],\n  );\n\n\n  // const onDeviceReady = useCallback(\n  //   () => {\n  //     setTimeout(() => {\n  //       dispatch(authCheckStatus(() => goTo('/home'), () => goTo('/onboarding')))\n  //     }, 3000)      \n  //   },\n  //   [dispatch, goTo],\n  // );  \n\n  useEffect(() => {\n    document.addEventListener('deviceready', onDeviceReady, false);\n\n    return () => {\n      document.removeEventListener('deviceready', onDeviceReady);\n    };\n  }, [onDeviceReady]);\n\n  return (\n    <IonPage className=\"SplashScreen\">\n      <IonContent className=\"background\" fullscreen>\n        <IonGrid>\n          <IonRow className=\"ion-text-center\">\n            <IonCol className=\"ion-align-items-center\">\n              <div>\n                <IonImg className=\"animated zoomIn delay-2s logo text-center spacer\" src=\"../assets/images/components/logo_vertical--white.svg\" />\n              </div>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SplashScreenPage;\n","import React, { useState, useCallback } from 'react';\nimport { IonPage, IonImg, IonGrid, IonRow, IonCol, IonContent, IonButton, IonAlert } from '@ionic/react';\nimport './OnBoarding.css';\nimport { useDispatch } from 'react-redux';\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\n\nconst OnBoardingPage: React.FC = ({ history }: any) => {\n\n  const dispatch = useDispatch()\n  const [showTutorial, setShowTutorial] = useState(false);\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => goTo('/home')))\n    }\n   })\n  \n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n    },\n    [history],\n  );\n\n  return (\n    <IonPage className=\"OnBoarding\">\n      <IonContent className=\"background\" fullscreen>\n\n      <IonGrid>\n        <IonRow>\n          <IonCol>\n            <div className=\"spacer\"></div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"\">\n              <IonImg className=\"logo2 ion-text-center text-center\" src=\"../assets/images/components/logo-horizontal--black.svg\" />\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"custom-margin-04 custom\"></div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div  className=\"ion-text-center\">\n              <IonImg className=\"graphics-01 text-center\" src=\"../assets/images/components/graphics-01.svg\" />\n            </div>\n          </IonCol>\n        </IonRow>  \n        <IonRow className=\"ion-text-center\">\n          <IonCol className=\"ion-align-items-center\">\n            <div>\n              <h4 style={{marginTop: 0}}>DID Validation Services</h4>\n              <h5>Email, Name, Phone</h5>\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"custom-margin-03\"></div>\n          </IonCol>\n        </IonRow>\n        <IonRow className=\"ion-text-center\">\n          <IonCol className=\"ion-align-items-center\">\n            <div>\n              <IonButton className=\"button cta\" onClick={() => { signIn({ publisheddid: false, name: false, email: false, telephone: false, avatar: false })}}>\n                <IonImg src=\"../assets/images/components/did-icon.svg\" className=\"did-icon\"></IonImg>\n                 Sign in with DID</IonButton>            \n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"tutorial-link\">\n              <button onClick={() => setShowTutorial(true)}>How to use vouch?</button>\n            </div>\n          </IonCol>\n        </IonRow>        \n      </IonGrid>\n\n      </IonContent>\n\n      <IonAlert\n          isOpen={showTutorial}\n          onDidDismiss={() => setShowTutorial(false)}\n          cssClass='Support service-popup-alert no-image'\n          header={'Tutorial'}\n          message={'<ol><li>Select from the list of available services such as \"Email Validation\", \"Phone Validation\", etc</li><li>Choose your preferred validator</li><li>Wait to be verified</li><li>You can swipe down on the Home page to refresh data</li><li>Check out \"Approved\" tab from Requests page to see all your past requests</li></ol>'}\n          buttons={['OK']}\n        />\n\n    </IonPage>\n  );\n};\n\nexport default OnBoardingPage;","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux'\n\nimport { IonPage, IonImg, IonGrid, IonRow, IonCol, IonContent, IonButton } from '@ionic/react';\nimport './SignIn.css';\n\nimport { useDID } from '../hooks/useDID'\nimport { login, authCheckStatus } from '../store/auth'\n\ndeclare global{\n  interface Window {\n      cordova : any\n  }\n}\n\nconst SignInPage: React.FC = ({ history }: any) => {\n\n  const dispatch = useDispatch()\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => goTo('/home')))\n    }\n   })\n  \n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n    },\n    [history],\n  );\n  \n  const onDeviceReady = useCallback(\n    () => {\n      dispatch(authCheckStatus(() => goTo('/home')));\n    },\n    [dispatch, goTo],\n  );\n\n  useEffect(() => {\n    document.addEventListener('deviceready', onDeviceReady, false);\n\n    return () => {\n      document.removeEventListener('deviceready', onDeviceReady);\n    };\n  }, [onDeviceReady]);\n\n  return (\n    <IonPage className=\"SignIn\">\n      <IonContent className=\"background\" fullscreen>\n\n      <IonGrid>\n      <IonRow>\n          <IonCol>\n            <div className=\"spacer\"></div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"\">\n              <IonImg className=\"logo2 ion-text-center text-center\" src=\"../assets/images/components/logo-horizontal--black.svg\" />\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"custom-margin-01\">\n\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow className=\"ion-text-center\">\n          <IonCol className=\"ion-align-items-center\">\n            <div>\n              <h4>Welcome to Vouch App</h4>\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow className=\"ion-text-center\">\n          <IonCol className=\"ion-align-items-center\">\n            <div>\n              <IonButton className=\"button cta\" onClick={() => { signIn({ publisheddid: false, name: false, email: false, telephone: false, avatar: false })}}>\n                <IonImg src=\"../assets/images/components/did-icon.svg\" className=\"did-icon\"></IonImg>\n                 Sign in with DID</IonButton>\n            </div>\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport { IonGrid, IonRow, IonCol, IonToolbar, IonPage, IonTitle, IonContent } from '@ionic/react';\nimport './Profile.css';\nimport './Support.css';\n\nconst SupportPage: React.FC = () => {\n\n  return (\n    <IonPage className=\"Profile Support\">\n      <IonContent>\n        <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Support</IonTitle>\n        </IonToolbar>\n        <IonGrid className=\"pad-me--top thick-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n              <h2 style={{margin: 0}}>Tutorial</h2>\n              <ol>\n                <li>Select from the list of available services such as \"Email Validation\", \"Phone Validation\", etc</li>\n                <li>Choose your preferred validator</li>\n                <li>Wait to be verified</li>\n                <li>You can swipe down on the Home page to refresh data</li>\n                <li>Check out \"Approved\" tab from Requests page to see all your past requests</li>\n              </ol>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default React.memo(SupportPage);\n","import React, { useCallback, useState, useEffect } from 'react';\n\nimport { IonContent ,IonListHeader, IonPage, IonTitle, IonGrid, IonRow, IonCol, IonLabel, IonToolbar, useIonViewWillEnter, IonRefresher, IonRefresherContent, IonButton, IonHeader, IonToast } from '@ionic/react';\nimport './ServiceInvoke.css';\n\nimport { emailValidation, showNotification, hideNotification, nameValidation, telephoneValidation, genderValidation, locationValidation, birthdateValidation, birthplaceValidation, educationValidation, occupationValidation, wechatValidation, instagramValidation, facebookValidation, snapchatValidation, twitterValidation, telegramValidation, paypalValidation, elaValidation, websiteValidation, twitchValidation, weiboValidation } from '../store/requests'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../store'\n\nimport { getBirthdateValidationProviders, getBirthplaceValidationProviders, getEducationValidationProviders, getElaValidationProviders, getEmailValidationProviders, getFacebookValidationProviders, getGenderValidationProviders, getInstagramValidationProviders, getLocationValidationProviders, getNameValidationProviders, getOccupationValidationProviders, getTelephoneValidationProviders, getSnapchatValidationProviders, getTelegramValidationProviders, getTwitterValidationProviders, getWechatValidationProviders, getPaypalValidationProviders, ValidationProviderState, getWebsiteValidationProviders, getTwitchValidationProviders, getWeiboValidationProviders } from '../store/providers';\nimport { useProvider } from '../hooks/useProvider';\n\nimport { RefresherEventDetail } from '@ionic/core';\nimport { Storage } from '@capacitor/core';\nimport { useValidation } from '../hooks/useValidation';\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\n\ndeclare let appManager: AppManagerPlugin.AppManager;\n\nconst IntentServiceInvokePage: React.FC = ({ history }: any) => {\n\n  const dispatch = useDispatch() \n  const user = useSelector((state:AppState) => state.auth.user)  \n  const [credentialType, setCredentialType] = useState('');\n  const [counter, setCounter] = useState(20);\n  const [showCounter, setShowCounter] = useState('');\n  const notification = useSelector((state:AppState) => state.requests.notification)\n\n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n    },\n    [history],\n  );\n\n  const getIntentCredentialType = async function() {\n    const intentData = await Storage.get({ key: 'intentData' })\n    if(intentData && intentData.value){\n      console.log(\"intent data found at useIonViewWillEnter\")\n      console.log(intentData.value)\n\n      const parsedIntentData = JSON.parse(intentData.value)\n\n      let credType = Object.keys(parsedIntentData.params.claims)[1]; //fetching the second key as the first is DID\n  \n      return credType;\n    }\n\n    return '';\n  }\n\n  useIonViewWillEnter(async () => {   \n      const credentialType = await getIntentCredentialType();\n      setCredentialType(credentialType);\n  });\n\n  useEffect(() => {\n    sendGetValidationProvidersReq(credentialType, {})\n  },[credentialType]);\n\n  const validationProviders = useSelector((state:AppState) => state.validationProviders) \n\n  //Get the list of validation providers for the given service e.g. email, name, telephone etc.\n  const [sendGetValidationProvidersReq] = useProvider((validationProviders:any) => { \n    if(validationProviders) {           \n      switch(credentialType){\n        case 'email':\n          dispatch(getEmailValidationProviders(validationProviders)); break;\n        case 'name':\n          dispatch(getNameValidationProviders(validationProviders)); break;          \n        case 'telephone':\n          dispatch(getTelephoneValidationProviders(validationProviders)); break;                    \n        case 'gender':\n          dispatch(getGenderValidationProviders(validationProviders)); break;\n        case 'location':\n          dispatch(getLocationValidationProviders(validationProviders)); break;          \n        case 'birthdate':\n          dispatch(getBirthdateValidationProviders(validationProviders)); break;                    \n        case 'birthplace':\n          dispatch(getBirthplaceValidationProviders(validationProviders)); break;\n        case 'education':\n          dispatch(getEducationValidationProviders(validationProviders)); break;          \n        case 'occupation':\n          dispatch(getOccupationValidationProviders(validationProviders)); break;                    \n        case 'website':\n          dispatch(getWebsiteValidationProviders(validationProviders)); break;          \n        case 'wechat':\n          dispatch(getWechatValidationProviders(validationProviders)); break;\n        case 'instagram':\n          dispatch(getInstagramValidationProviders(validationProviders)); break;          \n        case 'facebook':\n          dispatch(getFacebookValidationProviders(validationProviders)); break;                    \n        case 'snapchat':\n          dispatch(getSnapchatValidationProviders(validationProviders)); break;\n        case 'twitter':\n          dispatch(getTwitterValidationProviders(validationProviders)); break;          \n        case 'telegram':\n          dispatch(getTelegramValidationProviders(validationProviders)); break;                    \n        case 'twitch':\n          dispatch(getTwitchValidationProviders(validationProviders)); break;                    \n        case 'weibo':\n          dispatch(getWeiboValidationProviders(validationProviders)); break;                              \n        case 'paypal':\n          dispatch(getPaypalValidationProviders(validationProviders)); break;\n        case 'ela':\n          dispatch(getElaValidationProviders(validationProviders)); break;          \n      }\n    }  \n  })\n\n  useEffect(() => {\n    if(\n        !validationProviders[credentialType + \"ValidationProviders\"] ||\n        !validationProviders[credentialType + \"ValidationProviders\"].length ||\n        (validationProviders[credentialType + \"ValidationProviders\"].some((vp:any) => vp.did === user.id.split(':').pop()) && validationProviders[credentialType + \"ValidationProviders\"].length === 1)\n    ) {\n\n      const timer =\n        setInterval(async () => {\n          setCounter(counter-1)\n      \n          if (counter < 10) {\n            setShowCounter(\"0\"+counter.toString());\n          } else {\n            setShowCounter(counter.toString());      \n          }\n\n          if(counter <= 0){\n            closeIntent();\n          }\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [counter, credentialType, validationProviders]);\n\n  const closeIntent = async function() {\n    const intentData = await Storage.get({ key: 'intentData' })\n    if(intentData && intentData.value){\n      const parsedIntentData = JSON.parse(intentData.value)\n\n      appManager.sendIntentResponse(\n        parsedIntentData.action,\n        {},\n        parsedIntentData.intentId,\n        success => {\n          console.log(success)\n          Storage.remove({ \n            key: 'intentData'\n            }) \n            appManager.close()\n        },\n        error =>{\n          console.error(error)\n        }\n      )\n\n      console.log(\"intent response sent\")\n    } else {\n      console.log(\"closing without intent response\")\n      Storage.remove({ \n        key: 'intentData'\n      }) \n      appManager.close()\n    }\n  }\n\n  const [sendValidationRequest] = useValidation((txn:any) => {\n    if(txn.data) {\n\n      // let validationProvider:any = validationProviders.emailValidationProviders.filter((provider:any) => provider.id === txn.data.provider);\n\n      let payload = {\n          method: \"new\",\n          param: {\n            id: txn.data.id,\n            type: credentialType,\n            value: txn.data.requestParams[credentialType],\n            validator: txn.data.provider\n          }\n      }\n\n      // AppManagerPlugin.MessageType.INTERNAL = 1\n      // Cannot access ambient const enums when the '--isolatedModules' flag is provided.ts(2748)\n      // Using the real value of the constant due to above limitation\n\n      appManager.sendMessage(\"#service:backgroundservice\", 1, JSON.stringify(payload), ()=>{\n          // Nothing to do\n          console.log(\"stored a request to be checked by background service\")\n      }, (err:any)=>{\n          console.log(\"Failed to send RPC message to the background service\", err);\n      });\n\n      switch(credentialType){\n        case 'email':\n          dispatch(emailValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;\n        case 'name':\n          dispatch(nameValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;          \n        case 'telephone':\n          dispatch(telephoneValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'gender':\n          dispatch(genderValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'location':\n          dispatch(locationValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'birthdate':\n          dispatch(birthdateValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'birthplace':\n          dispatch(birthplaceValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'education':\n          dispatch(educationValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'occupation':\n          dispatch(occupationValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'wechat':\n          dispatch(wechatValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'website':\n          dispatch(websiteValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'instagram':\n          dispatch(instagramValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'facebook':\n          dispatch(facebookValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'snapchat':\n          dispatch(snapchatValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'twitter':\n          dispatch(twitterValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'telegram':\n          dispatch(telegramValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'twitch':\n          dispatch(twitchValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'weibo':\n          dispatch(weiboValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'paypal':\n          dispatch(paypalValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n        case 'ela':\n          dispatch(elaValidation(txn.data, () => {\n            goTo('/requests/intent-details/' + txn.data.id)\n          })); break;                    \n      }      \n\n      dispatch(showNotification({\"message\": txn.message, \"type\": \"success\", \"show\": true}))\n      setTimeout(() => {\n        dispatch(hideNotification())\n      }, 5000)            \n    } \n    else {\n      dispatch(showNotification({\"message\": txn.message, \"type\": \"warning\", \"show\": true}))\n      setTimeout(() => {\n        dispatch(hideNotification())\n        closeIntent();\n      }, 5000) \n    }\n   })\n\n   let providerid = \"\"\n\n  const handleValidationProviderClick = (e: any) => {\n\n    providerid = e.currentTarget.getAttribute('data-providerid');\n\n    let claim:any = {publisheddid: false}\n    claim[credentialType] = true\n\n    signIn(claim)\n  }\n\n  const [signIn] = useDID((credentials:any) => {\n    if(credentials.length) {      \n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => sendValidationRequest({ user: user, providerId: providerid, validationType: credentialType })))\n    }\n   })\n\n  const doRefresh = (event: CustomEvent<RefresherEventDetail>) => {\n    sendGetValidationProvidersReq(credentialType, {})\n    setTimeout(() => {\n      event.detail.complete();\n    }, 2000);\n  }   \n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToast color={notification.type} position=\"bottom\" isOpen={notification.show} message={notification.message} />\n      </IonHeader>\n      <IonContent>\n\n      <IonRefresher className=\"refresher\" slot=\"fixed\" onIonRefresh={doRefresh} pullFactor={0.5} pullMin={100} pullMax={200}>\n            <IonRefresherContent\n            pullingText=\"Pull to refresh\"\n            refreshingSpinner=\"circles\"\n            refreshingText=\"Refreshing Requests Status...\">\n            </IonRefresherContent>\n        </IonRefresher>\n\n      <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">{credentialType && credentialType.charAt(0).toUpperCase()}{credentialType.slice(1)} Verification</IonTitle>\n        </IonToolbar>\n      <IonGrid className=\"pad-me--top thick-padding\">\n        <IonRow>\n        <IonCol className=\"Providers-List Profile\">\n                {\n                (\n                  !validationProviders[credentialType + \"ValidationProviders\"] ||\n                  !validationProviders[credentialType + \"ValidationProviders\"].length ||\n                  (validationProviders[credentialType + \"ValidationProviders\"].some((vp:any) => vp.did === user.id.split(':').pop()) && validationProviders[credentialType + \"ValidationProviders\"].length === 1)\n                )          \n                ? \n                (           \n                <IonListHeader>\n                  <IonGrid>\n                  <IonRow>                  \n                    <IonLabel className=\"List-Header\">No validation provider available for {credentialType} credential.</IonLabel>\n                  </IonRow>\n                  <IonRow className=\"text-center\" style={{'marginTop': '80px'}}>\n                      <IonButton className=\"text-center\" \n                      onClick={(e) => closeIntent()}\n                      expand=\"block\" color=\"tertiary\" fill=\"solid\"\n                  >Close</IonButton>\n                  </IonRow>\n                  <IonRow className=\"text-center\">\n                    This prompt will automatically be closed in {showCounter} seconds.\n                  </IonRow>\n                  </IonGrid>\n                </IonListHeader>\n                ) \n                :\n                (\n                <IonListHeader>\n                  <IonLabel className=\"List-Header\">Choose a validation provider from the list</IonLabel>\n                </IonListHeader>                  \n                )               \n                }\n\n<br/>\n\n                {validationProviders[credentialType + \"ValidationProviders\"] && validationProviders[credentialType + \"ValidationProviders\"].map((validationProvider: any) => \n                <IonListHeader key={validationProvider.id} data-validationtype={credentialType} data-providerid={validationProvider.id} className=\"fieldContainer\" style={{'padding': '0', 'maxHeight': '85px', 'display': validationProvider.did !== user.id.split(':').pop() ? 'inline-block' : 'none' }} onClick={(e) => handleValidationProviderClick(e)}>\n                  <IonGrid>\n                    <IonRow>\n                      <IonCol size=\"3\">\n                        <img src={validationProvider.logo} alt=\"\" style={{'width': '64px', 'height': '64px'}}/>\n                      </IonCol>\n                      <IonCol size=\"9\">\n\n                        <IonGrid style={{'marginTop': '5px'}}>\n                          <IonRow><IonCol style={{'padding': '0'}}>                  \n                            <h2 style={{'margin': '0', 'padding': '0', 'fontSize': '12px'}}>{validationProvider.name}</h2>\n                          </IonCol></IonRow>\n                          <IonRow>\n                            <IonCol style={{'padding': '0', 'fontSize': '10px'}}>\n                              {Object.values(validationProvider.stats).reduce((a:any, b:any) => a + b, 0)} total requests\n                            </IonCol>\n                          </IonRow>\n\n                          <IonRow>\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-check.svg\" />\n                              <span> {validationProvider.stats.Approved ?? 0}</span> \n                            </IonCol>\n\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-rejected.svg\" />\n                              <span> {validationProvider.stats.Rejected ?? 0}</span> \n                            </IonCol>\n\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-wait.svg\" />\n                              <span> {Object.keys(validationProvider.stats).reduce(function (previous, key) {\nif(key === 'New' || key === 'In progress'){\n    return previous + validationProvider.stats[key];\n} else {\n  return previous\n}\n}, 0)\n}</span>\n                            </IonCol>\n                          </IonRow>\n                        </IonGrid>\n                      </IonCol>\n                    </IonRow>\n                  </IonGrid>\n                  <img style={{'width': '9px', 'height': '16px'}} alt=\"\" src=\"/assets/images/components/icon-arrow.svg\" />\n                </IonListHeader>\n                )}\n\n              {\n              (            \n                (validationProviders[credentialType + \"ValidationProviders\"] && \n              validationProviders[credentialType + \"ValidationProviders\"].length > 1 && \n              validationProviders[credentialType + \"ValidationProviders\"].some((vp:any) => vp.did === user.id.split(':').pop()))\n              \n              || \n              \n                (validationProviders[credentialType + \"ValidationProviders\"] && \n                validationProviders[credentialType + \"ValidationProviders\"].length > 0 &&\n                validationProviders[credentialType + \"ValidationProviders\"].some((vp:any) => vp.did !== user.id.split(':').pop())) \n              )\n              \n              &&\n                <IonGrid>\n                  <IonRow className=\"text-center\" style={{'marginTop': '80px'}}>\n                    <IonButton className=\"text-center\" \n                    onClick={(e) => closeIntent()}\n                    expand=\"block\" color=\"tertiary\" fill=\"solid\">Close</IonButton>\n                  </IonRow>                \n                </IonGrid>  \n              }              \n\n        </IonCol>\n        </IonRow>\n\n      </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default IntentServiceInvokePage;\n","import React, { useEffect, useState } from 'react';\nimport { IonContent, IonPage, IonTitle,IonListHeader, IonGrid,IonRow,IonCol,IonLabel,IonToolbar, IonTextarea, IonIcon, IonButton, IonImg } from '@ionic/react';\nimport './Details.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from '../store';\nimport { useParams } from 'react-router-dom';\nimport { showNotification, hideNotification, requestCancelled } from '../store/requests';\nimport moment from 'moment'\nimport { useCancelRequest } from '../hooks/useCancelRequest';\nimport { ValidationProviderState } from '../store/providers';\nimport { Storage } from '@capacitor/core';\n\ndeclare let appManager: AppManagerPlugin.AppManager;\n\nconst IntentDetailsPage: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const requests = useSelector((state:AppState) => state.requests)\n  const { id } = useParams()\n  const [counter, setCounter] = useState(20);\n  const [showCounter, setShowCounter] = useState('');\n\n  //Check in all outgoing transactions\n  let requestDetails = requests.txn.filter((txn: any) => txn.id === id)\n\n  if(requestDetails){\n    requestDetails = requestDetails[0]\n  }\n    \n  let provider:any = {\n    'did': '',\n    'name': '', \n    'logo': '', \n    'validation': {}\n  };\n\n  provider.validation[requestDetails.validationType] = {\n    'next_steps': []\n  }\n\n  useEffect(() => {\n      const timer =\n        setInterval(async () => {\n          setCounter(counter-1)\n      \n          if (counter < 10) {\n            setShowCounter(\"0\"+counter.toString());\n          } else {\n            setShowCounter(counter.toString());      \n          }\n\n          if(counter <= 0){\n            closeIntent();\n          }\n      }, 1000);\n      return () => clearInterval(timer);\n  }, [counter]);\n\n  const closeIntent = async function() {\n    const intentData = await Storage.get({ key: 'intentData' })\n    if(intentData && intentData.value){\n      const parsedIntentData = JSON.parse(intentData.value)\n\n      appManager.sendIntentResponse(\n        parsedIntentData.action,\n        {},\n        parsedIntentData.intentId,\n        success => {\n          Storage.remove({ \n            key: 'intentData'\n            }) \n            appManager.close()\n        },\n        error =>{\n          console.error(error)\n        }\n      )\n\n      console.log(\"intent response sent\")\n    } else {\n      console.log(\"closing without intent response\")\n      Storage.remove({ \n        key: 'intentData'\n      }) \n      appManager.close()\n    }\n  }\n\n  const validationProviders:ValidationProviderState = useSelector((state:AppState) => state.validationProviders)\n\n  if(validationProviders[requestDetails.validationType + \"ValidationProviders\"]){    \n    provider = validationProviders[requestDetails.validationType + \"ValidationProviders\"].filter((provider:any) => provider.id === requestDetails.provider)[0]\n  }\n\n  const copyText = function (elementId: any){\n    let copyText:any = document.querySelector(\"#\" + elementId);\n    let inputField = copyText.getElementsByTagName(\"textarea\")[0];\n    inputField.select();\n    document.execCommand(\"copy\");   \n    dispatch(showNotification({\"message\": \"Copied to clipboard\", \"type\": \"primary\", \"show\": true})) \n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n  }\n\n  const formatTime = function(datetime:any) {\n    if (!datetime) return \"\";\n\n    return moment.utc(datetime).format('MMMM Do YYYY, h:mm:ss a')    \n  }   \n\n   const handleCancelRequestClick = (e:any) => {\n    const confirmation_id = requestDetails.id\n    sendCancelRequest({ confirmation_id });\n   }\n\n   const [sendCancelRequest] = useCancelRequest((response:any) => {\n    dispatch(requestCancelled(response))\n    dispatch(showNotification({\"message\": response.message, \"type\": \"success\", \"show\": true}))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n   })\n\n  return (\n    <IonPage className=\"Details\">\n      <IonContent>\n        <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Your Request <IonButton className=\"text-center\" \n                      onClick={(e) => closeIntent() }\n                      style={{'paddingTop': '12px', 'marginLeft': '60px', 'marginTop': '5px'}}\n                      size=\"small\" color=\"tertiary\" fill=\"solid\"\n                  >Close ({showCounter} sec)</IonButton></IonTitle>\n        </IonToolbar>\n        <IonGrid className=\"pad-me--top thick-padding\">\n\n\n          <IonRow \n          className={`text-center \n          ${requestDetails.status === \"Approved\" ? \"approved-tooltip\" : \"\"} \n          ${(requestDetails.status === \"New\" || requestDetails.status === \"Cancelation in progress\") ? \"pending-tooltip\" : \"\"} \n          ${requestDetails.status === \"In progress\" ? \"inprogress-tooltip\" : \"\"} \n          ${requestDetails.status === \"Rejected\" ? \"rejected-tooltip\" : \"\"} \n          ${requestDetails.status === \"Expired\" ? \"expired-tooltip\" : \"\"} \n          ${requestDetails.status === \"Canceled\" ? \"cancelled-tooltip\" : \"\"} \n          `}>\n            <IonCol>\n              <IonIcon src=\n              {`\n                ${requestDetails.status === \"Approved\" ? \"/assets/images/icons/icon-check.svg\" : \"\"} \n                ${(requestDetails.status === \"New\" || requestDetails.status === \"Cancelation in progress\") ? \"/assets/images/icons/icon-wait.svg\" : \"\"}\n                ${requestDetails.status === \"In progress\" ? \"/assets/images/icons/icon-in-progress.svg\" : \"\"}\n                ${requestDetails.status === \"Rejected\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n                ${requestDetails.status === \"Expired\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n                ${requestDetails.status === \"Canceled\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n              `}\n              ></IonIcon>\n              <IonLabel>\n              {`\n                ${requestDetails.status === \"Approved\" ? \"Approved\" : \"\"} \n                ${requestDetails.status === \"New\" ? \"Waiting for Approval\" : \"\"}\n                ${requestDetails.status === \"In progress\" ? \"Validation In Progress\" : \"\"}\n                ${requestDetails.status === \"Rejected\" ? \"Rejected\" : \"\"}\n                ${requestDetails.status === \"Expired\" ? \"Expired\" : \"\"}\n                ${requestDetails.status === \"Canceled\" ? \"Cancelled\" : \"\"}\n                ${requestDetails.status === \"Cancelation in progress\" ? \"Cancellation In Progress\" : \"\"}\n              `}\n              </IonLabel>\n            </IonCol>\n          </IonRow>\n\n\n          <IonRow style={{border: '1px solid #eee', borderRadius: '2%', padding: '10px'}}>\n          <h2>Request</h2>\n          { requestDetails && requestDetails.validationType &&           \n            <IonListHeader className=\"fieldContainer2\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Validation Type</IonLabel>\n              </IonCol>\n              <IonCol size=\"8\" className='ion-text-right'>\n                <IonImg src={`../assets/images/components/icon-${requestDetails.validationType}.svg`} style={{height: '32px', width: '32px', display: 'inline-block', verticalAlign: 'bottom'}}  />  \n                  <IonLabel className=\"value\" style={{verticalAlign: 'super'}}>{requestDetails.validationType.charAt(0).toUpperCase()}{requestDetails.validationType.slice(1)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.verifiedCredential && requestDetails.verifiedCredential.issuanceDate &&           \n            <IonListHeader className=\"fieldContainer2\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Issuance Date</IonLabel>\n              </IonCol>  \n              <IonCol size=\"8\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{formatTime(requestDetails.verifiedCredential.issuanceDate)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.verifiedCredential && requestDetails.verifiedCredential.expirationDate &&           \n            <IonListHeader>\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Expiration Date</IonLabel>\n              </IonCol>  \n              <IonCol size=\"8\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{formatTime(requestDetails.verifiedCredential.expirationDate)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            <IonListHeader className=\"fieldContainer2\">\n            <IonCol size=\"3\">\n              <IonLabel className=\"label\">DID</IonLabel>\n            </IonCol>            \n            <IonCol size=\"8\" className=\"userdid ion-text-right\">\n              <IonTextarea rows={2} cols={12} id=\"userDID\" readonly value={requestDetails && requestDetails.did}>\n              </IonTextarea>\n            </IonCol>\n            <IonCol size=\"1\" style={{margin: 'auto'}}>\n              <IonIcon name=\"copy-outline\" src=\"/assets/images/icons/copy-outline.svg\" onClick={(e:any) => copyText(\"userDID\")} />\n            </IonCol>           \n            </IonListHeader> \n            { requestDetails && requestDetails.requestParams && requestDetails.requestParams[requestDetails.validationType] &&         \n            <IonListHeader>\n              <IonCol size=\"3\">\n              <IonLabel className=\"label\">{requestDetails.validationType.charAt(0).toUpperCase()}{requestDetails.validationType.slice(1)}</IonLabel>\n              </IonCol>\n              <IonCol size=\"9\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{requestDetails.requestParams[requestDetails.validationType]}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n          </IonRow>\n\n          {requestDetails && provider && provider.did &&  \n          <IonRow style={{border: '1px solid #eee', borderRadius: '2%', padding: '10px',\n    marginTop: '10px'}}>\n          <h2>Validator</h2>\n\n            <IonListHeader className=\"fieldContainer2\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Name</IonLabel>\n              </IonCol>                \n              <IonCol size=\"8\" className=\"ion-text-right\">\n                <img src={provider.logo} style={{height: '32px', width: '32px', display: 'inline-block', verticalAlign: 'bottom', borderRadius: '50%'}} alt=\"\" /> \n                <IonLabel className=\"value ion-text-right\" style={{paddingLeft: '5px', verticalAlign: 'super'}}>{provider.name}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n          \n            <IonListHeader>\n            <IonCol size=\"3\">\n              <IonLabel className=\"label\">DID</IonLabel>\n            </IonCol>            \n            <IonCol size=\"8\" className=\"validatordid ion-text-right\">\n              <IonTextarea rows={2} cols={12} id=\"validatorDID\" readonly value={provider.did}>\n              </IonTextarea>\n            </IonCol>\n            <IonCol size=\"1\" style={{margin: 'auto'}}>\n              <IonIcon name=\"copy-outline\" src=\"/assets/images/icons/copy-outline.svg\" onClick={(e:any) => copyText(\"validatorDID\")} />\n            </IonCol>           \n            </IonListHeader> \n            </IonRow>\n            }\n\n            <IonRow style={{border: '1px solid #eee', borderRadius: '2%', padding: '10px',\n    marginTop: '10px'}}>\n            <h2>Next Steps</h2>\n\n            { requestDetails && (requestDetails.status === 'New' || requestDetails.status === 'In progress') && provider && provider.validation && provider.validation[requestDetails.validationType] && provider.validation[requestDetails.validationType].next_steps && provider.validation[requestDetails.validationType].next_steps.map((step: any, index: number) => \n              <IonListHeader className=\"fieldContainer\">\n                  <IonLabel>\n                    <span className=\"label\">Step {index + 1}:</span><br/>\n                    <span className=\"value\">{step}</span>\n                  </IonLabel>\n              </IonListHeader>\n            )}\n\n          </IonRow>\n          { requestDetails && (requestDetails.status === 'New' || requestDetails.status === 'In progress') &&          \n          <IonRow className=\"text-center\">\n            <IonCol>\n              <IonButton className=\"btnCancelRequest text-center\" fill=\"outline\"\n              onClick={(e) => handleCancelRequestClick(e)}\n              color=\"danger\"\n          >Cancel Request</IonButton>\n            </IonCol>\n          </IonRow>\n          }\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default IntentDetailsPage;","export function useRequest(optionalCallback: any = noop) {\n\n  const request = (confirmation_id: any) => {\n    /**\n     * Request to get the status by confirmation id from the backend API.\n     */\n\n      async function getData(url = '') {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      getData(`${process.env.REACT_APP_GET_VALIDATION_REQUEST}` + confirmation_id.confirmation_id)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data[0]});                      \n          }\n        });\n  }\n  return [request] as [(obj: any) => void]\n}\n\nfunction noop() {}","enum CredentialType {\n    BASIC_PROFILE_CREDENTIAL = \"BasicProfileCredential\",\n    INTERNET_ACCOUNT_CREDENTIAL = \"InternetAccountCredential\"\n}\n\nexport default CredentialType","export function useRegisterValidator(optionalCallback: any = noop) {\n\n  const registerValidatorRequest = (data: any) => {\n    /**\n     * Request registering as a validator to the backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      // const did = data.user.id.split(':').pop();      \n      const provider = {\n        \"did\": data.user.id,        \n        \"name\": data.user.name,\n        \"logo\": data.user.avatar,\n        \"validation\": data.services\n      }\n\n      postData(`${process.env.REACT_APP_REGISTER_VALIDATOR}`, provider)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data, \"message\": \"Successfully registered as a validator for the selected services.\"});          \n          } else {\n            optionalCallback({\"data\": null, \"message\": \"Oops! something went wrong. Could not register as a validator.\"});          \n          }\n        });\n  }\n  return [registerValidatorRequest] as [(obj: any) => void]\n}\n\nfunction noop() {}","import React, { useCallback, useState, useEffect } from 'react';\nimport { IonGrid, IonRow, IonCol, IonToolbar, IonPage, IonTitle, IonContent, IonCheckbox, IonList, IonItem, IonLabel, IonButton, useIonViewWillEnter } from '@ionic/react';\nimport './Profile.css';\nimport './Support.css';\nimport { useProviderServices } from '../hooks/useProviderServices';\nimport { AppState } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProviderServices, setProviderServices } from '../store/providers';\nimport { useRegisterValidator } from '../hooks/useRegisterValidator';\nimport { showNotification, hideNotification } from '../store/requests';\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\nimport CredentialCode from './CredentialCode';\nimport CredentialType from './CredentialType';\n\ndeclare let titleBarManager: TitleBarPlugin.TitleBarManager;\n\nconst RegisterValidatorPage: React.FC = ({ history }: any) => {\n\n  interface Credentials {\n    val: CredentialCode;\n    type: CredentialType;\n    isChecked: boolean\n  }\n\n  const[checkedItems,setCheckedItems]= useState([\n    { val: CredentialCode.EMAIL, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.NAME, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.TELEPHONE, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.GENDER, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.LOCATION, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.BIRTHDATE, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.BIRTHPLACE, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.EDUCATION, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.OCCUPATION, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.WEBSITE, type: CredentialType.BASIC_PROFILE_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.WECHAT, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.INSTAGRAM, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.FACEBOOK, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.SNAPCHAT, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.TWITTER, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.TELEGRAM, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.TWITCH, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.WEIBO, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.PAYPAL, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false },\n    { val: CredentialCode.ELA, type: CredentialType.INTERNET_ACCOUNT_CREDENTIAL, isChecked: false }     \n  ])\n\nconst updateItem = (val: CredentialCode, newIsChecked: boolean) => {\n  var index = checkedItems.findIndex(x => x.val === val);\n\n  let g:any = checkedItems[index]\n  g['isChecked'] = newIsChecked\n  if (index === -1){\n    // handle error \n  }\n  else {\n    setCheckedItems([\n      ...checkedItems.slice(0,index),\n      g,\n      ...checkedItems.slice(index+1)\n    ]);\n  }\n}\n\n  const dispatch = useDispatch()  \n  const providerServices = useSelector((state:AppState) => state.validationProviders.providerServices)\n  const user = useSelector((state:AppState) => state.auth.user)  \n\n\n\n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n    },\n    [history],\n  );\n\n  let myIconListener = (menuIcon:any) => {\n    if (menuIcon.key === \"back\") {\n        goTo('/home')\n    }\n  };  \n\n  useEffect(() => {\n      if(!providerServices){\n        sendGetProviderServices(user.id)\n      } else {\n        populateRegisteredServices(providerServices)\n      }\n   },\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n   []\n );\n\n  useIonViewWillEnter(() => {\n    titleBarManager.setIcon(1, {\n      key: \"back\",\n      iconPath: \"back\"\n    });\n\n    titleBarManager.addOnItemClickedListener(myIconListener);\n  });\n\n  const [sendGetProviderServices] = useProviderServices((services:any) => { \n    if(services) {\n      dispatch(getProviderServices(services))\n\n      populateRegisteredServices(services)\n    }\n  })   \n\n  const populateRegisteredServices = (services:any) => {\n    if(services && services.validationTypes){\n      services.validationTypes.forEach(function(service:any) {\n        updateItem(service, true);\n      })\n    }    \n  }\n\n\n\n  let services:object = {}\n\n  const handleSubmitRequestClick = (e: any) => {\n\n    const tempServices = checkedItems.map(function(s){\n      if(s.isChecked){\n        return {[s.val]: {\"manual\": true, \"next_steps\": []}}\n      }\n      return {}\n    })\n\n    for(let i=0;i<tempServices.length;i++){\n      //Check if the service object is not empty\n      if(!(Object.keys(tempServices[i]).length === 0 && [tempServices[i]].constructor === Object)){\n        Object.assign(services, tempServices[i])\n      }\n    }\n\n    /* Sample request data\n    services = {\n      \"email\": {\n          \"manual\": true,\n          \"next_steps\": []\n      },\n      \"name\": {\n          \"manual\": true,\n      }\n    }*/\n\n    signIn({ publisheddid: false, name: true, avatar: true })\n  }\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => sendRegisterValidatorRequest({ user: user, services: services })))    \n    }\n   })\n\n  const [sendRegisterValidatorRequest] = useRegisterValidator((provider:any) => { \n    if(provider) {\n      dispatch(setProviderServices(provider, () => goTo('/home')))\n      dispatch(showNotification({\"message\": provider.message, \"type\": \"success\", \"show\": true}))\n      setTimeout(() => {\n        dispatch(hideNotification())\n      }, 5000)      \n    } \n    else {\n      history.push('/home');\n      dispatch(showNotification({\"message\": provider.message, \"type\": \"warning\", \"show\": true}))\n      setTimeout(() => {\n        dispatch(hideNotification())\n      }, 5000) \n    }\n   })\n\n  return (\n    <IonPage className=\"Profile Support\">\n      <IonContent>\n        <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Register as a Validator</IonTitle>\n        </IonToolbar>\n        <IonGrid className=\"pad-me--top thick-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n              <h2 style={{margin: 0}}>Services</h2>\n\n              {/*-- Checkboxes in a List --*/}\n              <IonList>\n                { checkedItems.map(({val, isChecked}) => (\n                  <IonItem key={val} \n                  // disabled={(providerServices && providerServices.validationTypes.includes(val)) ?? isChecked}\n                  >\n                    <IonCheckbox slot=\"end\" value={val} checked={isChecked} onIonChange={e => updateItem(val, e.detail.checked)} />\n                    <IonLabel>{val.charAt(0).toUpperCase()}{val.slice(1)} Validation</IonLabel>\n                  </IonItem>\n                )) }\n              </IonList>\n              </IonCol>\n          </IonRow>\n          <IonRow className=\"text-center\">\n            <IonCol>\n              <IonButton color=\"success\" fill=\"solid\" className=\"text-center\" onClick={(e) => handleSubmitRequestClick(e)}>Submit Request</IonButton>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default React.memo(RegisterValidatorPage);","import React, { useEffect, useCallback } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport {\n  IonApp,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n  IonImg\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\nimport ServiceInvoke from './pages/ServiceInvoke';\nimport PleaseWait from './pages/Pleasewait';\nimport Requests from './pages/Requests';\nimport Profile from './pages/Profile';\nimport Details from './pages/Details';\nimport SplashScreen from './pages/SplashScreen';\nimport OnBoarding from './pages/OnBoarding';\nimport SignIn from './pages/SignIn';\nimport Support from './pages/Support';\nimport IntentServiceInvoke from './pages/IntentServiceInvoke';\nimport IntentDetails from './pages/IntentDetails';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Added CSS */\nimport '../node_modules/animate.css/animate.min.css';\n// import url('https://fonts.googleapis.com/css?family=Poppins');\n\n/* Theme variables */\nimport './theme/variables.css';\nimport './theme/fonts.css';\nimport { Storage } from '@capacitor/core';\nimport { useRequest } from './hooks/useRequest';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useProvider } from './hooks/useProvider';\nimport { AppState } from './store';\nimport RegisterValidator from './pages/RegisterValidator';\nimport { useIncomingRequestsByDid } from './hooks/useIncomingRequestsByDid';\n\ndeclare let appManager: AppManagerPlugin.AppManager;\ndeclare let titleBarManager: TitleBarPlugin.TitleBarManager;\ndeclare let notificationManager: NotificationManagerPlugin.NotificationManager;\n\ntype RPCMessage = {\n  method: string;\n  param: any;\n}\n\nconst App: React.FC = () => {\n\n  const history = createBrowserHistory();  \n\n  const dispatch = useDispatch()  \n  const validationProviders = useSelector((state:AppState) => state.validationProviders)\n  // const user = useSelector((state:AppState) => state.auth.user)  \n\n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n      history.go(0);\n    },\n    [history],\n  );\n\n  const onDeviceReady = useCallback(\n    () => {\n\n      appManager.getStartupMode((startupInfo: AppManagerPlugin.StartupInfo) => {\n        if (startupInfo.startupMode === 'service'){\n          console.log(\"I am working in the background\");\n          initServiceListener(dispatch);\n        } else {\n              appManager.setIntentListener((intent: AppManagerPlugin.ReceivedIntent) => {\n                onReceiveIntent(intent, goTo, dispatch);\n              });\n\n              titleBarManager.setTitle(\"Vouch dApp\");\n              titleBarManager.setBackgroundColor(\"#4D2CC8\");\n              titleBarManager.setForegroundMode(0);\n\n              appManager.setVisible(\"show\");\n        }\n      });\n    },\n    [goTo, dispatch],\n  );\n\n  useEffect(() => {\n    document.addEventListener('deviceready', onDeviceReady, false);\n    \n    return () => {\n      document.removeEventListener('deviceready', onDeviceReady);\n    };\n  }, [onDeviceReady]);\n\n  return (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route path=\"/splashscreen\" component={SplashScreen} exact={true} />\n        <Route path=\"/onboarding\" component={OnBoarding} exact={true} />                \n        <Route path=\"/signin\" component={SignIn} exact={true} />                      \n        <Route exact path=\"/\" render={() => <Redirect to=\"/splashscreen\" />} />\n        <Route path=\"/register-validator\" component={RegisterValidator} exact={true} />\n        <Route path=\"/home/intent-service-invoke\" component={IntentServiceInvoke} exact={true} />\n        <Route path=\"/requests/intent-details/:id\" component={IntentDetails} />\n\n        <IonTabs>\n        <IonRouterOutlet>\n          <Route path=\"/home\" component={Home} exact={true} />\n          <Route path=\"/home/service-invoke\" component={ServiceInvoke} exact={true} />\n          <Route path=\"/home/pleasewait\" component={PleaseWait} exact={true} />\n          <Route path=\"/requests\" render={() => <Requests />} exact={true} />\n          <Route path=\"/requests/details/:id\" component={Details} />          \n          <Route path=\"/profile\" render={() => <Profile />} exact={true} /> \n          <Route path=\"/support\" render={() => <Support />} exact={true} />\n        </IonRouterOutlet>\n\n        <IonTabBar slot=\"bottom\">\n          <IonTabButton tab=\"home\" href=\"/home\">\n            <IonImg className=\"tab-icon icon-Home\" src=\"../assets/images/components/empty.png\"></IonImg>\n            <IonLabel>Home</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"requests\" href=\"/requests\">\n          <IonImg img-src=\"\" className=\"tab-icon icon-Requests\" src=\"../assets/images/components/empty.png\"></IonImg>\n            <IonLabel>Requests</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"profile\" href=\"/profile\">\n          <IonImg className=\"tab-icon icon-Profile\"  src=\"../assets/images/components/empty.png\"></IonImg>\n            <IonLabel>Profile</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"support\" href=\"/support\">\n          <IonImg className=\"tab-icon icon-Support\"  src=\"../assets/images/components/empty.png\"></IonImg>\n            <IonLabel>Support</IonLabel>\n          </IonTabButton>\n        </IonTabBar>\n      </IonTabs>\n      </IonRouterOutlet>\n      {/* <Route path=\"/dashboard\" component={Dashboard} exact={true} />       */}\n    </IonReactRouter>\n  </IonApp>\n  )};\n\nconst initServiceListener = (dispatch:any) => {\n\n  appManager.setListener(async (message: AppManagerPlugin.ReceivedMessage) => {\n    let rpcMessage = JSON.parse(message.message) as RPCMessage;\n    switch (rpcMessage.method) {\n        case \"new\":\n            // notificationManager.sendNotification({\n            //     key: rpcMessage.param.id,\n            //     title: `Your ${rpcMessage.param.type} validation request from ${rpcMessage.param.validator} has been generated.`,\n            //     message : `${rpcMessage.param.type}:  ${rpcMessage.param.value} `\n            // })\n\n            const requestIds = await Storage.get({ key: 'pendingRequests' });\n\n            let parsedPendingRequests:any = [];\n            if(requestIds && requestIds.value){\n              parsedPendingRequests = JSON.parse(requestIds.value)\n              parsedPendingRequests.push(rpcMessage.param.id)\n            } else {\n              parsedPendingRequests.push(rpcMessage.param.id);\n            }\n\n            await Storage.set({ key: 'pendingRequests', value: JSON.stringify(parsedPendingRequests) });\n            break;\n        default:\n            break;\n    }\n  });\n\n  checkIncomingRequests();\n  checkPendingRequests(dispatch);\n}\n\nconst onReceiveIntent = async (intent: AppManagerPlugin.ReceivedIntent, goTo: any, dispatch: any) => {\n  console.log(\"Intent received message:\", intent.action, \". params: \", intent.params, \". from: \", intent.from);\n  console.log(\"Trying to navigate to service invoke page from intent\")\n\n  titleBarManager.setTitle(\"Vouch dApp\");\n  titleBarManager.setBackgroundColor(\"#4D2CC8\");\n  titleBarManager.setForegroundMode(0);\n  appManager.setVisible(\"show\");\n\n  await Storage.set({ \n    key: 'intentData', \n    value: JSON.stringify({\n      \"action\": intent.action,\n      \"params\": intent.params,\n      \"from\": intent.from,\n      \"intentId\": intent.intentId\n    }) \n  });                        \n\n  goTo('/splashscreen');\n\n}\n\n// store them in localstorage with the key incomingRequests \nconst storeIncomingRequests = async (user: any) => {   \n  sendGetIncomingRequests( user )\n}\n\nconst [sendGetIncomingRequests] = useIncomingRequestsByDid(async (incomingRequests:any) => { \n  if(incomingRequests) {\n    \n    let newIncomingRequests = [];\n    for(let i=0;i<incomingRequests.length;i++){\n      if(incomingRequests[i].status === \"New\"){\n        newIncomingRequests.push(incomingRequests[i].id)\n      }\n    }\n\n    await Storage.set({ key: 'incomingRequests', value: JSON.stringify(newIncomingRequests) });                \n  }  \n })\n\nconst checkIncomingRequests = async () => {\n\n  const userdata = await Storage.get({key: 'user' })\n  await storeIncomingRequests(JSON.parse(userdata.value))  \n\n  // use hook to get all incoming requests for the user's DID and store it in localstorage\n  // setTimeout to run it first time (immediately) and send notifications\n  // setInterval for every minute and send notifications (for continuous monitoring if there are any new requests to be approved/rejected)\n\n  setTimeout(async () => {\n    const requestIds = await Storage.get({ key: 'incomingRequests' });\n\n    if(requestIds && requestIds.value){\n      let parsedIncomingRequests = JSON.parse(requestIds.value);\n      let remainingIncomingRequests = JSON.parse(requestIds.value);\n\n      const [sendGetRequest] = useRequest(async (response:any) => { \n\n        if (response != null && response.data != null){\n          if(response.data.status === \"New\"){\n\n            let title = `${response.data.validationType.charAt(0).toUpperCase()}${response.data.validationType.slice(1)} Validation Request ${response.data.status}`\n            let message = `You have received ${response.data.validationType} validation request for the credential ${response.data.requestParams[response.data.validationType]}. Please Approve or Reject.`                              \n \n            notify(response.data.id, title, message)\n\n            remainingIncomingRequests = remainingIncomingRequests.filter((value:any) => value !== response.data.id)  \n            await Storage.set({ key: 'incomingRequests', value: JSON.stringify(remainingIncomingRequests) });                \n          }\n        }         \n      })          \n\n      for (let i = 0; i < parsedIncomingRequests.length; i++) {\n        sendGetRequest({ confirmation_id: parsedIncomingRequests[i] });\n      }\n    } else {\n        console.log(\"No incoming requests to notify\")\n    }\n   }, 0 )\n\n  const intervalTime = (parseInt(`${process.env.REACT_APP_BACKGROUND_SERVICE_DELAY_MINUTES}`) * 60) * 1000;\n\n  setInterval(async () => {\n    const requestIds = await Storage.get({ key: 'incomingRequests' });\n\n    if(requestIds && requestIds.value){\n      let parsedIncomingRequests = JSON.parse(requestIds.value);\n      let remainingIncomingRequests = JSON.parse(requestIds.value);\n\n      const [sendGetRequest] = useRequest(async (response:any) => { \n\n        if (response != null && response.data != null){\n          if(response.data.status === \"New\"){\n\n            let title = `${response.data.validationType.charAt(0).toUpperCase()}${response.data.validationType.slice(1)} Validation Request ${response.data.status}`\n            let message = `You have received ${response.data.validationType} validation request for the credential ${response.data.requestParams[response.data.validationType]}. Please Approve or Reject.`                              \n\n            notify(response.data.id, title, message)\n\n            remainingIncomingRequests = remainingIncomingRequests.filter((value:any) => value !== response.data.id)  \n            await Storage.set({ key: 'incomingRequests', value: JSON.stringify(remainingIncomingRequests) });                \n          }\n        }         \n      })          \n\n      for (let i = 0; i < parsedIncomingRequests.length; i++) {\n        sendGetRequest({ confirmation_id: parsedIncomingRequests[i] });\n      }\n    } else {\n        console.log(\"No incoming requests to notify\")\n    }\n   }, intervalTime )\n}\n\nconst notify = (key:string, title:string, message:string) => {\n  notificationManager.sendNotification({\n    key: key,\n    title: title,\n    message: message\n  })\n}\n\nconst checkPendingRequests = (dispatch:any) => {\n\n  // console.log(\"checkPendingRequests\");\n  const intervalTime = (parseInt(`${process.env.REACT_APP_BACKGROUND_SERVICE_DELAY_MINUTES}`) * 60) * 1000;\n\n  setInterval(async () => {\n    const requestIds = await Storage.get({ key: 'pendingRequests' });\n    let emailValidationProviders = await Storage.get({ key: 'emailValidationProviders'});\n    let nameValidationProviders = await Storage.get({ key: 'nameValidationProviders'});\n    let telephoneValidationProviders = await Storage.get({ key: 'telephoneValidationProviders'});\n    let genderValidationProviders = await Storage.get({ key: 'genderValidationProviders'});\n    let locationValidationProviders = await Storage.get({ key: 'locationValidationProviders'});\n    let birthdateValidationProviders = await Storage.get({ key: 'birthdateValidationProviders'});\n    let birthplaceValidationProviders = await Storage.get({ key: 'birthplaceValidationProviders'});\n    let educationValidationProviders = await Storage.get({ key: 'educationValidationProviders'});\n    let occupationValidationProviders = await Storage.get({ key: 'occupationValidationProviders'});\n    let websiteValidationProviders = await Storage.get({ key: 'websiteValidationProviders'});\n    let wechatValidationProviders = await Storage.get({ key: 'wechatValidationProviders'});\n    let instagramValidationProviders = await Storage.get({ key: 'instagramValidationProviders'});\n    let facebookValidationProviders = await Storage.get({ key: 'facebookValidationProviders'});\n    let snapchatValidationProviders = await Storage.get({ key: 'snapchatValidationProviders'});\n    let twitterValidationProviders = await Storage.get({ key: 'twitterValidationProviders'});\n    let telegramValidationProviders = await Storage.get({ key: 'telegramValidationProviders'});\n    let twitchValidationProviders = await Storage.get({ key: 'twitchValidationProviders'});\n    let weiboValidationProviders = await Storage.get({ key: 'weiboValidationProviders'});\n    let paypalValidationProviders = await Storage.get({ key: 'paypalValidationProviders'});\n    let elaValidationProviders = await Storage.get({ key: 'elaValidationProviders'});\n\n    //Get the list of validation providers\n    const [sendGetValidationProvidersReq]= useProvider((validationProviders:any) => { \n      if(validationProviders) {\n        // dispatch(getNameValidationProviders(validationProviders))\n        return true\n      }\n      return false\n    })\n\n    if(requestIds && requestIds.value){\n      let parsedPendingRequests = JSON.parse(requestIds.value);\n      let remainingPendingRequests = JSON.parse(requestIds.value);\n\n      const [sendGetRequest] = useRequest(async (response:any) => {  \n        if (response != null && response.data != null){\n          if(response.data.status === \"Approved\" || response.data.status === \"Rejected\" || response.data.status === \"Canceled\"){\n\n            let provider = {'id': response.data.provider, 'name': ''};\n\n            switch(response.data.validationType){\n              case 'email': {\n                if(!emailValidationProviders || !emailValidationProviders.value){\n                  sendGetValidationProvidersReq('email', async (isComplete: boolean)=> {\n                    emailValidationProviders = await Storage.get({ key: 'emailValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'name': {\n                if(!nameValidationProviders || !nameValidationProviders.value){\n                  sendGetValidationProvidersReq('name', async (isComplete: boolean)=> {\n                    nameValidationProviders = await Storage.get({ key: 'nameValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'telephone': {\n                if(!telephoneValidationProviders || !telephoneValidationProviders.value){\n                  sendGetValidationProvidersReq('telephone', async (isComplete: boolean)=> {\n                    telephoneValidationProviders = await Storage.get({ key: 'telephoneValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'gender': {\n                if(!genderValidationProviders || !genderValidationProviders.value){\n                  sendGetValidationProvidersReq('gender', async (isComplete: boolean)=> {\n                    genderValidationProviders = await Storage.get({ key: 'genderValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'location': {\n                if(!locationValidationProviders || !locationValidationProviders.value){\n                  sendGetValidationProvidersReq('location', async (isComplete: boolean)=> {\n                    locationValidationProviders = await Storage.get({ key: 'locationValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'birthdate': {\n                if(!birthdateValidationProviders || !birthdateValidationProviders.value){\n                  sendGetValidationProvidersReq('birthdate', async (isComplete: boolean)=> {\n                    birthdateValidationProviders = await Storage.get({ key: 'birthdateValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'birthplace': {\n                if(!birthplaceValidationProviders || !birthplaceValidationProviders.value){\n                  sendGetValidationProvidersReq('birthplace', async (isComplete: boolean)=> {\n                    birthplaceValidationProviders = await Storage.get({ key: 'birthplaceValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'education': {\n                if(!educationValidationProviders || !educationValidationProviders.value){\n                  sendGetValidationProvidersReq('education', async (isComplete: boolean)=> {\n                    educationValidationProviders = await Storage.get({ key: 'educationValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'occupation': {\n                if(!occupationValidationProviders || !occupationValidationProviders.value){\n                  sendGetValidationProvidersReq('occupation', async (isComplete: boolean)=> {\n                    occupationValidationProviders = await Storage.get({ key: 'occupationValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'website': {\n                if(!websiteValidationProviders || !websiteValidationProviders.value){\n                  sendGetValidationProvidersReq('website', async (isComplete: boolean)=> {\n                    websiteValidationProviders = await Storage.get({ key: 'websiteValidationProviders'});                                      \n                  })\n                }\n              } break;              \n              case 'wechat': {\n                if(!wechatValidationProviders || !wechatValidationProviders.value){\n                  sendGetValidationProvidersReq('wechat', async (isComplete: boolean)=> {\n                    wechatValidationProviders = await Storage.get({ key: 'wechatValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'instagram': {\n                if(!instagramValidationProviders || !instagramValidationProviders.value){\n                  sendGetValidationProvidersReq('instagram', async (isComplete: boolean)=> {\n                    instagramValidationProviders = await Storage.get({ key: 'instagramValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'facebook': {\n                if(!facebookValidationProviders || !facebookValidationProviders.value){\n                  sendGetValidationProvidersReq('facebook', async (isComplete: boolean)=> {\n                    facebookValidationProviders = await Storage.get({ key: 'facebookValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'snapchat': {\n                if(!snapchatValidationProviders || !snapchatValidationProviders.value){\n                  sendGetValidationProvidersReq('snapchat', async (isComplete: boolean)=> {\n                    snapchatValidationProviders = await Storage.get({ key: 'snapchatValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'twitter': {\n                if(!twitterValidationProviders || !twitterValidationProviders.value){\n                  sendGetValidationProvidersReq('twitter', async (isComplete: boolean)=> {\n                    twitterValidationProviders = await Storage.get({ key: 'twitterValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'telegram': {\n                if(!telegramValidationProviders || !telegramValidationProviders.value){\n                  sendGetValidationProvidersReq('telegram', async (isComplete: boolean)=> {\n                    telegramValidationProviders = await Storage.get({ key: 'telegramValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'twitch': {\n                if(!twitchValidationProviders || !twitchValidationProviders.value){\n                  sendGetValidationProvidersReq('twitch', async (isComplete: boolean)=> {\n                    twitchValidationProviders = await Storage.get({ key: 'twitchValidationProviders'});                                      \n                  })\n                }\n              } break;              \n              case 'weibo': {\n                if(!weiboValidationProviders || !weiboValidationProviders.value){\n                  sendGetValidationProvidersReq('weibo', async (isComplete: boolean)=> {\n                    weiboValidationProviders = await Storage.get({ key: 'weiboValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'paypal': {\n                if(!paypalValidationProviders || !paypalValidationProviders.value){\n                  sendGetValidationProvidersReq('paypal', async (isComplete: boolean)=> {\n                    paypalValidationProviders = await Storage.get({ key: 'paypalValidationProviders'});                                      \n                  })\n                }\n              } break;\n              case 'ela': {\n                if(!elaValidationProviders || !elaValidationProviders.value){\n                  sendGetValidationProvidersReq('ela', async (isComplete: boolean)=> {\n                    elaValidationProviders = await Storage.get({ key: 'elaValidationProviders'});                                      \n                  })\n                }\n              } break;\n            }\n\n            let title = `${response.data.validationType.charAt(0).toUpperCase()}${response.data.validationType.slice(1)} Validation Request ${response.data.status}`\n            let message = \"\";\n            switch(response.data.status){\n              case 'Approved': \n                message = `Your ${response.data.validationType} validation from ${provider.name ?? provider.id} has been approved.`\n                break;              \n              case 'Rejected': \n                message = `Your ${response.data.validationType} validation from ${provider.name ?? provider.id} has been rejected. Please try sending another request or choose another validator.`\n                break;\n              case 'Canceled':\n                message = `Your ${response.data.validationType} validation from ${provider.name ?? provider.id} has been cancelled because the validator did not respond to your request in time. Please try sending another request or choose another validator.`\n                break;\n              default:\n                message = `Your ${response.data.validationType} validation request from ${provider.name ?? provider.id} has been ${response.data.status}.`                              \n            }\n\n            notify(response.data.id, title, message)\n\n            remainingPendingRequests = remainingPendingRequests.filter((value:any) => value !== response.data.id)  \n            await Storage.set({ key: 'pendingRequests', value: JSON.stringify(remainingPendingRequests) });                \n          }\n        }         \n      })          \n\n      for (let i = 0; i < parsedPendingRequests.length; i++) {\n        sendGetRequest({ confirmation_id: parsedPendingRequests[i] });\n      }\n    } else {\n        console.log(\"No pending requests to notify\")\n    }\n   }, intervalTime )\n\n}\n\nexport default App;","\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { authReducer } from \"./auth\";\nimport { txnReducer } from \"./requests\";\nimport { validationProviderReducer } from \"./providers\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  requests: txnReducer,\n  validationProviders: validationProviderReducer\n});\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\n// https://github.com/GradooC/chat/tree/33bb2d5a1d2c98875b9a2eb847bb5506bb8a0732/src/store","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\n\nimport store from \"./store\";\n\nReactDOM.render(\n  // tslint:disable-next-line: jsx-wrap-multiline\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t134,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t135,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t136,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t137,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t138,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t139,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t140,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t141,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t142,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t143,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t144,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t145,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t146,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t147,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t148,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t149,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t150,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t151,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t152,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t153,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t154,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t155,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t156,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t157,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t158,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t159,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t160,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t161,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t162,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t163,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t164,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t165,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t166,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t167,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t168,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t169,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t170,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t171,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t172,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t173,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t174,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t175,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t176,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 87;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}