{"version":3,"sources":["../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","hooks/useRequests.tsx","store/requests/types.ts","store/requests/actions.ts","store/requests/reducer.ts","hooks/useProvider.tsx","store/providers/types.ts","store/providers/actions.ts","store/providers/reducer.ts","hooks/useDID.tsx","store/auth/types.ts","store/auth/actions.ts","store/auth/reducer.ts","pages/Home.tsx","hooks/useEmailValidation.tsx","pages/ServiceInvoke.tsx","pages/Pleasewait.tsx","pages/RequestBlocks.tsx","pages/Requests.tsx","pages/Profile.tsx","hooks/useCredSaver.tsx","hooks/useCredSaved.tsx","hooks/useCancelRequest.tsx","pages/Details.tsx","pages/SplashScreen.tsx","pages/OnBoarding.tsx","pages/SignIn.tsx","pages/Support.tsx","hooks/useRequest.tsx","App.tsx","store/index.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","useRequests","optionalCallback","noop","allRequests","userinfo","a","url","fetch","method","mode","cache","credentials","headers","process","redirect","referrerPolicy","response","json","did","split","pop","getData","meta","data","emailValidationSuccess","txn","type","payload","setSelectedTabRequests","showNotification","text","getAllRequests","callback","dispatch","getAllRequestsSuccess","credSavedSuccess","requestCancelledSuccess","initialState","selected_tab_txn","selected_tab_name","pending_txn","approved_txn","rejected_txn","expired_txn","cancelled_txn","notification","show","message","useProvider","providers","validationType","Storage","Plugins","getEmailValidationProviders","emailValidationProviders","set","key","value","JSON","stringify","getEmailValidationProvidersSuccess","phoneValidationProviders","nameValidationProviders","useDID","signIn","claims","appManager","sendIntent","result","presentation","didManager","VerifiablePresentationBuilder","fromJson","getCredentials","login","user","loginSuccess","logoutSuccess","authCheckStatus","callback2","get","parse","getBase64Image","obj","React","memo","history","useState","showAlertNameValidation","setShowAlertNameValidation","showAlertEmailValidation","setShowAlertEmailValidation","showAlertPhoneValidation","setShowAlertPhoneValidation","useDispatch","useSelector","state","auth","all_requests","requests","pending_requests","validationProviders","sendGetAllRequestsReq","useEffect","sendGetEmailValidationProvidersReq","length","credSubjects","cred","credentialSubject","assign","className","src","color","position","isOpen","slot","onIonRefresh","event","setTimeout","detail","complete","pullFactor","pullMin","pullMax","pullingText","refreshingSpinner","refreshingText","size","style","padding","alt","avatar","paddingLeft","name","onClick","preventDefault","email","push","routerLink","class","datetime","created","moment","utc","fromNow","shape","status","onDidDismiss","cssClass","header","buttons","handler","clear","logout","role","blah","ServiceInvokePage","goTo","useCallback","path","direction","myIconListener","menuIcon","useIonViewWillEnter","titleBarManager","setIcon","iconPath","addOnItemClickedListener","useIonViewWillLeave","removeOnItemClickedListener","emailValidationRequest","body","providerId","postData","duplicate","validationtx","useEmailValidation","param","requestParams","validator","provider","sendMessage","console","log","err","emailValidation","sendEmailValidationRequest","providerid","emailValidationProvider","data-providerid","currentTarget","getAttribute","handleValidationProviderClick","logo","values","stats","reduce","b","Approved","Rejected","previous","PleaseWaitPage","RequestBlocks","props","requests_txn","margin","scrollable","onIonChange","tab_event","handleClick","disabled","marginLeft","rows","cols","readonly","elementId","copyText","document","querySelector","getElementsByTagName","select","execCommand","telephone","DetailsPage","useParams","requestDetails","filter","formatTime","format","credSave","verifiedCredential","useCredSaver","confirmation_id","sendCredSaved","sendCredSaveIntent","credSaved","useCredSaved","requestCancelled","useCancelRequest","requestIds","remainingPendingRequests","sendCancelRequest","height","width","display","verticalAlign","charAt","toUpperCase","slice","issuanceDate","expirationDate","borderRadius","issuer","fill","handleCancelRequestClick","handleSaveCredClick","isSavedOnProfile","SplashScreenPage","onDeviceReady","hasOnboarded","addEventListener","removeEventListener","fullscreen","OnBoardingPage","showTutorial","setShowTutorial","marginTop","SignInPage","useRequest","request","getStartupMode","startupInfo","startupMode","initServiceListener","setVisible","setTitle","setBackgroundColor","setForegroundMode","setListener","rpcMessage","parsedPendingRequests","checkPendingRequests","intervalTime","parseInt","setInterval","title","notificationManager","sendNotification","sendGetRequest","i","App","component","SplashScreen","exact","OnBoarding","SignIn","render","to","Home","ServiceInvoke","PleaseWait","Details","tab","href","img-src","rootReducer","combineReducers","action","all_txn","sort","Date","date","getTime","t","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","store","getElementById"],"mappings":"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","file":"static/js/main.4c0476ac.chunk.js","sourcesContent":["var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t180,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 106;\nmodule.exports = webpackAsyncContext;","export function useRequests(optionalCallback: any = noop) {\n\n  const allRequests = (userinfo: any) => {\n    /**\n     * Request to get all the requests for this user to the backend API.\n     */\n\n      async function getData(url = '') {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      if(userinfo){\n        const did = userinfo.id.split(':').pop();\n        getData(`${process.env.REACT_APP_GET_ALL_VALIDATION_REQUESTS}` + did)\n        .then(response => {\n          if(response.meta.code === 200){\n            optionalCallback(response.data);          \n          }\n        });\n      }\n\n  }\n  return [allRequests] as [(obj: any) => void]\n}\n\nfunction noop() {}","export const EMAIL_VALIDATION_REQUEST = \"EMAIL_VALIDATION_REQUEST\";\nexport const EMAIL_VALIDATION_REQUEST_SUCCESS = \"EMAIL_VALIDATION_REQUEST_SUCCESS\";\n\nexport const GET_ALL_REQUESTS = \"GET_ALL_REQUESTS\";\nexport const GET_ALL_REQUESTS_SUCCESS = \"GET_ALL_REQUESTS_SUCCESS\";\n\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";\n\nexport const SET_SELECTED_TAB_REQUESTS = \"SET_SELECTED_TAB_REQUESTS\";\n\nexport const CRED_SAVED = \"CRED_SAVED\";\nexport const CRED_SAVED_SUCCESS = \"CRED_SAVED_SUCCESS\";\n\nexport const REQUEST_CANCELLED = \"REQUEST_CANCELLED\";\nexport const REQUEST_CANCELLED_SUCCESS = \"REQUEST_CANCELLED_SUCCESS\";\n\n\n\nexport interface TxnState {\n  txn: any;\n  selected_tab_txn: any;\n  selected_tab_name: any;\n  pending_txn: any;\n  approved_txn: any;\n  rejected_txn: any;\n  expired_txn: any;\n  cancelled_txn: any;\n  notification: any;\n}\n\ninterface EmailValidationRequestAction {\n    type: typeof EMAIL_VALIDATION_REQUEST;\n    payload?: any\n}\n\ninterface EmailValidationRequestSuccessAction {\n    type: typeof EMAIL_VALIDATION_REQUEST_SUCCESS;\n    payload?: any\n}  \n\ninterface GetAllRequestsAction {\n    type: typeof GET_ALL_REQUESTS;\n    payload?: any\n}  \n\ninterface GetAllRequestsSuccessAction {\n    type: typeof GET_ALL_REQUESTS_SUCCESS;\n    payload?: any\n}  \n\ninterface SetSelectedTabRequestsAction {\n    type: typeof SET_SELECTED_TAB_REQUESTS;\n    payload?: any\n}  \n\ninterface ShowNotificationAction {\n    type: typeof SHOW_NOTIFICATION;\n    payload?: any\n}\n\ninterface HideNotificationAction {\n    type: typeof HIDE_NOTIFICATION;\n    payload?: any    \n}\n\ninterface CredSavedAction {\n    type: typeof CRED_SAVED;\n    payload?: any\n}\n\ninterface CredSavedSuccessAction {\n    type: typeof CRED_SAVED_SUCCESS;\n    payload?: any\n}  \n\ninterface RequestCancelledAction {\n    type: typeof REQUEST_CANCELLED;\n    payload?: any\n}\n\ninterface RequestCancelledSuccessAction {\n    type: typeof REQUEST_CANCELLED_SUCCESS;\n    payload?: any\n}  \n\nexport type TxnActionTypes =\n    | EmailValidationRequestAction\n    | EmailValidationRequestSuccessAction\n    | GetAllRequestsAction\n    | GetAllRequestsSuccessAction\n    | SetSelectedTabRequestsAction\n    | ShowNotificationAction\n    | HideNotificationAction\n    | CredSavedAction\n    | CredSavedSuccessAction\n    | RequestCancelledAction\n    | RequestCancelledSuccessAction","import {\n    TxnActionTypes,\n    EMAIL_VALIDATION_REQUEST_SUCCESS,\n    GET_ALL_REQUESTS_SUCCESS,\n    SET_SELECTED_TAB_REQUESTS,\n    CRED_SAVED_SUCCESS,\n    REQUEST_CANCELLED_SUCCESS\n} from \"./types\";\n  \nimport { ThunkAction } from \"redux-thunk\";\nimport { AppState } from \"../\";\nimport { Storage } from \"@capacitor/core\";\n\n export const emailValidation = (txn: any, callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    TxnActionTypes\n> => dispatch => {\n    (async function(){\n        dispatch(emailValidationSuccess(txn));\n        callback();\n    })()\n};\n  \nexport const emailValidationSuccess = (txn: any): TxnActionTypes => ({\n    type: EMAIL_VALIDATION_REQUEST_SUCCESS,\n    payload: txn\n});\n\nexport const setSelectedTabRequests = (txn: any): TxnActionTypes => ({\n    type: SET_SELECTED_TAB_REQUESTS,\n    payload: txn\n});\n\nexport const showNotification = (text: any): TxnActionTypes => ({\n    type: 'SHOW_NOTIFICATION', \n    payload: text\n})\n\nexport const hideNotification = (): TxnActionTypes => ({\n    type: 'HIDE_NOTIFICATION'\n})\n\nexport const getAllRequests = (txn: any, callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    TxnActionTypes\n> => dispatch => {\n    (async function(){\n        dispatch(getAllRequestsSuccess(txn));\n        callback();\n    })()\n};\n\nexport const getAllRequestsSuccess = (txn: any): TxnActionTypes => ({\n    type: GET_ALL_REQUESTS_SUCCESS,\n    payload: txn\n});\n\nexport const credSaved = (credentials: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(credSavedSuccess(credentials));\n    callback();\n})()\n};\n\nexport const credSavedSuccess = (txn: any): TxnActionTypes => ({\n    type: CRED_SAVED_SUCCESS,\n    payload: txn\n});\n\nexport const requestCancelled = (txn: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nTxnActionTypes\n> => dispatch => {\n(async function(){\n    dispatch(requestCancelledSuccess(txn));\n\n    const requestIds = await Storage.get({ key: 'pendingRequests' });\n    if(requestIds && requestIds.value){\n      let remainingPendingRequests = JSON.parse(requestIds.value);\n\n      remainingPendingRequests = remainingPendingRequests.filter((value:any) => value !== txn.data.id)\n      await Storage.set({ key: 'pendingRequests', value: JSON.stringify(remainingPendingRequests) });                      \n    } \n\n    callback();\n})()\n};\n\nexport const requestCancelledSuccess = (txn: any): TxnActionTypes => ({\n    type: REQUEST_CANCELLED_SUCCESS,\n    payload: txn\n});\n\nfunction noop() {}","import {\n  TxnState,\n  TxnActionTypes,\n  EMAIL_VALIDATION_REQUEST_SUCCESS,\n  GET_ALL_REQUESTS_SUCCESS,\n  SHOW_NOTIFICATION,\n  HIDE_NOTIFICATION,\n  SET_SELECTED_TAB_REQUESTS,\n  CRED_SAVED_SUCCESS,\n  REQUEST_CANCELLED_SUCCESS\n} from \"./types\";\n\nconst initialState: TxnState = {\n  txn: null,\n  selected_tab_txn: null,\n  selected_tab_name: null,\n  pending_txn: null,\n  approved_txn: null,\n  rejected_txn: null,\n  expired_txn: null,\n  cancelled_txn: null,\n  notification: {\n    show: false,\n    message: '',\n    type: ''\n  }\n};\n\nexport const txnReducer = (\n  state = initialState,\n  action: TxnActionTypes\n): TxnState => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case EMAIL_VALIDATION_REQUEST_SUCCESS:\n      {\n        state.txn = null ?? []\n        state.pending_txn = null ?? []\n\n        return { ...state, \n          txn: [...state.txn, payload], \n          pending_txn: [...state.pending_txn, payload]\n        };\n      }\n      case SET_SELECTED_TAB_REQUESTS:\n        {\n          return { ...state, \n            selected_tab_txn: payload.data,\n            selected_tab_name: payload.name\n          };\n        }            \n    case GET_ALL_REQUESTS_SUCCESS:\n      {\n        let pending_txn = payload.filter((txn:any) => (txn.status === \"New\" || txn.status === \"In progress\" || txn.status === \"Cancelation in progress\"));\n        let approved_txn = payload.filter((txn:any) => txn.status === \"Approved\");\n        let rejected_txn = payload.filter((txn:any) => txn.status === \"Rejected\");\n        let expired_txn = payload.filter((txn:any) => txn.status === \"Expired\");\n        // let cancelled_txn = payload.filter((txn:any) => txn.status === \"Canceled\");\n\n        let all_txn = payload.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });\n\n\n        pending_txn = pending_txn.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });\n\n\n        approved_txn = approved_txn.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });\n\n\n        rejected_txn = rejected_txn.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });\n        \n        expired_txn = expired_txn.sort((a:any, b:any) => {\n          let c:any = new Date(a.date).getTime();\n          let d:any = new Date(b.date).getTime();\n          return c > d ? 1 : -1;\n        });        \n\n        // cancelled_txn = cancelled_txn.sort((a:any, b:any) => {\n        //   let c:any = new Date(a.date).getTime();\n        //   let d:any = new Date(b.date).getTime();\n        //   return c > d ? 1 : -1;\n        // });        \n\n        return { \n          ...state, \n          txn: all_txn,\n          selected_tab_txn: all_txn, \n          selected_tab_name: 'all',\n          pending_txn: pending_txn, \n          approved_txn: approved_txn,\n          rejected_txn: rejected_txn,\n          expired_txn: expired_txn,\n          // cancelled_txn: cancelled_txn,\n        };\n      }\n    case SHOW_NOTIFICATION:\n      {\n        return {...state,           \n          notification: {\n            show: true,\n            message: payload.message,\n            type: payload.type\n          }}\n      }\n    case HIDE_NOTIFICATION:\n      {\n        return {...state, \n          notification: {\n            show: false,\n            message: '', \n            type: ''\n          }        \n        \n        }\n      }\n      case CRED_SAVED_SUCCESS:\n        {\n          return { ...state, \n            txn: state.txn.map(\n              (t:any) => t.id === payload.data.id ? payload.data : t\n            ),\n            notification: {\n              show: true,\n              message: payload.message,\n              type: 'success'\n            }\n          };\n        }\n      case REQUEST_CANCELLED_SUCCESS:\n        {  \n          return { ...state, \n            txn: state.txn.map(\n              (t:any) => t.id === payload.data.id ? payload.data : t\n            ),\n            pending_txn: state.pending_txn.filter(\n              (t:any) => t.id !== payload.data.id\n            ),\n            notification: {\n              show: true,\n              message: payload.message,\n              type: 'success'\n            }\n          };\n        }        \n        \n\n    default:\n      return state;\n  }\n};","export function useProvider(optionalCallback: any = noop) {\n\n  const providers = (validationType: any) => {\n    /**\n     * Request to get all providers for a validation type e.g. email\n     */\n\n      async function getData(url = '') {\n\n        const response = await fetch(url + validationType, {\n          method: 'GET',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer'\n        });\n\n        return response.json();\n      }\n\n      if(validationType === 'email' || validationType === 'phone' || validationType === 'name'){\n        getData(`${process.env.REACT_APP_GET_PROVIDERS_BY_VALIDATION_TYPE}`)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback(response.data);          \n          }\n\n        });\n      }\n\n  }\n  return [providers] as [(obj:any) => void]\n}\n\nfunction noop() {}","export const GET_EMAIL_VALIDATION_PROVIDERS = \"GET_EMAIL_VALIDATION_PROVIDERS\";\nexport const GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS = \"GET_EMAIL_VALIDATION_PROVIDERSSUCCESS\";\n\nexport interface ValidationProviderState {\n  emailValidationProviders: any;\n  phoneValidationProviders: any;\n  nameValidationProviders: any;\n}\n\ninterface GetEmailValidationProvidersAction {\n  type: typeof GET_EMAIL_VALIDATION_PROVIDERS;\n  payload?: any\n}  \n\ninterface GetEmailValidationProvidersSuccessAction {\n  type: typeof GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS;\n  payload?: any\n}  \n\nexport type ValidationProviderActionTypes =\n  | GetEmailValidationProvidersAction\n  | GetEmailValidationProvidersSuccessAction","import { Plugins } from '@capacitor/core';\n\nimport {\n    ValidationProviderActionTypes,\n    GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS\n} from \"./types\";\n  \nimport { ThunkAction } from \"redux-thunk\";\nimport { AppState } from \"../\";\n\nconst { Storage } = Plugins;\n\nexport const getEmailValidationProviders = (emailValidationProviders: any, callback: any = noop): ThunkAction<\nvoid,\nAppState,\nnull,\nValidationProviderActionTypes\n> => dispatch => {\n(async function(){\n    await Storage.set({ key: 'emailValidationProviders', value: JSON.stringify(emailValidationProviders)})\n    dispatch(getEmailValidationProvidersSuccess(emailValidationProviders));\n    callback();\n})()\n};\n\nexport const getEmailValidationProvidersSuccess = (emailValidationProviders: any): ValidationProviderActionTypes => ({\ntype: GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS,\npayload: emailValidationProviders\n});\n\nfunction noop() {}","import {\n  ValidationProviderState,\n  ValidationProviderActionTypes,\n  GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS\n} from \"./types\";\n\nconst initialState: ValidationProviderState = {\n  emailValidationProviders: null,\n  phoneValidationProviders: null,\n  nameValidationProviders: null\n};\n\nexport const validationProviderReducer = (\n  state = initialState,\n  action: ValidationProviderActionTypes\n): ValidationProviderState => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case GET_EMAIL_VALIDATION_PROVIDERS_SUCCESS:\n      return { ...state, emailValidationProviders: payload };\n    default:\n      return state;\n  }\n};","declare let appManager: AppManagerPlugin.AppManager;\ndeclare let didManager: DIDPlugin.DIDManager;\n\nexport function useDID(optionalCallback: any = noop) {\n  const signIn = (claims: any) => {\n    /**\n     * Request some credentials to the DID application.\n     */\n    appManager.sendIntent(\"credaccess\", { claims }, {}, (response: any) => {\n\n      if (response && response.result && response.result.presentation) {\n\n        // Create a real presentation object from json data\n        didManager.VerifiablePresentationBuilder.fromJson(JSON.stringify(response.result.presentation), (presentation)=>{\n          const credentials = presentation.getCredentials();\n          optionalCallback(credentials)\n        });\n      }\n    })\n  }\n  return [signIn] as [(obj: any) => void]\n}\n\nfunction noop() {}","export const LOGIN = \"LOGIN\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n\nexport interface AuthState {\n  user: any;\n}\n\ninterface LoginAction {\n  type: typeof LOGIN;\n  payload?: any\n}\n\ninterface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload?: any\n}\n\ninterface LogoutAction {\n  type: typeof LOGOUT;\n  payload?: any\n}\n\ninterface LogoutSuccessAction {\n  type: typeof LOGOUT_SUCCESS;\n  payload?: any\n}\n\nexport type AuthActionTypes =\n  | LoginAction\n  | LoginSuccessAction\n  | LogoutAction\n  | LogoutSuccessAction","import { Plugins } from '@capacitor/core';\n\nimport {\n    AuthActionTypes,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS\n} from \"./types\";\n  \nimport { ThunkAction } from \"redux-thunk\";\nimport { AppState } from \"../\";\n\nconst { Storage } = Plugins;\n\n export const login = (user: any, callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    AuthActionTypes\n> => dispatch => {\n    (async function(){\n        await Storage.set({ key: 'user', value: JSON.stringify(user)})\n        dispatch(loginSuccess(user));\n        callback();\n    })()\n};\n  \nexport const loginSuccess = (user: any): AuthActionTypes => ({\n    type: LOGIN_SUCCESS,\n    payload: user\n});\n\nexport const logout = (callback: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    AuthActionTypes\n> => dispatch => {\n    (async function(){\n        await Storage.clear()\n        dispatch(logoutSuccess());\n        callback()\n    })()\n};\n\nexport const logoutSuccess = (): AuthActionTypes => ({\n    type: LOGOUT_SUCCESS\n});\n\nexport const authCheckStatus = (callback: any = noop, callback2: any = noop): ThunkAction<\n    void,\n    AppState,\n    null,\n    AuthActionTypes\n  > => dispatch => {\n    (async function(){\n        const user = await Storage.get({ key: 'user' })\n\n        if (user && user.value) {\n            dispatch(loginSuccess(JSON.parse(user.value)));\n            callback()\n          } else {\n              callback2()\n          }\n    })()\n  };\n  \nexport type AuthCheckStatusType = typeof authCheckStatus;\n\nfunction noop() {}","import {\n  AuthState,\n  AuthActionTypes,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS\n} from \"./types\";\n\nconst initialState: AuthState = {\n  user: null,\n};\n\nconst getBase64Image = (obj:any) => {\n  return `data:${obj[\"content-type\"]};${obj[\"type\"]},${obj[\"data\"]}`\n}\n\nexport const authReducer = (\n  state = initialState,\n  action: AuthActionTypes\n): AuthState => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS: {\n      if (payload.avatar)\n      {\n        payload.avatar = getBase64Image(payload.avatar)\n      }        \n      return { ...state, user: payload };\n    }\n    case LOGOUT_SUCCESS:\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n};","import {\n  IonCard,\n  IonCardContent,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonImg,\n  IonRow, IonCol,\n  IonListHeader,\n  IonLabel,\n  IonButton,\n  IonGrid,\n  IonItem,\n  IonThumbnail,\n  IonToast,\n  IonAlert,\n  IonRefresher,\n  IonRefresherContent\n} from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment'\n\nimport './Home.css';\n\nimport { RefresherEventDetail } from '@ionic/core';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../store'\n\nimport { useRequests } from '../hooks/useRequests'\nimport { getAllRequests } from '../store/requests'\nimport { useProvider } from '../hooks/useProvider'\nimport { getEmailValidationProviders } from '../store/providers'\n\nimport { useDID } from '../hooks/useDID';\nimport { login, logout } from '../store/auth';\n\nconst HomePage: React.FC = ({ history }: any) => {\n\n    const [showAlertNameValidation, setShowAlertNameValidation] = useState(false);\n    const [showAlertEmailValidation, setShowAlertEmailValidation] = useState(false);\n    const [showAlertPhoneValidation, setShowAlertPhoneValidation] = useState(false);\n\n    const dispatch = useDispatch()\n  \n    const user = useSelector((state:AppState) => state.auth.user)  \n    const all_requests = useSelector((state:AppState) => state.requests.txn)\n    const pending_requests = useSelector((state:AppState) => state.requests.pending_txn)\n    const notification = useSelector((state:AppState) => state.requests.notification)\n    const validationProviders = useSelector((state:AppState) => state.validationProviders)\n\n    const doRefresh = (event: CustomEvent<RefresherEventDetail>) => {\n      sendGetAllRequestsReq(user)\n\n      setTimeout(() => {\n        event.detail.complete();\n      }, 2000);\n    }\n\n    const [sendGetAllRequestsReq] = useRequests((txn:any) => { \n      if(txn) {\n        dispatch(getAllRequests(txn, () => '/home'))\n      }  \n     })   \n\n     useEffect(() => {\n      if(!all_requests){\n        sendGetAllRequestsReq(user)\n      } \n\n      if(!validationProviders.emailValidationProviders){\n        sendGetEmailValidationProvidersReq('email')\n      }\n     },\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n     []\n   );\n\n    //Get the list of email validation providers\n    const [sendGetEmailValidationProvidersReq] = useProvider((emailValidationProviders:any) => { \n      if(emailValidationProviders) {\n        dispatch(getEmailValidationProviders(emailValidationProviders))\n      }  \n    })   \n  \n    const [signIn] = useDID((credentials:any) => {\n      if(credentials.length) {\n        const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n        const user = Object.assign({}, ...credSubjects)\n        dispatch(login(user, () => '/home'))\n      }\n    })\n\n    const relativeTime = function(datetime:any) {\n      if (!datetime) return \"\";\n  \n      return moment.utc(datetime).fromNow()\n    }\n\n    return (\n      <IonPage>\n        <IonHeader className=\"main-header\">\n          <IonToolbar>\n            <IonImg className=\"Navbar-Logo\" src=\"../assets/images/components/empty.png\"></IonImg>\n          </IonToolbar>\n          <IonToast color={notification.type} position=\"bottom\" isOpen={notification.show} message={notification.message} />\n        </IonHeader>\n        <IonContent>\n\n        <IonRefresher className=\"refresher\" slot=\"fixed\" onIonRefresh={doRefresh} pullFactor={0.5} pullMin={100} pullMax={200}>\n            <IonRefresherContent\n            pullingText=\"Pull to refresh\"\n            refreshingSpinner=\"circles\"\n            refreshingText=\"Refreshing Requests Status...\">\n            </IonRefresherContent>\n        </IonRefresher>\n\n        <IonToolbar className=\"sub-header\">\n            <IonTitle className=\"ion-text-start Iontitle-Big\">\n              <IonRow>\n                <IonCol size=\"2\" style={{padding: '0'}}>\n                  <img className=\"avatar-home\" alt=\"\"\n                      src={`${user && user.avatar ? user.avatar : \"../assets/images/components/default-avatar.png\" }`\n                      } />\n                </IonCol>\n                <IonCol size=\"10\" style={{padding: '0', paddingLeft: '5px'}}>\n                  Welcome, <br /> <strong> {user && user.name}</strong>\n                </IonCol>\n              </IonRow>\n            </IonTitle>\n          </IonToolbar>\n          <IonGrid className=\"pad-me--top \">\n            <IonRow className=\"main-Services\">\n              <IonCol size=\"12\">\n                <IonListHeader>\n                  <IonLabel className=\"List-Header\">Available Services</IonLabel>\n                </IonListHeader>\n              </IonCol>\n              <IonCol size=\"6\">\n                {/* <IonCard routerLink={user && user.email ? '/home/service-invoke' : ''}> */}\n                <IonCard onClick={e => {\n                          e.preventDefault();\n                          if(user && user.email){\n                            history.push('/home/service-invoke');\n                          } else { \n                            //show alert\n                            setShowAlertEmailValidation(true);\n                          }\n                        }}>\n                  <IonCardContent>\n                    <IonRow>\n                      <IonCol>\n                        <IonImg src=\"../assets/images/components/icon-email.svg\"></IonImg>\n                      </IonCol>\n                      <IonCol>\n                        Email <br />  Validation \n                      </IonCol>\n                    </IonRow>\n\n                  </IonCardContent >\n                </IonCard>\n              </IonCol>\n                <IonCol size=\"6\">\n                {/* <IonCard routerLink={user && user.telephone ? '/home/service-invoke' : ''}>                 */}\n                <IonCard onClick={() => setShowAlertPhoneValidation(true)}>\n                  <IonCardContent>\n                    <IonRow>\n                      <IonCol>\n                        {/* <IonImg src={user && user.telephone ? \"../assets/images/components/icon-phone.svg\" : \"../assets/images/components/icon-phone--disabled.svg\"}></IonImg>                         */}\n                        <IonImg src=\"../assets/images/components/icon-phone.svg\"></IonImg>\n                      </IonCol>\n                      <IonCol>\n                        Phone <br />  Validation\n                      </IonCol>\n                    </IonRow>\n                  </IonCardContent>\n                </IonCard></IonCol><IonCol size=\"6\">\n                {/* <IonCard routerLink={user && user.telephone ? '/home/service-invoke' : ''}>                 */}\n                <IonCard onClick={() => setShowAlertNameValidation(true)}>\n                  <IonCardContent>\n                    <IonRow>\n                      <IonCol>\n                        {/* <IonImg src={user && user.name ? \"../assets/images/components/icon-name.svg\" : \"../assets/images/components/icon-name--disabled.svg\"}></IonImg> */}\n                        <IonImg src=\"../assets/images/components/icon-name.svg\"></IonImg>\n                      </IonCol>\n                      <IonCol>\n                        Name <br />  Validation\n                      </IonCol>\n                    </IonRow>\n                  </IonCardContent>\n                </IonCard></IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol size=\"12\">\n                {/*-- List Header with Button --*/}<br></br>\n                <IonListHeader>\n                  <IonLabel className=\"List-Header\">Active Requests</IonLabel>\n                  <IonButton size=\"small\" color=\"dark\" routerLink='/requests'>See All</IonButton>\n                </IonListHeader>\n              </IonCol>\n              <IonCol class=\"RequestBlock\">\n                {/* Items Active */}\n                {pending_requests && pending_requests.map((txn: any) => \n                  <IonItem className=\"request-Item\" routerLink={`/requests/details/${txn.id}`} key={txn.id} >\n                  <IonThumbnail slot=\"start\">\n                    <img src=\"../assets/images/components/icon-email--request.svg\" alt=\"\" />\n                  </IonThumbnail>\n                  <IonLabel>\n                    <h2>Email Validation</h2>\n                    <p>{relativeTime(txn.created)}</p>\n                  </IonLabel>\n                  <IonButton shape=\"round\" className=\"status\" color={`${(txn.status === \"New\" || txn.status === 'Cancelation in progress') ? \"light\" : \"\"}${txn.status === \"In progress\" ? \"primary\" : \"\"}`} \n                    slot=\"end\">\n                      {`\n                        ${txn.status === \"New\" ? \"New\" : \"\"}\n                        ${txn.status === \"In progress\" ? \"In Progress\" : \"\"}\n                        ${txn.status === \"Cancelation in progress\" ? \"Cancelling\" : \"\"}\n                      `}                      \n                      </IonButton>                  \n                </IonItem>\n\n                )}\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonContent>\n\n        <IonAlert\n          isOpen={showAlertEmailValidation}\n          onDidDismiss={() => setShowAlertEmailValidation(false)}\n          cssClass='service-popup-alert no-image'\n          header={'Could not read the Email'}\n          message={'In order to proceed with Email validation, Please set the visibility of your email address to Public.'}\n          buttons={[\n            {\n              text: 'Re-sign In',\n              cssClass: 'btn-resignin btn-center',\n              handler: () => {\n                // 'Sign him out and take him to sign in screen'\n                dispatch(logout(() => signIn({ name: false, email: true, avatar: false })))                \n              }\n            },\n            {\n              text: 'OK',\n              role: 'cancel',\n              cssClass: 'btn-center',\n              handler: blah => {\n                // console.log('OK');\n              }\n            }            \n          ]}\n        />        \n\n        <IonAlert\n          isOpen={showAlertPhoneValidation}\n          onDidDismiss={() => setShowAlertPhoneValidation(false)}\n          cssClass='service-popup-alert custom-info'\n          header={'Service Unavailable'}\n          message={'There are currently no validators available to validate phone numbers.'}\n          buttons={['OK']}\n        />\n\n        <IonAlert\n          isOpen={showAlertNameValidation}\n          onDidDismiss={() => setShowAlertNameValidation(false)}\n          cssClass='service-popup-alert custom-info'\n          header={'Service Unavailable'}\n          message={'There are currently no validators available to validate name.'}\n          buttons={['OK']}\n        />        \n\n      </IonPage>\n    );\n  }\n\nexport default React.memo(HomePage);\n","export function useEmailValidation(optionalCallback: any = noop) {\n\n  const emailValidationRequest = (data: any) => {\n    /**\n     * Request email validation to the backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      // const did = data.user.id.split(':').pop();      \n      const txn = {\n        \"did\": data.user.id,        \n        \"validationType\": \"email\",\n        \"provider\": data.providerId,\n        \"requestParams\": {\n          \"email\": data.user.email\n        }\n      }\n\n      postData(`${process.env.REACT_APP_SUBMIT_VALIDATION_REQUEST}`, txn)\n        .then(response => {\n          if(response.meta.code === 200) {\n            if(response.data.duplicate === false){\n              optionalCallback({\"data\": response.data.validationtx, \"message\": \"Request submitted successfully. Please check your email for the next step\"});          \n            } else {\n              optionalCallback({\"data\": null, \"message\": \"Previous request already in progress.\"});          \n            }\n          }\n        });\n  }\n  return [emailValidationRequest] as [(obj: any) => void]\n}\n\nfunction noop() {}","import React, { useCallback } from 'react';\n\n\nimport { IonContent ,IonListHeader, IonPage, IonTitle, IonGrid, IonRow, IonCol, IonLabel, IonToolbar, useIonViewWillEnter, useIonViewWillLeave, IonRefresher, IonRefresherContent } from '@ionic/react';\nimport './ServiceInvoke.css';\n\nimport { useEmailValidation } from '../hooks/useEmailValidation'\nimport { emailValidation, showNotification, hideNotification } from '../store/requests'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../store'\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\n\nimport { getEmailValidationProviders } from '../store/providers';\nimport { useProvider } from '../hooks/useProvider';\n\nimport { RefresherEventDetail } from '@ionic/core';\n\ndeclare let appManager: AppManagerPlugin.AppManager;\ndeclare let titleBarManager: TitleBarPlugin.TitleBarManager;\n\nconst ServiceInvokePage: React.FC = ({ history }: any) => {\n\n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n    },\n    [history],\n  );\n\n  let myIconListener = (menuIcon:any) => {\n    if (menuIcon.key === \"back\") {\n        goTo('/home')\n    }\n  };\n\n  useIonViewWillEnter(() => {    \n      titleBarManager.setIcon(1, {\n        key: \"back\",\n        iconPath: \"back\"\n      });\n\n      titleBarManager.addOnItemClickedListener(myIconListener);\n      sendGetEmailValidationProvidersReq('email')      \n  });\n\n  useIonViewWillLeave(() => {\n    titleBarManager.removeOnItemClickedListener(myIconListener);    \n    titleBarManager.setIcon(1, {\n      key: '',\n      iconPath: ''\n    });\n  })\n\n  const dispatch = useDispatch()\n\n  const validationProviders = useSelector((state:AppState) => state.validationProviders)\n\n  //Get the list of email validation providers\n  const [sendGetEmailValidationProvidersReq] = useProvider((emailValidationProviders:any) => { \n    if(emailValidationProviders) {\n      dispatch(getEmailValidationProviders(emailValidationProviders))\n    }  \n  })  \n\n  const [sendEmailValidationRequest] = useEmailValidation((txn:any) => { \n    if(txn.data) {\n\n      // let validationProvider:any = validationProviders.emailValidationProviders.filter((provider:any) => provider.id === txn.data.provider);\n\n      let payload = {\n          method: \"new\",\n          param: {\n            id: txn.data.id,\n            type: 'email',\n            value: txn.data.requestParams.email,\n            validator: txn.data.provider //validationProvider.length > 0 ? validationProvider[0].name : txn.data.provider\n          }\n      }\n\n      // AppManagerPlugin.MessageType.INTERNAL = 1\n      // Cannot access ambient const enums when the '--isolatedModules' flag is provided.ts(2748)\n      // Using the real value of the constant due to above limitation\n\n      appManager.sendMessage(\"#service:backgroundservice\", 1, JSON.stringify(payload), ()=>{\n          // Nothing to do\n          console.log(\"stored a request to be checked by background service\")\n      }, (err:any)=>{\n          console.log(\"Failed to send RPC message to the background service\", err);\n      });\n\n\n      dispatch(emailValidation(txn.data, () => goTo('/home')))\n      dispatch(showNotification({\"message\": txn.message, \"type\": \"success\", \"show\": true}))\n      setTimeout(() => {\n        dispatch(hideNotification())\n      }, 5000)      \n    } \n    else {\n      history.push('/home');\n      dispatch(showNotification({\"message\": txn.message, \"type\": \"warning\", \"show\": true}))\n      setTimeout(() => {\n        dispatch(hideNotification())\n      }, 5000) \n    }\n   })\n\n   let providerid = \"\"\n\n  const handleValidationProviderClick = (e: any) => {\n    providerid = e.currentTarget.getAttribute('data-providerid');\n    signIn({ name: false, email: true, avatar: false })\n  }\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => sendEmailValidationRequest({ user: user, providerId: providerid })))    \n    }\n   })\n\n   const doRefresh = (event: CustomEvent<RefresherEventDetail>) => {\n    sendGetEmailValidationProvidersReq('email')\n    setTimeout(() => {\n      event.detail.complete();\n    }, 2000);\n  }\n\n  return (\n    <IonPage>\n      <IonContent>\n\n      <IonRefresher className=\"refresher\" slot=\"fixed\" onIonRefresh={doRefresh} pullFactor={0.5} pullMin={100} pullMax={200}>\n            <IonRefresherContent\n            pullingText=\"Pull to refresh\"\n            refreshingSpinner=\"circles\"\n            refreshingText=\"Refreshing Requests Status...\">\n            </IonRefresherContent>\n        </IonRefresher>\n\n      <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Email Verification</IonTitle>\n        </IonToolbar>\n      <IonGrid className=\"pad-me--top thick-padding\">\n        <IonRow>\n        <IonCol className=\"Providers-List Profile\">\n        <IonListHeader>\n                  <IonLabel className=\"List-Header\">Choose a validation provider from the list</IonLabel>\n                </IonListHeader>\n<br/>\n\n                {validationProviders.emailValidationProviders && validationProviders.emailValidationProviders.map((emailValidationProvider: any) => \n                <IonListHeader key={emailValidationProvider.id} data-providerid={emailValidationProvider.id} className=\"fieldContainer\" style={{'padding': '0', 'maxHeight': '85px'}} onClick={(e) => handleValidationProviderClick(e)}>\n                  <IonGrid>\n                    <IonRow>\n                      <IonCol size=\"3\">\n                        <img src={emailValidationProvider.logo} alt=\"\" style={{'width': '64px', 'height': '64px'}}/>\n                      </IonCol>\n                      <IonCol size=\"9\">\n\n                        <IonGrid style={{'marginTop': '5px'}}>\n                          <IonRow><IonCol style={{'padding': '0'}}>                  \n                            <h2 style={{'margin': '0', 'padding': '0', 'fontSize': '12px'}}>{emailValidationProvider.name}</h2>\n                          </IonCol></IonRow>\n                          <IonRow>\n                            <IonCol style={{'padding': '0', 'fontSize': '10px'}}>\n                              {Object.values(emailValidationProvider.stats).reduce((a:any, b:any) => a + b, 0)} total requests\n                            </IonCol>\n                          </IonRow>\n\n                          <IonRow>\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-check.svg\" />\n                              <span> {emailValidationProvider.stats.Approved ?? 0}</span> \n                            </IonCol>\n\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-rejected.svg\" />\n                              <span> {emailValidationProvider.stats.Rejected ?? 0}</span> \n                            </IonCol>\n\n                            <IonCol style={{'paddingLeft': '0', 'fontSize': '10px'}}>\n                              <img style={{'height': '8px', 'width': '8px', 'margin': '0'}} alt=\"\" src=\"/assets/images/components/icon-wait.svg\" />\n                              <span> {Object.keys(emailValidationProvider.stats).reduce(function (previous, key) {\nif(key === 'New' || key === 'In progress'){\n    return previous + emailValidationProvider.stats[key];\n} else {\n  return previous\n}\n}, 0)\n}</span>\n                            </IonCol>\n                          </IonRow>\n                        </IonGrid>\n                      </IonCol>\n                    </IonRow>\n                  </IonGrid>\n                  <img style={{'width': '9px', 'height': '16px'}} alt=\"\" src=\"/assets/images/components/icon-arrow.svg\" />\n                </IonListHeader>\n                )}               \n        </IonCol>\n        </IonRow>\n\n      </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ServiceInvokePage;\n","import React from 'react';\nimport { IonContent, IonHeader,IonListHeader, IonPage, IonTitle,IonImg,IonGrid,IonButtons,IonBackButton,IonRow,IonCol,IonLabel, IonButton, IonToolbar } from '@ionic/react';\nimport './Pleasewait.css';\nconst PleaseWaitPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader className=\"main-header\">\n        <IonToolbar>\n        <IonButtons slot=\"start\">\n          <IonBackButton />\n        </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n      <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Email Verification</IonTitle>\n        </IonToolbar>\n      <IonGrid className=\"pad-me--top\">\n        <IonRow>\n        <IonCol className=\"Providers-List\">\n        <IonImg className=\"loader text-center\" src=\"../assets/images/components/loading.gif\"></IonImg>\n        <IonListHeader>\n          \n                  <IonLabel className=\"List-Header\">Please Wait… <br></br>\nProcessing Your Request</IonLabel>\n                </IonListHeader>\n<br/>\n  <IonButton routerLink='/home' ></IonButton>\n        </IonCol>\n        </IonRow>\n\n      </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default PleaseWaitPage;","import React from 'react';\nimport { IonRow,IonCol,IonLabel, IonThumbnail,IonButton, IonItem } from '@ionic/react';\nimport './RequestBlocks.css';\nimport moment from 'moment'\n\nconst RequestBlocks = (props: any) => {\n\n  const relativeTime = function(datetime:any) {\n    if (!datetime) return \"\";\n\n    return moment.utc(datetime).fromNow()\n  }    \n\n  const requests_txn = props.requests\n  return (\n        <>\n        {requests_txn && requests_txn.length > 0 ? \n        requests_txn.map((txn: any) =>\n          <IonRow key={txn.id}>\n          <IonCol className=\"RequestBlock\">\n          <IonItem routerLink={`/requests/details/${txn.id}`}>\n                    <IonThumbnail slot=\"start\">\n                      <img src=\"../assets/images/components/icon-email--request.svg\" alt=\"\" />\n                    </IonThumbnail>\n                    <IonLabel>\n                      <h2>Email Validation</h2>\n                      <p>{relativeTime(txn.created)}</p>\n                    </IonLabel>\n                    <IonButton shape=\"round\" className=\"status\" style={{margin: 0}} color={`${txn.status === \"Approved\" ? \"success\" : \"\"}${(txn.status === \"New\" || txn.status === 'Cancelation in progress') ? \"light\" : \"\"}${txn.status === \"In progress\" ? \"primary\" : \"\"}${txn.status === \"Rejected\" ? \"danger\" : \"\"}${txn.status === \"Expired\" ? \"medium\" : \"\"}${txn.status === \"Canceled\" ? \"warning\" : \"\"}`} \n                    slot=\"end\">\n                      {`\n                        ${txn.status === \"Approved\" ? \"Approved\" : \"\"} \n                        ${txn.status === \"New\" ? \"New\" : \"\"}\n                        ${txn.status === \"In progress\" ? \"In Progress\" : \"\"}\n                        ${txn.status === \"Rejected\" ? \"Rejected\" : \"\"}\n                        ${txn.status === \"Expired\" ? \"Expired\" : \"\"}\n                        ${txn.status === \"Canceled\" ? \"Cancelled\" : \"\"}\n                        ${txn.status === \"Cancelation in progress\" ? \"Cancelling\" : \"\"}\n                      `}                      \n                      </IonButton>\n                  </IonItem>\n          </IonCol>\n          </IonRow>\n        ) : \n        \n        <IonRow>\n        <IonCol className=\"RequestBlock\">\n          <p>No request made so far.</p>\n        </IonCol>\n      </IonRow>\n      }\n      </>\n  );\n};\n\nexport default RequestBlocks;","import React from 'react';\nimport { IonContent, IonPage, IonSegment, IonSegmentButton, IonTitle,IonGrid,IonRow,IonCol,IonLabel, IonToolbar, IonRefresher, IonRefresherContent, useIonViewWillEnter } from '@ionic/react';\nimport './Requests.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from '../store'\nimport RequestBlocks from './RequestBlocks';\nimport { setSelectedTabRequests } from '../store/requests';\nimport { RefresherEventDetail } from '@ionic/core';\n\nimport { useRequests } from '../hooks/useRequests'\nimport { getAllRequests } from '../store/requests'\n\nconst RequestsPage: React.FC = () => {\n\n  const dispatch = useDispatch()  \n  const requests = useSelector((state:AppState) => state.requests)\n  const user = useSelector((state:AppState) => state.auth.user)  \n\n  const doRefresh = (event: CustomEvent<RefresherEventDetail>) => {\n    sendGetAllRequestsReq(user)\n\n    setTimeout(() => {\n      event.detail.complete();\n    }, 2000);\n  }\n\n  const [sendGetAllRequestsReq] = useRequests((txn:any) => { \n    if(txn) {\n      dispatch(getAllRequests(txn))\n    }\n   })   \n\n   useIonViewWillEnter(() => {\n    sendGetAllRequestsReq(user)\n   });\n\n  const handleClick = function(e: any) {\n    let tab_event = e.detail.value;\n    if(tab_event === 'all'){\n      dispatch(setSelectedTabRequests({'name':'all','data':requests.txn}))\n    }\n    if(tab_event === 'active'){\n      dispatch(setSelectedTabRequests({'name':'pending','data':requests.pending_txn}))      \n    }\n    if(tab_event === 'approved'){\n      dispatch(setSelectedTabRequests({'name':'approved','data':requests.approved_txn}))            \n    }\n    if(tab_event === 'rejected'){\n      dispatch(setSelectedTabRequests({'name':'rejected','data':requests.rejected_txn}))            \n    }\n    if(tab_event === 'expired'){\n      dispatch(setSelectedTabRequests({'name':'expired','data':requests.expired_txn}))            \n    }\n    // if(tab_event === 'cancelled'){\n    //   dispatch(setSelectedTabRequests({'name':'cancelled','data':requests.cancelled_txn}))            \n    // }    \n  }  \n\n  return (\n    <IonPage>\n      <IonContent>\n\n        <IonRefresher className=\"refresher\" slot=\"fixed\" onIonRefresh={doRefresh} pullFactor={0.5} pullMin={80} pullMax={200}>\n            <IonRefresherContent\n            pullingText=\"Pull to refresh\"\n            refreshingSpinner=\"circles\"\n            refreshingText=\"Refreshing Requests Status...\">\n            </IonRefresherContent>\n        </IonRefresher>\n\n      <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Requests</IonTitle>\n        </IonToolbar>\n      <IonGrid>\n        <IonRow>\n          <IonCol>\n            <IonSegment className=\"custom-segment\" scrollable onIonChange={(e:any) => handleClick(e)}>\n          <IonSegmentButton value=\"all\" className={requests.selected_tab_name === 'all' ? 'active-tab' : ''}>\n            <IonLabel>All</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"active\" disabled={requests.pending_txn == null || requests.pending_txn.length === 0}>\n            <IonLabel>Active</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"approved\" disabled={requests.approved_txn == null || requests.approved_txn.length === 0}>\n            <IonLabel>Approved</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"rejected\" disabled={requests.rejected_txn == null || requests.rejected_txn.length === 0}>\n            <IonLabel>Rejected</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"expired\" disabled={requests.expired_txn == null || requests.expired_txn.length === 0}>\n            <IonLabel>Expired</IonLabel>\n          </IonSegmentButton>\n          {/* <IonSegmentButton value=\"cancelled\" disabled={requests.cancelled_txn == null || requests.cancelled_txn.length === 0}>\n            <IonLabel>Cancelled</IonLabel>\n          </IonSegmentButton> */}\n        </IonSegment>\n          </IonCol>\n        </IonRow>\n\n        <RequestBlocks requests={requests.selected_tab_txn || {}} />\n\n      </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default React.memo(RequestsPage);","import React from 'react';\nimport { IonButton, IonGrid, IonRow, IonCol, IonListHeader, IonLabel, IonToolbar, IonImg, IonPage, IonTitle, IonContent, IonTextarea, IonIcon } from '@ionic/react';\nimport './Profile.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../store'\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\nimport { showNotification, hideNotification } from '../store/requests';\n\ndeclare global{\n  interface Window {\n      cordova : any\n  }\n}\n\nconst ProfilePage: React.FC = () => {\n\n  const dispatch = useDispatch()\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => '/profile'))\n    }\n   })\n  \n  const user = useSelector((state:AppState) => state.auth.user)\n\n  const copyText = function (elementId: any){\n    let copyText:any = document.querySelector(\"#\" + elementId);\n    let inputField = copyText.getElementsByTagName(\"textarea\")[0];\n    inputField.select();\n    document.execCommand(\"copy\");    \n    dispatch(showNotification({\"message\": \"Copied to clipboard\", \"type\": \"primary\", \"show\": true})) \n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n  }\n\n  return (\n    <IonPage className=\"Profile\">\n      <IonContent>\n        <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">My Account</IonTitle>\n        </IonToolbar>\n        <IonGrid className=\"pad-me--top thick-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n                <h2 style={{margin: 0}}>Your DID</h2>\n                <IonRow style={{marginLeft: '-5px'}}>\n                  <IonCol size=\"9\" className=\"userdid\">\n                    <IonTextarea rows={2} cols={20} id=\"userDID\" readonly value={user && user.id}>\n                    </IonTextarea>\n                  </IonCol>\n                    <IonCol size=\"1\" style={{margin: 'auto'}}>\n                      <IonIcon name=\"copy-outline\" src=\"/assets/images/icons/copy-outline.svg\" onClick={(e:any) => copyText(\"userDID\")} />\n                  </IonCol>\n                  <IonCol size=\"2\" style={{margin: 'auto'}}>\n              <img className=\"avatar-profile\" alt=\"\"\n    src={`${user && user.avatar ? user.avatar : \"../assets/images/components/default-avatar@2x.png\" }`\n      } />                \n              </IonCol>                                \n                </IonRow>\n              </IonCol>\n\n            </IonRow>\n\n\n          <IonRow>\n\n          { user && user.name &&          \n          <IonListHeader className=\"fieldContainer\">\n            <IonLabel className=\"label\"><IonIcon className=\"vertical-top\" name=\"person-outline\" src=\"/assets/images/icons/person-outline.svg\"></IonIcon><span className=\"icon-divider\">Name</span></IonLabel>\n            <IonLabel className=\"value\">{user.name}</IonLabel>\n          </IonListHeader>\n          }\n\n          { user && user.email &&          \n          <IonListHeader className=\"fieldContainer\">\n            <IonLabel className=\"label\"><IonIcon className=\"vertical-top\" name=\"mail-outline\" src=\"/assets/images/icons/mail-outline.svg\"></IonIcon><span className=\"icon-divider\">Email</span></IonLabel>\n            <IonLabel className=\"value\">{user.email}</IonLabel>\n          </IonListHeader>\n          }\n\n          { user && user.telephone &&                    \n          <IonListHeader className=\"fieldContainer\">\n            <IonLabel className=\"label\"><IonIcon className=\"vertical-top\" name=\"phone-portrait-outline\" src=\"/assets/images/icons/phone-portrait-outline.svg\"></IonIcon><span className=\"icon-divider\">Mobile Phone</span></IonLabel>\n            <IonLabel className=\"value\">{user.telephone}</IonLabel>\n          </IonListHeader>\n          }\n\n          </IonRow>\n          <IonRow className=\"text-center\">\n            <IonCol>\n              <IonButton className=\"signOut text-center\" color=\"light\" onClick={() => signIn({ name: false, email: false, avatar: false })}>              \n                <IonImg className=\"sign-out-button\" src=\"../assets/images/components/icon-sign-out.svg\" ></IonImg> Refresh Credentials\n              </IonButton>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default React.memo(ProfilePage);\n","declare let appManager: AppManagerPlugin.AppManager;\n\nexport function useCredSaver(optionalCallback: any = noop) {\n  const credSave = (credentials: any) => {\n    /**\n     * Request credential saving to the DID application.\n     */\n\n    credentials = [credentials.verifiedCredential]\n\n    appManager.sendIntent(\"credimport\", { credentials }, {}, (response: any) => {\n\n      if (response && response.result) {\n        optionalCallback(credentials)\n      }\n    })\n  }\n  return [credSave] as [(obj: any) => void]\n}\n\nfunction noop() {}","export function useCredSaved(optionalCallback: any = noop) {\n\n  const credSaved = (confirmation_id: any) => {\n    /**\n     * Update cred saved to the backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n\n        return response.json();\n      }\n\n      postData(`${process.env.REACT_APP_UPDATE_CRED_SAVED}` + confirmation_id.confirmation_id)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data, \"message\": \"Credentials saved successfully.\"});                      \n          }\n        });\n  }\n  return [credSaved] as [(obj: any) => void]\n}\n\nfunction noop() {}","export function useCancelRequest(optionalCallback: any = noop) {\n\n  const requestCancelled = (confirmation_id: any) => {\n    /**\n     * Cancel the New/In progress request via backend API.\n     */\n\n      async function postData(url = '', data = {}) {\n\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n\n        return response.json();\n      }\n\n      postData(`${process.env.REACT_APP_CANCEL_REQUEST}` + confirmation_id.confirmation_id)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data, \"message\": \"Cancellation initiated successfully.\"});                      \n          }\n        });\n  }\n  return [requestCancelled] as [(obj: any) => void]\n}\n\nfunction noop() {}","import React, { useCallback } from 'react';\nimport { IonContent, IonPage, IonTitle,IonListHeader, IonGrid,IonRow,IonCol,IonLabel,IonToolbar, IonTextarea, IonIcon, IonButton, useIonViewWillEnter, useIonViewWillLeave, IonImg } from '@ionic/react';\nimport './Details.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from '../store';\nimport { useParams } from 'react-router-dom';\nimport { useCredSaver } from '../hooks/useCredSaver';\nimport { useCredSaved } from '../hooks/useCredSaved';\nimport { showNotification, hideNotification, credSaved, requestCancelled } from '../store/requests';\nimport moment from 'moment'\nimport { useCancelRequest } from '../hooks/useCancelRequest';\n\ndeclare let titleBarManager: TitleBarPlugin.TitleBarManager;\n\nconst DetailsPage: React.FC = ({ history }: any) => {\n\n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n    },\n    [history],\n  );\n\n  let myIconListener = (menuIcon:any) => {\n    if (menuIcon.key === \"back\") {\n        goTo('/requests')\n    }\n  };\n\n  useIonViewWillEnter(() => {    \n      titleBarManager.setIcon(1, {\n        key: \"back\",\n        iconPath: \"back\"\n      });\n\n      titleBarManager.addOnItemClickedListener(myIconListener);\n  });\n\n  useIonViewWillLeave(() => {\n    titleBarManager.removeOnItemClickedListener(myIconListener);    \n    titleBarManager.setIcon(1, {\n      key: '',\n      iconPath: ''\n    });\n  })\n\n  const dispatch = useDispatch()\n\n  const requests = useSelector((state:AppState) => state.requests)\n  const validationProviders = useSelector((state:AppState) => state.validationProviders)\n  const { id } = useParams()\n\n  let requestDetails = requests.txn.filter((txn: any) => txn.id === id)\n  if(requestDetails){\n    requestDetails = requestDetails[0]\n  }\n  \n\n\n  let provider = {'name': '', 'logo': ''};  \n  if(requestDetails && requestDetails.validationType === 'email'){\n     provider = validationProviders.emailValidationProviders.filter((provider:any) => provider.id === requestDetails.provider)[0]\n  }\n\n  const copyText = function (elementId: any){\n    let copyText:any = document.querySelector(\"#\" + elementId);\n    let inputField = copyText.getElementsByTagName(\"textarea\")[0];\n    inputField.select();\n    document.execCommand(\"copy\");   \n    dispatch(showNotification({\"message\": \"Copied to clipboard\", \"type\": \"primary\", \"show\": true})) \n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n  }\n\n  const formatTime = function(datetime:any) {\n    if (!datetime) return \"\";\n\n    return moment.utc(datetime).format('MMMM Do YYYY, h:mm:ss a')    \n  }   \n\n\n  const [sendCredSaveIntent] = useCredSaver((credentials:any) => { \n      const confirmation_id = requestDetails.id\n      sendCredSaved({ confirmation_id });\n   })\n\n   const [sendCredSaved] = useCredSaved((response:any) => {\n    dispatch(credSaved(response))\n    dispatch(showNotification({\"message\": response.message, \"type\": \"success\", \"show\": true}))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n   })\n\n   const handleCancelRequestClick = (e:any) => {\n    const confirmation_id = requestDetails.id\n    sendCancelRequest({ confirmation_id });\n   }\n\n   const [sendCancelRequest] = useCancelRequest((response:any) => {\n    dispatch(requestCancelled(response))\n    dispatch(showNotification({\"message\": response.message, \"type\": \"success\", \"show\": true}))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, 3000)           \n   })\n\n  const handleSaveCredClick = (e: any) => {\n\n    let verifiedCredential = requestDetails.verifiedCredential\n\n    //Build request for credimport intent\n    // as found at https://developer.elastos.org/build/elastos_scheme/#request-parameters-2        \n    verifiedCredential.credentialSubject.email = requestDetails.requestParams.email\n    // verifiedCredential.proof.jws = verifiedCredential.proof.signature\n    // delete verifiedCredential.proof.signature\n    // verifiedCredential.proof.proofPurpose = \"assertionMethod\"\n\n    // verifiedCredential[\"@context\"] = [\n    //   \"https://www.w3.org/2018/credentials/v1\",\n    //   \"https://www.w3.org/2018/credentials/examples/v1\"\n    // ]\n\n    sendCredSaveIntent({ verifiedCredential });\n  }  \n\n  return (\n    <>\n    {requestDetails &&\n    <IonPage className=\"Details\">\n      <IonContent>\n        <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Request Details</IonTitle>\n        </IonToolbar>\n        <IonGrid className=\"pad-me--top thick-padding\">\n\n\n          <IonRow \n          className={`text-center \n          ${requestDetails.status === \"Approved\" ? \"approved-tooltip\" : \"\"} \n          ${(requestDetails.status === \"New\" || requestDetails.status === \"Cancelation in progress\") ? \"pending-tooltip\" : \"\"} \n          ${requestDetails.status === \"In progress\" ? \"inprogress-tooltip\" : \"\"} \n          ${requestDetails.status === \"Rejected\" ? \"rejected-tooltip\" : \"\"} \n          ${requestDetails.status === \"Expired\" ? \"expired-tooltip\" : \"\"} \n          ${requestDetails.status === \"Canceled\" ? \"cancelled-tooltip\" : \"\"} \n          `}>\n            <IonCol>\n              <IonIcon src=\n              {`\n                ${requestDetails.status === \"Approved\" ? \"/assets/images/icons/icon-check.svg\" : \"\"} \n                ${(requestDetails.status === \"New\" || requestDetails.status === \"Cancelation in progress\") ? \"/assets/images/icons/icon-wait.svg\" : \"\"}\n                ${requestDetails.status === \"In progress\" ? \"/assets/images/icons/icon-in-progress.svg\" : \"\"}\n                ${requestDetails.status === \"Rejected\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n                ${requestDetails.status === \"Expired\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n                ${requestDetails.status === \"Canceled\" ? \"/assets/images/icons/icon-rejected.svg\" : \"\"}\n              `}\n              ></IonIcon>\n              <IonLabel>\n              {`\n                ${requestDetails.status === \"Approved\" ? \"Approved\" : \"\"} \n                ${requestDetails.status === \"New\" ? \"Waiting for Approval\" : \"\"}\n                ${requestDetails.status === \"In progress\" ? \"Validation In Progress\" : \"\"}\n                ${requestDetails.status === \"Rejected\" ? \"Rejected\" : \"\"}\n                ${requestDetails.status === \"Expired\" ? \"Expired\" : \"\"}\n                ${requestDetails.status === \"Canceled\" ? \"Cancelled\" : \"\"}\n                ${requestDetails.status === \"Cancelation in progress\" ? \"Cancellation In Progress\" : \"\"}\n              `}\n              </IonLabel>\n            </IonCol>\n          </IonRow>\n\n\n          <IonRow>\n          <h2>Request</h2>\n          { requestDetails && requestDetails.validationType &&           \n            <IonListHeader className=\"fieldContainer fieldContainer2\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Validation Type</IonLabel>\n              </IonCol>\n              <IonCol size=\"8\" className='ion-text-right'>\n                  <IonImg src={`\n                    ${requestDetails.validationType === \"email\" ? \"../assets/images/components/icon-email.svg\" : \"\"}\n                    ${requestDetails.validationType === \"phone\" ? \"../assets/images/components/icon-phone.svg\" : \"\"}\n                    ${requestDetails.validationType === \"name\" ? \"../assets/images/components/icon-name.svg\" : \"\"}\n                  `} style={{height: '32px', width: '32px', display: 'inline-block', verticalAlign: 'bottom'}}  /> \n                  <IonLabel className=\"value\" style={{verticalAlign: 'super'}}>{requestDetails.validationType.charAt(0).toUpperCase()}{requestDetails.validationType.slice(1)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.verifiedCredential.issuanceDate &&           \n            <IonListHeader className=\"fieldContainer fieldContainer2\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Issuance Date</IonLabel>\n              </IonCol>  \n              <IonCol size=\"8\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{formatTime(requestDetails.verifiedCredential.issuanceDate)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.verifiedCredential.expirationDate &&           \n            <IonListHeader className=\"fieldContainer\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Expiration Date</IonLabel>\n              </IonCol>  \n              <IonCol size=\"8\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{formatTime(requestDetails.verifiedCredential.expirationDate)}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n          </IonRow>\n\n          <IonRow>\n          <h2>Validator</h2>\n          { requestDetails && requestDetails.provider &&           \n            <IonListHeader className=\"fieldContainer fieldContainer2\">\n              <IonCol size=\"4\">\n                <IonLabel className=\"label\">Name</IonLabel>\n              </IonCol>                \n              <IonCol size=\"8\" className=\"ion-text-right\">\n                <img src={provider.logo} style={{height: '32px', width: '32px', display: 'inline-block', verticalAlign: 'bottom', borderRadius: '50%'}} alt=\"\" /> \n                <IonLabel className=\"value ion-text-right\" style={{paddingLeft: '5px', verticalAlign: 'super'}}>{provider.name}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.verifiedCredential.issuer &&           \n            <IonListHeader className=\"fieldContainer\">\n            <IonCol size=\"3\">\n              <IonLabel className=\"label\">DID</IonLabel>\n            </IonCol>            \n            <IonCol size=\"8\" className=\"validatordid ion-text-right\">\n              <IonTextarea rows={2} cols={12} id=\"validatorDID\" readonly value={requestDetails && requestDetails.verifiedCredential.issuer}>\n              </IonTextarea>\n            </IonCol>\n            <IonCol size=\"1\" style={{margin: 'auto'}}>\n              <IonIcon name=\"copy-outline\" src=\"/assets/images/icons/copy-outline.svg\" onClick={(e:any) => copyText(\"validatorDID\")} />\n            </IonCol>           \n            </IonListHeader> \n            }           \n            </IonRow>\n\n            <IonRow>\n            <h2>Your Credentials</h2>\n            <IonListHeader className=\"fieldContainer fieldContainer2\">\n            <IonCol size=\"3\">\n              <IonLabel className=\"label\">DID</IonLabel>\n            </IonCol>            \n            <IonCol size=\"8\" className=\"userdid ion-text-right\">\n              <IonTextarea rows={2} cols={12} id=\"userDID\" readonly value={requestDetails && requestDetails.did}>\n              </IonTextarea>\n            </IonCol>\n            <IonCol size=\"1\" style={{margin: 'auto'}}>\n              <IonIcon name=\"copy-outline\" src=\"/assets/images/icons/copy-outline.svg\" onClick={(e:any) => copyText(\"userDID\")} />\n            </IonCol>           \n            </IonListHeader> \n            { requestDetails && requestDetails.requestParams.name &&          \n            <IonListHeader className=\"fieldContainer\">\n              <IonCol size=\"3\">\n                <IonLabel className=\"label\">Name</IonLabel>\n              </IonCol>\n              <IonCol size=\"9\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{requestDetails.requestParams.name}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.requestParams.email &&          \n            <IonListHeader className=\"fieldContainer\">\n              <IonCol size=\"3\">\n                <IonLabel className=\"label\">Email</IonLabel>\n              </IonCol>\n              <IonCol size=\"9\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{requestDetails.requestParams.email}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }\n            { requestDetails && requestDetails.requestParams.telephone &&          \n            <IonListHeader className=\"fieldContainer\">\n              <IonCol size=\"3\">\n                <IonLabel className=\"label\">Mobile Phone</IonLabel>\n              </IonCol>\n              <IonCol size=\"9\" className=\"ion-text-right\">\n                <IonLabel className=\"value\">{requestDetails.requestParams.telephone}</IonLabel>\n              </IonCol>\n            </IonListHeader>\n            }                        \n          </IonRow>\n          { requestDetails && (requestDetails.status === 'New' || requestDetails.status === 'In progress') &&          \n          <IonRow className=\"text-center\">\n            <IonCol>\n              <IonButton className=\"btnCancelRequest text-center\" fill=\"outline\"\n              onClick={(e) => handleCancelRequestClick(e)}\n              color=\"danger\"\n          >Cancel Request</IonButton>\n            </IonCol>\n          </IonRow>\n          }\n          <IonRow className=\"text-center\">\n            <IonCol>\n              <IonButton className=\"btnCredentials text-center\" \n              onClick={(e) => handleSaveCredClick(e)}\n              color={requestDetails.isSavedOnProfile === false && requestDetails.status === \"Approved\" ? 'success' : 'medium'}\n              disabled={requestDetails.isSavedOnProfile === false && requestDetails.status === \"Approved\" ? false : true}\n          >{requestDetails.isSavedOnProfile === true ? 'Saved' : 'Save Credentials'}</IonButton>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n    }\n    </>\n  );\n};\n\nexport default DetailsPage;","import React, { useCallback, useEffect } from 'react';\nimport { IonPage, IonGrid, IonRow, IonCol, IonContent, IonImg } from '@ionic/react';\nimport './SplashScreen.css';\nimport { useDispatch } from 'react-redux';\nimport { authCheckStatus } from '../store/auth'\nimport { Plugins } from '@capacitor/core';\n\nconst SplashScreenPage: React.FC = ({ history }: any) => {\n\n  const { Storage } = Plugins;\n  const dispatch = useDispatch()\n\n  const goTo = useCallback(\n    (path: string) => {\n      if(history){\n        history.push(path, { direction: 'forward' });\n      }\n    },\n    [history],\n  );\n  \n  const onDeviceReady = useCallback(     \n    async () => {\n      const hasOnboarded = await Storage.get({ key: 'onboarded' })\n        setTimeout(async () => {\n          if(!hasOnboarded.value){\n            await Storage.set({ key: 'onboarded', value: 'true'})        \n            goTo('/onboarding')  \n          } else {\n            dispatch(authCheckStatus(() => goTo('/home')))\n          }\n        }, 3000)      \n    },\n    [Storage, dispatch, goTo],\n  );\n\n\n  // const onDeviceReady = useCallback(\n  //   () => {\n  //     setTimeout(() => {\n  //       dispatch(authCheckStatus(() => goTo('/home'), () => goTo('/onboarding')))\n  //     }, 3000)      \n  //   },\n  //   [dispatch, goTo],\n  // );  \n\n  useEffect(() => {\n    document.addEventListener('deviceready', onDeviceReady, false);\n\n    return () => {\n      document.removeEventListener('deviceready', onDeviceReady);\n    };\n  }, [onDeviceReady]);\n\n  return (\n    <IonPage className=\"SplashScreen\">\n      <IonContent className=\"background\" fullscreen>\n        <IonGrid>\n          <IonRow className=\"ion-text-center\">\n            <IonCol className=\"ion-align-items-center\">\n              <div>\n                <IonImg className=\"animated zoomIn delay-2s logo text-center spacer\" src=\"../assets/images/components/logo_vertical--white.svg\" />\n              </div>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SplashScreenPage;\n","import React, { useState, useCallback } from 'react';\nimport { IonPage, IonImg, IonGrid, IonRow, IonCol, IonContent, IonButton, IonAlert } from '@ionic/react';\nimport './OnBoarding.css';\nimport { useDispatch } from 'react-redux';\nimport { useDID } from '../hooks/useDID';\nimport { login } from '../store/auth';\n\nconst OnBoardingPage: React.FC = ({ history }: any) => {\n\n  const dispatch = useDispatch()\n  const [showTutorial, setShowTutorial] = useState(false);\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => goTo('/home')))\n    }\n   })\n  \n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n    },\n    [history],\n  );\n\n  return (\n    <IonPage className=\"OnBoarding\">\n      <IonContent className=\"background\" fullscreen>\n\n      <IonGrid>\n        <IonRow>\n          <IonCol>\n            <div className=\"spacer\"></div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"\">\n              <IonImg className=\"logo2 ion-text-center text-center\" src=\"../assets/images/components/logo-horizontal--black.svg\" />\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"custom-margin-04 custom\"></div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div  className=\"ion-text-center\">\n              <IonImg className=\"graphics-01 text-center\" src=\"../assets/images/components/graphics-01.svg\" />\n            </div>\n          </IonCol>\n        </IonRow>  \n        <IonRow className=\"ion-text-center\">\n          <IonCol className=\"ion-align-items-center\">\n            <div>\n              <h4 style={{marginTop: 0}}>DID Validation Services</h4>\n              <h5>Email, Name, Phone</h5>\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"custom-margin-03\"></div>\n          </IonCol>\n        </IonRow>\n        <IonRow className=\"ion-text-center\">\n          <IonCol className=\"ion-align-items-center\">\n            <div>\n              <IonButton className=\"button cta\" onClick={() => { signIn({ name: false, email: false, avatar: false })}}>\n                <IonImg src=\"../assets/images/components/did-icon.svg\" className=\"did-icon\"></IonImg>\n                 Sign in with DID</IonButton>            \n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"tutorial-link\">\n              <button onClick={() => setShowTutorial(true)}>How to use vouch?</button>\n            </div>\n          </IonCol>\n        </IonRow>        \n      </IonGrid>\n\n      </IonContent>\n\n      <IonAlert\n          isOpen={showTutorial}\n          onDidDismiss={() => setShowTutorial(false)}\n          cssClass='Support service-popup-alert no-image'\n          header={'Tutorial'}\n          message={'<ol><li>Select from the list of available services such as \"Email Validation\", \"Phone Validation\", etc</li><li>Choose your preferred validator</li><li>Wait to be verified</li><li>You can swipe down on the Home page to refresh data</li><li>Check out \"Approved\" tab from Requests page to see all your past requests</li></ol>'}\n          buttons={['OK']}\n        />\n\n    </IonPage>\n  );\n};\n\nexport default OnBoardingPage;","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux'\n\nimport { IonPage, IonImg, IonGrid, IonRow, IonCol, IonContent, IonButton } from '@ionic/react';\nimport './SignIn.css';\n\nimport { useDID } from '../hooks/useDID'\nimport { login, authCheckStatus } from '../store/auth'\n\ndeclare global{\n  interface Window {\n      cordova : any\n  }\n}\n\nconst SignInPage: React.FC = ({ history }: any) => {\n\n  const dispatch = useDispatch()\n\n  const [signIn] = useDID((credentials:any) => { \n    if(credentials.length) {\n      const credSubjects = credentials.map((cred:any) => cred.credentialSubject)\n      const user = Object.assign({}, ...credSubjects)\n      dispatch(login(user, () => goTo('/home')))\n    }\n   })\n  \n  const goTo = useCallback(\n    (path: string) => {\n      history.push(path, { direction: 'forward' });\n    },\n    [history],\n  );\n  \n  const onDeviceReady = useCallback(\n    () => {\n      dispatch(authCheckStatus(() => goTo('/home')));\n    },\n    [dispatch, goTo],\n  );\n\n  useEffect(() => {\n    document.addEventListener('deviceready', onDeviceReady, false);\n\n    return () => {\n      document.removeEventListener('deviceready', onDeviceReady);\n    };\n  }, [onDeviceReady]);\n\n  return (\n    <IonPage className=\"SignIn\">\n      <IonContent className=\"background\" fullscreen>\n\n      <IonGrid>\n      <IonRow>\n          <IonCol>\n            <div className=\"spacer\"></div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"\">\n              <IonImg className=\"logo2 ion-text-center text-center\" src=\"../assets/images/components/logo-horizontal--black.svg\" />\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol>\n            <div className=\"custom-margin-01\">\n\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow className=\"ion-text-center\">\n          <IonCol className=\"ion-align-items-center\">\n            <div>\n              <h4>Welcome to Vouch App</h4>\n            </div>\n          </IonCol>\n        </IonRow>\n        <IonRow className=\"ion-text-center\">\n          <IonCol className=\"ion-align-items-center\">\n            <div>\n              <IonButton className=\"button cta\" onClick={() => { signIn({ name: false, email: false, avatar: false })}}>\n                <IonImg src=\"../assets/images/components/did-icon.svg\" className=\"did-icon\"></IonImg>\n                 Sign in with DID</IonButton>\n            </div>\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport { IonGrid, IonRow, IonCol, IonToolbar, IonPage, IonTitle, IonContent } from '@ionic/react';\nimport './Profile.css';\nimport './Support.css';\n\nconst SupportPage: React.FC = () => {\n\n  return (\n    <IonPage className=\"Profile Support\">\n      <IonContent>\n        <IonToolbar className=\"sub-header\">\n          <IonTitle className=\"ion-text-start\">Support</IonTitle>\n        </IonToolbar>\n        <IonGrid className=\"pad-me--top thick-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n              <h2 style={{margin: 0}}>Tutorial</h2>\n              <ol>\n                <li>Select from the list of available services such as \"Email Validation\", \"Phone Validation\", etc</li>\n                <li>Choose your preferred validator</li>\n                <li>Wait to be verified</li>\n                <li>You can swipe down on the Home page to refresh data</li>\n                <li>Check out \"Approved\" tab from Requests page to see all your past requests</li>\n              </ol>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default React.memo(SupportPage);\n","export function useRequest(optionalCallback: any = noop) {\n\n  const request = (confirmation_id: any) => {\n    /**\n     * Request to get the status by confirmation id from the backend API.\n     */\n\n      async function getData(url = '') {\n\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Authorization': `${process.env.REACT_APP_BACKEND_API_KEY}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      getData(`${process.env.REACT_APP_GET_VALIDATION_REQUEST}` + confirmation_id.confirmation_id)\n        .then(response => {\n          if(response.meta.code === 200) {\n            optionalCallback({\"data\": response.data[0]});                      \n          }\n        });\n  }\n  return [request] as [(obj: any) => void]\n}\n\nfunction noop() {}","import React, { useEffect } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n  IonImg\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\nimport ServiceInvoke from './pages/ServiceInvoke';\nimport PleaseWait from './pages/Pleasewait';\nimport Requests from './pages/Requests';\nimport Profile from './pages/Profile';\nimport Details from './pages/Details';\nimport SplashScreen from './pages/SplashScreen';\nimport OnBoarding from './pages/OnBoarding';\nimport SignIn from './pages/SignIn';\nimport Support from './pages/Support';\nimport { getEmailValidationProviders } from './store/providers'\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Added CSS */\nimport '../node_modules/animate.css/animate.min.css';\n// import url('https://fonts.googleapis.com/css?family=Poppins');\n\n/* Theme variables */\nimport './theme/variables.css';\nimport './theme/fonts.css';\nimport { Storage } from '@capacitor/core';\nimport { useRequest } from './hooks/useRequest';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useProvider } from './hooks/useProvider';\nimport { AppState } from './store';\n\ndeclare let appManager: AppManagerPlugin.AppManager;\ndeclare let titleBarManager: TitleBarPlugin.TitleBarManager;\ndeclare let notificationManager: NotificationManagerPlugin.NotificationManager;\n\ntype RPCMessage = {\n  method: string;\n  param: any;\n}\n\nconst App: React.FC = () => {\n\n  const dispatch = useDispatch()  \n  const validationProviders = useSelector((state:AppState) => state.validationProviders)\n\n  useEffect(() => {\n    if(!validationProviders.emailValidationProviders){\n      sendGetEmailValidationProvidersReq('email')\n    }\n   },\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n   []\n );\n\n  //Get the list of email validation providers\n  const [sendGetEmailValidationProvidersReq] = useProvider((emailValidationProviders:any) => { \n    if(emailValidationProviders) {\n      dispatch(getEmailValidationProviders(emailValidationProviders))\n    }  \n  })\n\n  return (\n  <IonApp>\n    <IonReactRouter>\n    <IonRouterOutlet>\n      <Route path=\"/splashscreen\" component={SplashScreen} exact={true} />\n      <Route path=\"/onboarding\" component={OnBoarding} exact={true} />                \n      <Route path=\"/signin\" component={SignIn} exact={true} />                      \n      <Route exact path=\"/\" render={() => <Redirect to=\"/splashscreen\" />} />\n      <IonTabs>\n        <IonRouterOutlet>\n          <Route path=\"/home\" component={Home} exact={true} />\n          <Route path=\"/home/service-invoke\" component={ServiceInvoke} exact={true} />\n          <Route path=\"/home/pleasewait\" component={PleaseWait} exact={true} />\n          <Route path=\"/requests\" render={() => <Requests />} exact={true} />\n          <Route path=\"/requests/details/:id\" component={Details} />\n          <Route path=\"/profile\" render={() => <Profile />} exact={true} />\n          <Route path=\"/support\" render={() => <Support />} exact={true} />\n        </IonRouterOutlet>\n\n        <IonTabBar slot=\"bottom\">\n          <IonTabButton tab=\"home\" href=\"/home\">\n            <IonImg className=\"tab-icon icon-Home\" src=\"../assets/images/components/empty.png\"></IonImg>\n            <IonLabel>Home</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"requests\" href=\"/requests\">\n          <IonImg img-src=\"\" className=\"tab-icon icon-Requests\" src=\"../assets/images/components/empty.png\"></IonImg>\n            <IonLabel>Requests</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"profile\" href=\"/profile\">\n          <IonImg className=\"tab-icon icon-Profile\"  src=\"../assets/images/components/empty.png\"></IonImg>\n            <IonLabel>Profile</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"support\" href=\"/support\">\n          <IonImg className=\"tab-icon icon-Support\"  src=\"../assets/images/components/empty.png\"></IonImg>\n            <IonLabel>Support</IonLabel>\n          </IonTabButton>\n        </IonTabBar>\n      </IonTabs>\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n  )};\n\ndocument.addEventListener(\"deviceready\", () => {\n  appManager.getStartupMode((startupInfo: AppManagerPlugin.StartupInfo) => {\n      if (startupInfo.startupMode === 'service'){\n        initServiceListener();\n      } else {\n          appManager.setVisible(\"show\");\n\n          titleBarManager.setTitle(\"Vouch dApp\");\n          titleBarManager.setBackgroundColor(\"#4D2CC8\");\n          titleBarManager.setForegroundMode(0);\n      }\n  });\n}, false);\n\nconst initServiceListener = () => {\n  appManager.setListener(async (message: AppManagerPlugin.ReceivedMessage) => {\n    let rpcMessage = JSON.parse(message.message) as RPCMessage;\n    switch (rpcMessage.method) {\n        case \"new\":\n            // notificationManager.sendNotification({\n            //     key: rpcMessage.param.id,\n            //     title: `Your ${rpcMessage.param.type} validation request from ${rpcMessage.param.validator} has been generated.`,\n            //     message : `${rpcMessage.param.type}:  ${rpcMessage.param.value} `\n            // })\n\n            const requestIds = await Storage.get({ key: 'pendingRequests' });\n\n            let parsedPendingRequests:any = [];\n            if(requestIds && requestIds.value){\n              parsedPendingRequests = JSON.parse(requestIds.value)\n              parsedPendingRequests.push(rpcMessage.param.id)\n            } else {\n              parsedPendingRequests.push(rpcMessage.param.id);\n            }\n\n            await Storage.set({ key: 'pendingRequests', value: JSON.stringify(parsedPendingRequests) });\n            break;\n        default:\n            break;\n    }\n  });\n\n  checkPendingRequests();\n}\n\nconst checkPendingRequests = () => {\n\n  const intervalTime = (parseInt(`${process.env.REACT_APP_BACKGROUND_SERVICE_DELAY_MINUTES}`) * 60) * 1000;\n\n  setInterval(async () => {\n    const requestIds = await Storage.get({ key: 'pendingRequests' });\n    const emailValidationProviders = await Storage.get({ key: 'emailValidationProviders'});\n\n    if(requestIds && requestIds.value){\n      let parsedPendingRequests = JSON.parse(requestIds.value);\n      let remainingPendingRequests = JSON.parse(requestIds.value);\n\n      const [sendGetRequest] = useRequest(async (response:any) => {  \n        if (response != null && response.data != null){\n          if(response.data.status === \"Approved\" || response.data.status === \"Rejected\" || response.data.status === \"Canceled\"){\n\n            let provider = {'id': response.data.provider, 'name': ''};\n\n            if(response.data.validationType === 'email'){\n              provider = JSON.parse(emailValidationProviders.value).filter((provider:any) => provider.id === response.data.provider)[0]\n            }\n\n            let title = `${response.data.validationType.charAt(0).toUpperCase()}${response.data.validationType.slice(1)} Validation Request ${response.data.status}`\n            let message = \"\";\n            switch(response.data.status){\n              case 'Approved': \n                message = `Your email validation from ${provider.name ?? provider.id} has been approved.`\n                break;              \n              case 'Rejected': \n                message = `Your email validation from ${provider.name ?? provider.id} has been rejected. Please try sending another request or choose another validator.`\n                break;\n              case 'Canceled':\n                message = `Your email validation from ${provider.name ?? provider.id} has been cancelled because the validator did not respond to your request in time. Please try sending another request or choose another validator.`\n                break;\n              default:\n                message = `Your ${response.data.validationType} validation request from ${provider.name ?? provider.id} has been ${response.data.status}.`                              \n            }\n\n            notificationManager.sendNotification({\n              key: response.data.id,\n              title: title,\n              message: message\n            })\n\n            remainingPendingRequests = remainingPendingRequests.filter((value:any) => value !== response.data.id)  \n            await Storage.set({ key: 'pendingRequests', value: JSON.stringify(remainingPendingRequests) });                \n          }\n        }         \n      })          \n\n      for (let i = 0; i < parsedPendingRequests.length; i++) {\n        sendGetRequest({ confirmation_id: parsedPendingRequests[i] });\n      }\n    } else {\n        console.log(\"No pending requests\")\n    }\n   }, intervalTime )\n\n}\n\nexport default App;","\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { authReducer } from \"./auth\";\nimport { txnReducer } from \"./requests\";\nimport { validationProviderReducer } from \"./providers\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  requests: txnReducer,\n  validationProviders: validationProviderReducer\n});\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\n// https://github.com/GradooC/chat/tree/33bb2d5a1d2c98875b9a2eb847bb5506bb8a0732/src/store","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\n\nimport store from \"./store\";\n\nReactDOM.render(\n  // tslint:disable-next-line: jsx-wrap-multiline\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t134,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t135,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t136,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t137,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t138,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t139,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t140,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t141,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t142,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t143,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t144,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t145,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t146,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t147,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t148,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t149,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t150,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t151,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t152,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t153,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t154,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t155,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t156,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t157,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t158,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t159,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t160,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t161,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t162,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t163,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t164,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t165,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t166,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t167,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t168,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t169,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t170,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t171,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t172,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t173,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t174,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t175,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t176,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 84;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}